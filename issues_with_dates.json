[{"body": "This should say that the init_app function wants the database session and not the actual db reference.\r\n\r\nhttps://github.com/omab/python-social-auth/blob/f13a5cc3c8670a1a3bbc16410bb30ac0423d9934/social/apps/flask_app/default/models.py#L67", "created_at": "2016-10-28T18:33:22Z"}, {"body": "#1025", "created_at": "2016-10-27T19:49:38Z"}, {"body": "Adding the SocialAuthExceptionMiddleware from PSA results in a `TypeError: object() takes no parameters` error.\r\n\r\nPSA: 0.2.21\r\nDjango: 1.10.2\r\n\r\nDocumentation: http://python-social-auth.readthedocs.io/en/latest/configuration/django.html?highlight=SocialAuthExceptionMiddleware#exceptions-middleware\r\n\r\nI also see this seems to have been fixed (?): https://github.com/omab/python-social-auth/issues/953\r\n\r\n```\r\nMIDDLEWARE = [\r\n    'opbeat.contrib.django.middleware.OpbeatAPMMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.middleware.locale.LocaleMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.redirects.middleware.RedirectFallbackMiddleware',\r\n    'debug_toolbar.middleware.DebugToolbarMiddleware',\r\n    'social.apps.django_app.middleware.SocialAuthExceptionMiddleware',\r\n]\r\n```", "created_at": "2016-10-22T11:35:18Z"}, {"body": "Introduced on October 5th, 2016\r\nhttps://developers.facebook.com/docs/apps/changelog/", "created_at": "2016-10-19T10:13:21Z"}, {"body": "Closes #1045. They are using an endpoint that doesn\u2019t exist anymore,\r\nand the main backends are now more up to date.", "created_at": "2016-10-18T17:04:29Z"}, {"body": "I received a notification from Facebook saying I was using a deprecated endpoint that is going to be shut down soon. When I dug, I realised I was using `Facebook2OAuth2` back-end instead of the more up-to-date `FacebookOAuth2`.\r\n\r\nIt looks like `Facebook2OAuth2` was added when `FacebookOAuth2` was still using v1 of the open graph, and Facebook2 could now be removed, as it's using [unavailable endpoints](https://developers.facebook.com/docs/apps/changelog/).\r\n\r\nI suggest to either:\r\n* Change `Facebook2OAuth2` to be same as `FacebookOAuth2` with a deprecation warning logged in the `__init__()`.\r\n* New release without forgetting to mention the breaking change in the release notes ", "created_at": "2016-10-18T14:08:21Z"}, {"body": "Just noticed you support Azure AD but don't mention it in the README. \r\n\r\nThis gist shows what to do: https://gist.github.com/jayme-github/138316675f29981e1e00a2e1ef78b345", "created_at": "2016-10-17T06:59:35Z"}, {"body": "It seems like the google plus sign in has been deprecated in favor of google sign in and that we should be using https://www.googleapis.com/oauth2/v3/tokeninfo?id_token to verify the token instead of using https://www.googleapis.com/plus/v1/people/me.  ", "created_at": "2016-10-14T08:01:36Z"}, {"body": "", "created_at": "2016-10-13T16:48:49Z"}, {"body": "Hi Guys,\r\n\r\nIs there a way to use multiple social apps to integrate with each backend? Like I have two apps for Facebook and I want to dynamically use those app credentials to authenticate social users instead of specifying them in Django settings. Can this be done @omab ?\r\n\r\nThanks.", "created_at": "2016-10-12T16:10:57Z"}, {"body": "This is the same as it was done for Pyramid app - do not\nexpect that User.id will be always an Integer but get it's\ntype and use it in UserSocialAuth.user_id column.", "created_at": "2016-10-12T06:22:14Z"}, {"body": "Nesting of inline styles [doesn't currently work](http://docutils.sourceforge.net/FAQ.html#is-nested-inline-markup-possible), so the bold style was replaced with a note directive.", "created_at": "2016-10-11T15:42:47Z"}, {"body": "self.request in DjangoStrategy not contain 'next' redirect url parameter, i found this in self.request.META['HTTP_REFERER']\r\nor i don`t understand where get 'next' :)", "created_at": "2016-10-11T11:13:13Z"}, {"body": "", "created_at": "2016-10-11T04:26:29Z"}, {"body": "Would love any and all feedback. Have tried to build it correctly and test, but let me know what I've gotten wrong. One of my first attempts at doing OAuth2 of any kind.\r\n\r\nThank you!", "created_at": "2016-10-08T07:53:12Z"}, {"body": "One day i needed to configure search fields of _UserSocialAuth_ like this:\r\n\r\n>  search_fields = ['=user__id', '^user__email', '=uid']\r\n\r\nI found the setting _ADMIN_USER_SEARCH_FIELDS_, but it was very limited. It does not allow to do restrictive searches, using by [prefix the field name with an operator](https://docs.djangoproject.com/en/1.10/ref/contrib/admin/#django.contrib.admin.ModelAdmin.search_fields).\r\n\r\nAlso, since the setting has related to User model, you can't search by the other models fields.\r\n\r\nI've added new setting **ADMIN_SEARCH_FIELDS**. Please, review!", "created_at": "2016-10-06T16:51:19Z"}, {"body": "The overridden `auth_params` method in the Stripe backend isn't needed. The implementation in `social/backends/oauth.py` performs the same functionality and correctly handles `redirect_uri`.", "created_at": "2016-10-05T21:43:25Z"}, {"body": "The backend for Google OpenID Connect is broken. Here are some notes toward where the problem lies, in case someone else is tempted to go on a goose chase.\r\n\r\nIn 61dfbc2ea7a897981a15db8904c5a68d471b0515 the authorization flow for the GoogleOpenIDConnect backend fails at ``BaseOAuth2.auth_complete()``: raising an ``AuthCanceled`` exception due to an underlying 400 response by Google -- PSA is passing ``nonce``, which is not supported by the Google API.\r\n\r\nIf we remove the ``nonce`` from the request (e.g. by removing [lines 298-300 in backends.open_id.OpenIDConnectAuth.auth_complete_params()](https://github.com/omab/python-social-auth/blob/master/social/backends/open_id.py#L298-L300)), we get an ok response from Google, but PSA fails to verify Google's JWT -- we get an ``AuthTokenError`` [here](https://github.com/omab/python-social-auth/blob/master/social/backends/open_id.py#L352) with an underlying complaint from ``jwt.decode`` that \"The specified alg value is not allowed\").\r\n\r\nFrom [what I vaguely understand of OpenID Connect](http://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation), we should expect an ``alg`` header in the JWT, and so it makes sense that the PSA OpenID backend is asking ``jwt.decode`` to ``verify`` (default) the token. The exception above is raised because PSA's OpenID backend passes ``algorithms=['HS256']`` to  ``jwt.decode``, but **since Google does not pass the ``alg`` claim in the JWT verification fails**. \r\n\r\nThe missing ``alg`` claim is by design on Google's part: [Google claims that](https://developers.google.com/identity/protocols/OpenIDConnect#sendauthrequest)\r\n\r\n> Normally, it is critical that you validate an ID token before you use it, but since you are communicating directly with Google over an intermediary-free HTTPS channel and using your client secret to authenticate yourself to Google, you can be confident that the token you receive really comes from Google and is valid. \r\n\r\nHere's how Google wants you to validate their tokens: https://developers.google.com/identity/protocols/OpenIDConnect#validatinganidtoken\r\n\r\nSo, not sure what the path forward is for PSA, other than that a different validation strategy needs to be implemented.", "created_at": "2016-10-05T15:31:31Z"}, {"body": "I keep getting this error\r\n\r\nLookupError at /admin/Movies/movietitles/65/change/\r\nNo installed app with label 'Social Nonce'.\r\nRequest Method:\tGET\r\nRequest URL:\thttp://127.0.0.1:8000/admin/Movies/movietitles/65/change/\r\nDjango Version:\t1.10.2\r\nException Type:\tLookupError\r\nException Value:\t\r\nNo installed app with label 'Social Nonce'.\r\nException Location:\tC:\\Python27\\lib\\site-packages\\django\\apps\\registry.py in get_app_config, line 155\r\nPython Executable:\tC:\\Python27\\Scripts\\python.exe\r\nPython Version:\t2.7.12\r\nPython Path:\t\r\n['C:\\\\Users\\\\sallyp\\\\prjamh2\\\\poptvpynew',\r\n 'C:\\\\Users\\\\sallyp\\\\prjamh2\\\\poptvpynew',\r\n 'C:\\\\Windows\\\\SYSTEM32\\\\python27.zip',\r\n 'C:\\\\Python27\\\\DLLs',\r\n 'C:\\\\Python27\\\\lib',\r\n 'C:\\\\Python27\\\\lib\\\\plat-win',\r\n 'C:\\\\Python27\\\\lib\\\\lib-tk',\r\n 'C:\\\\Python27\\\\Scripts',\r\n 'C:\\\\Python27',\r\n 'C:\\\\Python27\\\\lib\\\\site-packages',\r\n 'c:\\\\users\\\\sallyp\\\\prjamh2\\\\turbogear\\\\myproj',\r\n 'C:\\\\Python27\\\\lib\\\\site-packages\\\\win32',\r\n 'C:\\\\Python27\\\\lib\\\\site-packages\\\\win32\\\\lib',\r\n 'C:\\\\Python27\\\\lib\\\\site-packages\\\\Pythonwin']\r\nServer time:\tWed, 5 Oct 2016 15:57:12 +0800", "created_at": "2016-10-05T07:59:24Z"}, {"body": "Closes #953", "created_at": "2016-10-03T21:42:32Z"}, {"body": "Django 1.8 deprecates and removes `django.conf.url.pattern`, so old example cannot work anymore. The urls will just be a simple list.\r\n\r\nAlso, this PR update the `TEMPLATES` configuration in `settings.py` to newer format. This is required, as of 1.10.2 the app won't be able to find the template engine, defined by old format.", "created_at": "2016-10-02T23:53:53Z"}, {"body": "Python-social-auth is getting migrated to http://github.com/python-social-auth where it's getting split on several smaller modules with their own dependencies properly specified (no more flask and django apps in the same repo), it's also an opportunity to renew the development process with a defined contribution guidelines, better versioning (semver).\r\n\r\nItems to complete the migration:\r\n\r\n- [x] Split python-social-auth in smaller modules per responsibility\r\n- [ ] Migrate omab/python-social-auth to python-social-auth org\r\n- [ ] Port examples\r\n- [ ] Apply patches from PRs on their corresponding modules\r\n- [ ] Port issues to their corresponding modules\r\n- [ ] Update this lib to depend on the new modules and ensure it's functionality\r\n- [ ] Update README noticing the deprecation of this monolithic library\r\n- [ ] Write a migration document", "created_at": "2016-10-01T14:54:03Z"}, {"body": "As for updated API response of users data these keys have been changes for more appropriate ones", "created_at": "2016-09-30T12:43:46Z"}, {"body": "Django support has been split from the main mongoengine project", "created_at": "2016-09-27T16:33:16Z"}, {"body": "", "created_at": "2016-09-26T09:05:08Z"}, {"body": "alexpantyukhin  add support peewee for flask\r\nhttps://github.com/omab/python-social-auth/pull/932\r\n\r\nbut the code above can not work  on my env:\r\n\r\nmy requirements.txt is this:\r\n$ pip freeze\r\nclick==6.6\r\nFlask==0.11.1\r\nFlask-Login==0.3.2\r\nFlask-Script==2.0.5\r\nitsdangerous==0.24\r\nJinja2==2.8\r\nMarkupSafe==0.23\r\noauthlib==2.0.0\r\n**peewee==2.8.3**\r\nPyJWT==1.4.2\r\npysqlite==2.8.3\r\npython-openid==2.2.5\r\npython-social-auth==0.2.21\r\nrequests==2.11.1\r\nrequests-oauthlib==0.7.0\r\nsix==1.10.0\r\nWerkzeug==0.11.11\r\n\r\n\r\nwhen i run the command manage.py, i got the error message like this:\r\n\r\n/flask_peewee_example$ python manage.py runserver\r\n/home/testing/env_login_test/local/lib/python2.7/site-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing **flask.ext.script** is deprecated, use flask_script instead.\r\n  .format(x=modname), ExtDeprecationWarning\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 8, in <module>\r\n    from flask_example import app, database\r\n  File \"../flask_example/__init__.py\", line 3, in <module>\r\n    from sqlalchemy import create_engine\r\n**ImportError: No module named sqlalchemy**\r\n", "created_at": "2016-09-24T08:45:06Z"}, {"body": "# **issue 1**\r\n\r\nhttps://github.com/omab/python-social-auth/blob/master/docs/backends/weibo.rst\r\n\r\ncompare to weibo backend, weixin doesn't have the backends docs like above, so that we don't know which is the right _KEY   _SECRET  values to use.\r\n\r\n# **issue 2**\r\nexample code doesn't contain the weixin backend , so does QQ backend and weibo backend.\r\nhttps://github.com/omab/python-social-auth/tree/master/examples\r\n\r\n", "created_at": "2016-09-24T08:19:37Z"}, {"body": "If the twitter account you're trying to sign into has a unicode character in their latest tweet then signing in will error.", "created_at": "2016-09-23T15:01:22Z"}, {"body": "```\r\n/usr/local/lib/python3.5/site-packages/social/apps/django_app/default/models.py:33: RemovedInDjango20Warning: on_delete will be a required arg for ForeignKey in Django 2.0. Set it to models.CASCADE on models and in existing migrations if you want to maintain the current default behavior. See https://docs.djangoproject.com/en/1.10/ref/models/fields/#django.db.models.ForeignKey.on_delete\r\n  user = models.ForeignKey(USER_MODEL, related_name='social_auth')\r\n```", "created_at": "2016-09-22T09:13:32Z"}, {"body": "Hi all,\r\n\r\nI got error in line\r\nhttps://github.com/omab/python-social-auth/blob/master/social/pipeline/user.py#L45\r\n\r\nIn this line, we split username value into parts. But if a username is an int value, then we will get an error.\r\nIn Moves backend, we store user_id (int value) in a username variable.\r\n\r\nhttps://github.com/omab/python-social-auth/blob/master/social/backends/moves.py#L25\r\n", "created_at": "2016-09-21T02:53:41Z"}, {"body": "I am using [Signup by OAuth access_token](http://python-social-auth.readthedocs.io/en/latest/use_cases.html#signup-by-oauth-access-token) along with django-oauth-toolkit for OAuth2 authentication.\r\n\r\nI used 'associate_user' pipeline to connect multiple backend with Session auth. How to use the same pipeline to connect multiple backend using OAuth2.", "created_at": "2016-09-20T14:55:50Z"}, {"body": "Closes #1016", "created_at": "2016-09-19T01:43:35Z"}, {"body": "API v1 is deprecated and will be shut down 2017-06-28\r\nhttps://blogs.dropbox.com/developers/2016/06/api-v1-deprecated/", "created_at": "2016-09-17T13:57:59Z"}, {"body": "**Type: Bug**\r\n\r\n**Version**: 0.2.21\r\n**Django**: 1.9.2\r\n\r\n**File**: social/pipeline/user.py\r\n**Function**: user_details\r\n\r\n**Description**: \r\nSometimes user model can store boolean flags obtained from checkbox.\r\nIn this case _details_ dict will contain boolean variable (which could be equal to _False_)\r\nIn this case the code\r\n`if value and hasattr(user, name):`\r\nwill never let the field _name_ to update, because _value_ == _False_", "created_at": "2016-09-17T11:50:57Z"}, {"body": "Hi, \r\n\r\nI'm looking to customise my pipeline such that each provider has a slightly different pipeline. Rather than throwing in a bunch of `if` statements everywhere I thought it would be much better to be able to define a pipeline per provider.\r\n\r\nFor example `SOCIAL_AUTH_PIPELINE` would be the default pipeline which could be overridden by `SOCIAL_AUTH_GOOGLE_OAUTH2_PIPELINE`.\r\n\r\nI'm happy to make a pull request for this if it is something that you would consider merging? Ideally I'd like to see it released fairly soon so that I can take advantage of it in my current project.", "created_at": "2016-09-15T08:11:29Z"}, {"body": "Now fk looks like\r\n`\"user_id_refs_id_eb775862\" FOREIGN KEY (user_id) REFERENCES membership_user(id) DEFERRABLE INITIALLY DEFERRED`\r\n\r\nIt`s problem if we want to delete user in db", "created_at": "2016-09-14T19:06:43Z"}, {"body": "Line 61 of `social/apps/django_app/default/models.py` uses `field.rel`:\r\nhttps://github.com/omab/python-social-auth/blob/aa907384636a8ea87b86db3d5ab1580440e71665/social/apps/django_app/default/models.py#L61\r\n\r\nThis causes a warning in Django 1.9, but in Django 2.0 this code will cease to work.\r\n\r\nOn a related note, `ForeignObjectRel.to` was deprecated in favour of the model attribute.\r\nOriginal exception message: `Usage of ForeignObjectRel.to attribute has been deprecated. Use the model attribute instead.`\r\n\r\nRef: https://docs.djangoproject.com/en/1.9/releases/1.9/#field-rel-changes", "created_at": "2016-09-12T01:35:59Z"}, {"body": "`user.is_authenticated()` is used throughout code (I noticed it in `social/utils.py`), but in Django 1.10 `is_authenticated` is now a property, rather than a method.\r\n\r\nThis causes a warning in Django 1.10, but in Django 2.0 this code will cease to work.\r\n\r\nThe full exception message is `Using user.is_authenticated() and user.is_anonymous() as a method is deprecated. Remove the parentheses to use it as an attribute.`\r\n\r\nRef: https://docs.djangoproject.com/en/1.10/releases/1.10/#using-user-is-authenticated-and-user-is-anonymous-as-methods", "created_at": "2016-09-11T23:17:55Z"}, {"body": "[Quizlet](https://quizlet.com/) OAuth2 backend.\r\n\r\nThanks!", "created_at": "2016-09-08T21:48:09Z"}, {"body": "should support https://gitlab.com/ and on premises installation (custom urls)\r\n\r\ni tried to make own using this blog:\r\nhttp://widerin.net/blog/weblate-gitlab-oauth-login/\r\n\r\nin weblate, but got some errors:\r\n\r\n```\r\nweblate_1   | ERROR Internal Server Error: /accounts/complete/GitLab/\r\nweblate_1   | Traceback (most recent call last):\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/django/core/handlers/exception.py\", line 39, in inner\r\nweblate_1   |     response = get_response(request)\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 249, in _legacy_get_response\r\nweblate_1   |     response = self._get_response(request)\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\nweblate_1   |     response = self.process_exception_by_middleware(e, request)\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\nweblate_1   |     response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\r\nweblate_1   |     response = view_func(request, *args, **kwargs)\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\nweblate_1   |     return view_func(*args, **kwargs)\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 51, in wrapper\r\nweblate_1   |     return func(request, backend, *args, **kwargs)\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 28, in complete\r\nweblate_1   |     redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete\r\nweblate_1   |     user = backend.complete(user=user, *args, **kwargs)\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/social/backends/base.py\", line 41, in complete\r\nweblate_1   |     return self.auth_complete(*args, **kwargs)\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/social/utils.py\", line 246, in wrapper\r\nweblate_1   |     return func(*args, **kwargs)\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/social/backends/oauth.py\", line 385, in auth_complete\r\nweblate_1   |     state = self.validate_state()\r\nweblate_1   |   File \"/app/local/lib/python2.7/site-packages/social/backends/oauth.py\", line 88, in validate_state\r\nweblate_1   |     raise AuthStateMissing(self, 'state')\r\nweblate_1   | AuthStateMissing: Session value state missing.\r\n```\r\n\r\nso yeah, maybe some one more familiar with psa can add it to be included in distribution and be documented", "created_at": "2016-09-06T12:57:28Z"}, {"body": "I'm using partial pipelines to append fields to `details`. Those fields are used in my `create_user` for other things than storing them on the user object.\r\n\r\nHowever because of this commit: https://github.com/omab/python-social-auth/commit/9f86059e9d8070bc5ecd7ba069fadab1c9bf502a\r\n\r\nIntegrityErrors (user email already exists) the exception handling will now try to look up the user using all the fields from args and kwargs. This includes all fields from `details`. This will result in a FieldError from Django because not all fields from `details` are found on the user model", "created_at": "2016-09-06T08:43:12Z"}, {"body": "This will prevent unexpected behaviour when `AbstractUserSocialAuth` is subclassed.", "created_at": "2016-09-03T14:21:53Z"}, {"body": "Attempted fix for https://github.com/omab/python-social-auth/issues/997", "created_at": "2016-09-02T11:07:45Z"}, {"body": "VK OAuth2 used api v 3.0, but ID_KEY for this version is `uid`. You can see it at https://api.vk.com/method/users.get?user_ids=210700286&v=3.0 (Url [source](https://vk.com/dev/api_requests))\r\n\r\nVK team will [remove](https://vk.com/dev/roadmap) old versions for api at January 2017. They wrote about it [here](https://vk.com/apiclub?w=wall-1_340400).", "created_at": "2016-08-31T09:49:03Z"}, {"body": "How do I configure django admin to use python-social-auth instead of its default login form?", "created_at": "2016-08-30T14:39:46Z"}, {"body": "The following error is reported when I have a user authenticate that has already been created.\r\nI've only tested this on Facebook.\r\n\r\ndjango.get_version() = '1.9.8'\r\n\r\nRequest Method:\tGET\r\nRequest URL:\thttp://localhost:8000/complete/facebook/?redirect_state=NnCBQLERSV2fO0iFtVzUWpkaTBm2WNAP&code=AQCaa8m_gMjTEJMU3_jQrOw2wGOOoOM5vRdNawyqljmIoOinHfMJBUYQW7cn4xT1NzR759-6Hh0ZerB1Dr26Hy6jt0I6_crow1ox_GUT9GRQveHX6HH-o2nDa1GjTnql0KFn2dsxB9TErFmPkJevjf14x4BCK3vDMzRERDveMLaIcyYWT59lGSsL8srVFW9co_MOsvIzd4MSBSWZ1QwY9oZ1aiNEVd4UOV4F8NMZX0nDOg0_JjWctJNusY6vYb_JO0YvvelnOM59LtsoQ1IAB_uWdx11b9oF-DMk5dJGrnCINKjcQFOkdl8_45d97cw7AcENrmtPIWWjHrcUz5QdvOlT&state=NnCBQLERSV2fO0iFtVzUWpkaTBm2WNAP\r\nDjango Version:\t1.9.8\r\nException Type:\tTypeError\r\nException Value:\t\r\nargument of type 'NoneType' is not iterable\r\nException Location:\t/usr/local/lib/python2.7/site-packages/social/actions.py in do_complete, line 90\r\nPython Executable:\t/usr/local/opt/python/bin/python2.7\r\nPython Version:\t2.7.11", "created_at": "2016-08-28T17:35:24Z"}, {"body": "When I load backends with `load_backends`, it returns `BACKENDSCACHE`, which is unordered `dict`.\r\nIt's very unhandy to order result later, so it would be nice, if `BACKENDSCACHE` kept order of backends passed as argument", "created_at": "2016-08-23T14:22:38Z"}, {"body": "Good day, I have two django apps on nginx server with same class names. These two apps use the one PSA library. When I only create a database for the **second** app and apply all migrations loaded from remote repo, all is fine and migrations are applied. The next time when I run makemigrations or migrate, then get the next message:\r\n\r\nunhandled pending operations for model: <model_name> (referred to by fields: default.UserSocialAuth.user)\r\n\r\nAnd the problem is that I try to use makemigrations to **second app**, but app label in <model_name> is from the **first** one.\r\n\r\nHow can I handle this?\r\n\r\nThank you", "created_at": "2016-08-23T11:29:06Z"}, {"body": "Hi I'm making an app which requires non authorised users to authenticate using a social account (facebook, flickr, twitter etc.) to join an 'event'. This authorisation is then used to access parts of the user's account (wall feed etc) on their behalf (in the background).\r\n\r\nIs there a view that asks a non-authorised user (one without credentials to the main site) to authorise to the site via whatever social account type that is required (some events might need facebook, other's twitter) and then dump them back to a page saying 'thanks' and thats the end of the workflow. Therefore not logging them in as such, just creating the User I can attach to the event with their newly associated social authentication tokens etc.\r\n\r\nI've thought: once the user is created and returned, could I just make the User 'non-active' to stop login?\r\n\r\nIs there a view for each of the social auth types that would allow me to do this?", "created_at": "2016-08-22T06:07:34Z"}, {"body": "So yeah, and since there's a unique constraint (provider, uid) on the associations table, so in the end there can be only one Highlander.\r\n\r\nNot that it's super popular, but still.", "created_at": "2016-08-22T01:12:03Z"}, {"body": "Is there a way to validate email addresses but without pausing the pipeline? That is, to still allow the user to finish registering but with a flag on the user record to say their email address is not yet verified, and to change that flag once they have verified the address?\r\n\r\nThanks.", "created_at": "2016-08-19T21:42:00Z"}, {"body": "Is there any existing backend to support a \"temporary\" user? This isn't a good word for it -- let me explain what I'm looking for:\r\n\r\nWhile I want information a given user enters to be stored in a user record, and for them to be treated as if they are logged in, I don't want to require them to log in with a social account or to make a password. They'd be remembered as logged in, and so associated to their row in the users table for now, via session or cookie. While still logged in they have the option to register (i.e. set a password to go with their email address, or log in to a social account to become associated) so they can log back in later. If they don't do this their record would still be stored but they (probably?) wouldn't be able to become reassociated with it at a later time.\r\n\r\nI suspect I may be able to use the \"email\" backend for this and just not set a password, since I'll be collecting email addresses anyway. What I'm not clear on is how feasible this is, and whether I'd then easily be able to allow the user to add a password or associate a social account with the already-logged-in account.\r\n\r\nAny guidance would be greatly appreciated.", "created_at": "2016-08-19T21:24:47Z"}, {"body": "Is there a way to use the `EmailAuth` backend without the initial redirection before email address and password are entered?\r\n\r\nAt present I'm offering various social auth methods or email auth, and I want the required fields for the email auth to appear on the same page as the social options. I don't want the user to have to click something to say \"email auth\" first, which would mean a trip to the server and the redirection. Instead, if the fields are filled out and submitted I want to start the email auth pipeline without having to redirect to a form (since they've already filled in this form).\r\n\r\nThe [docs](http://psa.matiasaguirre.net/docs/backends/email.html) mention that if I submit the form to my own view that I should call `social.actions.do_complete`, so I'm hoping there's some other method I need to call before that.\r\n\r\nAny guidance would be appreciated.", "created_at": "2016-08-19T21:03:19Z"}, {"body": "Using 0.2.21 with Django 1.9, I get the following deprecation warning:\r\n\r\n`RemovedInDjango110Warning: SubfieldBase has been deprecated. Use Field.from_db_value instead.`\r\n\r\nIt looks like this was originally a problem and was fixed by #813. However, it looks like recently the warning was reintroduced, by this:\r\n\r\nhttps://github.com/omab/python-social-auth/commit/03ae00154900a8150a5bf941663425698aacdb6b#diff-25f350079af94bedfb90b3a9e8cafb59R15", "created_at": "2016-08-19T10:17:26Z"}, {"body": "", "created_at": "2016-08-18T14:37:20Z"}, {"body": "Nonce values are committed multiple times to the\r\ndatabase in different phases of authentication.\r\n\r\nThe specification requires one nonce value to\r\nprotect the session from from replay attacks.\r\n\r\nThe current implementation claims nonce values\r\nare used for CSRF protection, which is false.\r\n\r\nThis commit fixes the use of multiple tokens by\r\nusing one token to protect from replay and fixes\r\nan issue where authentication fails with\r\ndifferent authorization and token endpoints.\r\n\r\n---\r\n\r\nAs far as I understand the `python-social-auth` OpenID Connect implementation is somewhat broken at this moment.\r\n\r\nThe current implementation fails when the user has differing endpoints defined for authorization requests and token requests. A `nonce` value is first created in the authorization phase, then later in the token request phase. The token should only be created once per the session. The received ID Token should be decrypted and then validated against the nonce value that is created in the authorization phase, not in the later phase. \r\n\r\nThe following flow is used when calling the `OpenIdConnectAuth` class authentication:\r\n\r\n- `auth_params` is called in authorization phase, which creates a `nonce` value for the request and stores it in the database. This is later used to identify that we have indeed made this request.\r\n- `auth_complete_params` is called when authorization is succesfull; why would we be creating unique session keys at this stage?\r\n- `validate_and_return_id_token` is called to check if all is OK with the received token and user information. If `nonce` value matches in this package after decrypting with the server public key with the `nonce` value we created when starting the request, we trust that the request is good. If the `nonce` matches it is removed to remove the possibility of someone else attempting replay attack authentication in place of our user; an authentication is valid only once with a signed request.\r\n\r\n---\r\n\r\nThe fix: \r\n\r\n- Remove obsolete token request `nonce` key; it is not used for CSRF protection and plays no role in this part.\r\n- Validate the ID Token `nonce` against the authorization phase `nonce` after decrypting the ID Token with public key to validate the ID Token is in good shape. \r\n\r\n---\r\n\r\nThis is the example that brought forth the problems in the current implementation. I have a Keycloak server that I'm integrating as a SSO source:\r\n\r\n```\r\n# requirements.txt\r\n\r\n# OAuth and OpenID auth applications\r\npython-social-auth==0.2.21\r\nPyJWT==1.4.2\r\npython3-openid==3.0.10\r\nrequests-oauthlib==0.6.2\r\ncryptography==1.4\r\n```\r\n\r\n```\r\n# settings.py\r\n\r\nAUTHENTICATION_BACKENDS = [\r\n    'project.backends.KeycloakOpenIDConnect',\r\n    'django.contrib.auth.backends.ModelBackend',\r\n]\r\n\r\nSOCIAL_AUTH_KEYCLOAK_KEY = env('DJANGO_SSO_CLIENT_ID')\r\nSOCIAL_AUTH_KEYCLOAK_SECRET = env('DJANGO_SSO_CLIENT_SECRET')\r\nSOCIAL_AUTH_KEYCLOAK_ID_TOKEN_JWT_DECODE_KWARGS = {\r\n    'key': env('DJANGO_SSO_PUBLIC_KEY'),\r\n    'algorithms': [\r\n        'RS256',\r\n        'HS256'\r\n    ],\r\n}\r\n\r\nSOCIAL_AUTH_KEYCLOAK_REALM = env('DJANGO_SSO_REALM')\r\nSOCIAL_AUTH_KEYCLOAK_URL_ISSUER = 'https://keycloak.example.com/auth/realms/{0}'.format(\r\n    SOCIAL_AUTH_KEYCLOAK_REALM\r\n)\r\nSOCIAL_AUTH_KEYCLOAK_URL_ROOT = '{0}/protocol/openid-connect'.format(\r\n    SOCIAL_AUTH_KEYCLOAK_URL_ISSUER\r\n)\r\n```\r\n\r\n```\r\n# backends.py\r\n\r\nfrom django.conf import settings\r\n\r\nfrom social.backends.open_id import OpenIdConnectAuth\r\n\r\n\r\nclass KeycloakOpenIDConnect(OpenIdConnectAuth):\r\n    name = 'keycloak'\r\n    ID_TOKEN_ISSUER = settings.SOCIAL_AUTH_KEYCLOAK_URL_ISSUER\r\n    AUTHORIZATION_URL = '{0}/auth'.format(\r\n        settings.SOCIAL_AUTH_KEYCLOAK_URL_ROOT\r\n    )\r\n    ACCESS_TOKEN_URL = '{0}/token'.format(\r\n        settings.SOCIAL_AUTH_KEYCLOAK_URL_ROOT\r\n    )\r\n    ACCESS_TOKEN_METHOD = 'POST'\r\n\r\n    def get_user_details(self, response):\r\n        # Required for correct operation; represented as a stub here\r\n        return {}\r\n```\r\n\r\nAs you can see, there are two different URLs for authorization and access tokens. When we create `nonce` requests with both and only fetch the valid requests with the `settings.ACCESS_TOKEN_URL` key, we are dismissing the firstly created valid `nonce` which should indeed be used. We are also not ever using the `AUTHORIZATION_URL` based `nonce`, which should in fact be used according the specification. It is merely created, and it is certainly not used for CSRF protection.\r\n\r\n---\r\n\r\nSources:\r\n\r\n- OpenID Connect tutorial http://connect2id.com/learn/openid-connect\r\n- OpenID Connect specification http://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\r\n", "created_at": "2016-08-16T16:50:12Z"}, {"body": "I have noticed that attributes set by middleware are not present in request even though middlewares are included in settings as:\r\nMIDDLEWARE_CLASSES = (\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django_user_agents.middleware.UserAgentMiddleware',\r\n    'workbench.middlewares.MultiHostMiddleware',\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'workbench.middlewares.SocialAuthExceptionMiddleware',\r\n    'workbench.disable.DisableCSRF',\r\n    'anafero.middleware.SessionJumpingMiddleware',\r\n     'axes.middleware.FailedLoginMiddleware',\r\n    'workbench.middlewares.CustomCookieMiddleWare'\r\n)\r\n\r\nMy social-auth pipeline is as follows:\r\n\r\nSOCIAL_AUTH_PIPELINE = (\r\n    'social.pipeline.social_auth.social_details',\r\n    'social.pipeline.social_auth.social_uid',\r\n    'social.pipeline.social_auth.auth_allowed',\r\n    'social.pipeline.social_auth.social_user',\r\n    'social.pipeline.user.get_username',\r\n    'social.pipeline.social_auth.associate_by_email',\r\n    'social.pipeline.user.create_user',\r\n    'social.pipeline.social_auth.associate_user',\r\n    'social.pipeline.social_auth.load_extra_data',\r\n    'social.pipeline.user.user_details',\r\n    'useraccounts.models.create_user_profile'\r\n)\r\n\r\nWhen 'useraccounts.models.create_user_profile' does following:\r\nrequest = kwargs.get('request')\r\ndo_something(session_key=request.session.session_key)\r\n\r\nFollowing error comes:\r\n'QueryDict' object has no attribute 'session'\r\n\r\n'Request' dictionary has elements with following keys: state, code, prompt, session_state, authuser\r\n\r\nI am using Django version 1.5.5. The problem is coming since I have upgraded python-social-auth from v0.1.17 to v0.2.4 and there is no code change.", "created_at": "2016-08-16T10:31:23Z"}, {"body": "The app rename in #916 breaks migrations for previously-setup systems. This commit informs Django that the migrations under the new app name replace the migrations under the old app name.\r\n\r\nFixes #991", "created_at": "2016-08-13T15:48:37Z"}, {"body": "Improved pipeline file introducing some minor changes.", "created_at": "2016-08-13T01:21:12Z"}, {"body": "#916 changed the app name from \"default\" to \"social_auth\". Users running the app prior this change will have migrations registered under the old name, resulting in Django thinking it should apply migrations from scratch.\r\n\r\nThese existing migrations should be faked with the following command:\r\n\r\n```bash\r\npython manage.py migrate social_auth 0004 --fake\r\n```", "created_at": "2016-08-12T18:53:35Z"}, {"body": "", "created_at": "2016-08-12T09:12:47Z"}, {"body": "I am using my corporate account (which is \"Google for works\" account) to implement Google oauth2.0 login in to my django application.\r\n\r\nPipeline in \"settings.py\" looks like:\r\n\r\nSOCIAL_AUTH_PIPELINE = [\r\n    'social.pipeline.social_auth.social_details',\r\n    'social.pipeline.social_auth.social_uid',\r\n    'social.pipeline.social_auth.auth_allowed',\r\n    'social.pipeline.social_auth.associate_by_email',\r\n    'social.pipeline.social_auth.associate_user',\r\n    'social.pipeline.social_auth.load_extra_data',\r\n    'social.pipeline.user.user_details',\r\n]\r\n# Adding conditional backends to pipepline.\r\nif config.GCPAuthentication.AUTO_CREATE_ACCOUNTS:\r\n    SOCIAL_AUTH_PIPELINE.extend([\r\n        'social.pipeline.user.get_username',\r\n        'social.pipeline.user.create_user'\r\n])\r\n\r\nWhile trying to login for the very first time with a new user, I am getting error: \r\n   AttributeError at /complete/google-oauth2/: 'NoneType' object has no attribute 'provider'\r\n\r\nAnd interestingly, user is getting created and saved in DB and on next login attempt it allows me to login.\r\n\r\nIts throwing error here : https://github.com/omab/python-social-auth/blob/master/social/actions.py#L70\r\n\r\nMy corporate Google account might not have any social account(Google+ is disabled)/related info associated with it. Is that an issue?\r\n\r\nIn any case, can you please tell me any workaround to get rid of this issue?\r\n\r\n", "created_at": "2016-08-10T20:26:46Z"}, {"body": "Is there a way to configure the SAML singleLogoutService through the python-social-auth settings?  I don't see it in the docs.", "created_at": "2016-08-10T17:39:20Z"}, {"body": "I tried adding a GET arg to `SOCIAL_AUTH_FIELDS_STORED_IN_SESSION` and the value is properly added to the session.  However, the docs seem to be wrong about retrieving that data:  https://github.com/omab/python-social-auth/blob/v0.2.19/docs/developer_intro.rst#interrupting-the-pipeline-and-communicating-with-views\r\n\r\nThe docs say to use `request.get('local_password', None)` (in the example in the docs), however the value is actually at `strategy.session_get('local_password')`.  I'm using Django so I'm unsure about other setups/strategies.", "created_at": "2016-08-10T13:37:13Z"}, {"body": "This commit 10a6f5570a4471d156c2bc06ecd4313189d23172 broke compatible with Django < 1.8, fixed\r\n", "created_at": "2016-08-10T09:27:20Z"}, {"body": "`AttributeError: type object 'UserSocialAuth' has no attribute 'app_session'`\r\n\r\nAny ideas of where the problem is ?", "created_at": "2016-08-09T08:35:20Z"}, {"body": "I'm writing a mobile app that requires a login using `response_type=token` instead of the default `response_type=code`, is there a way how I can set up my social login redirect link to use the token based login instead? I know it's possible to register using an access token ([docs](http://psa.matiasaguirre.net/docs/use_cases.html#signup-by-oauth-access-token)), but I can't seem to find out how I can append this to the URL before the user is redirected.", "created_at": "2016-08-08T09:29:22Z"}, {"body": "", "created_at": "2016-08-07T15:19:23Z"}, {"body": "I am trying to create a minimal working example in which I am breaking Python Social Auth pipeline, ask for new password from the user and return back.\r\n\r\nHere is the custom pipeline function:\r\n\r\n```\r\n@partial\r\ndef get_password(strategy, backend, request, user = None, is_new = False, *args, **kwargs):\r\n\r\n    if user:\r\n        if is_new:\r\n            if not request.get('password', None):\r\n                return redirect(\"accounts:get_password\")\r\n\r\n            user = User.objects.get(email=kwargs['email'])\r\n            user.set_password(request['password'])\r\n            user.save()\r\n\r\n    return\r\n```\r\n\r\nHere is the view:\r\n\r\n```\r\ndef get_password(request, template_name='accounts/password_change_form.html',extra_context=None):\r\n\r\n    if not extra_context: extra_context = dict()\r\n\r\n    if request.method == 'POST':\r\n        form = PasswordForm(request.POST)\r\n        if form.is_valid():\r\n            request.session['password'] = form.cleaned_data['password1']\r\n\r\n            backend = request.session['partial_pipeline']['backend']\r\n            return redirect('social:complete', backend=backend)\r\n    else:\r\n        form = PasswordForm()\r\n        extra_context[\"form\"] = form\r\n\r\n    return ExtraContextTemplateView.as_view(template_name=template_name,\r\n                                          extra_context=extra_context)(request)\r\n```\r\n\r\nHere is line from settings related to 'password' field:\r\n\r\n`SOCIAL_AUTH_FIELDS_STORED_IN_SESSION = ['password',]`\r\n\r\nEverything seems to be according to the examples described in PSA docs. The only one difference - it is not working and password saved in session not returned to the pipeline. Please, help, if you have any ideas how to repair it.\r\n", "created_at": "2016-08-07T13:22:47Z"}, {"body": "yandex backend docs is missing", "created_at": "2016-08-06T05:05:20Z"}, {"body": "Fixes #962 ", "created_at": "2016-08-04T20:10:43Z"}, {"body": "In some locations, `reverse` is imported from `django.core.urlresolvers` which in Django 1.10 has been deprecated in favour of `django.urls`:\r\nhttps://github.com/omab/python-social-auth/blob/b07708efe7d19b75009771aa97ddf821e59ec08e/social/apps/django_app/utils.py#L6\r\n\r\nThis causes a warning in Django 1.10 and will cease to work in Django 2.0.\r\n\r\nRef: https://docs.djangoproject.com/en/1.10/ref/urlresolvers/#module-django.urls", "created_at": "2016-08-03T22:14:43Z"}, {"body": "When you add a function to the pipeline you have access to a `request` keyword argument. This `request` object contains only the GET (or POST) data we received when user got redirected to our callback URL. The only information we have about the authenticity of the user's request is the `user` parameter which is in fact the `request.user` value. Having a custom user system in Django won't work with that. We need to have access to the whole request object to decide whether it was authenticated. My workarround to achieve this was to override the `complete` view function in order to add the whole request object to the keyword arguments. Is there a better way to achieve this or any chance of making such changes in the future?", "created_at": "2016-08-03T08:45:45Z"}, {"body": "It would be super useful if the backend or strategy could have methods to implement to get login, new user, error, etc. redirect URL's. Right now they are pulled from settings (like Django's `LOGIN_REDIRECT_URL`), but I would like to be able to use session data and/or any other request data to build the redirects.", "created_at": "2016-08-03T03:52:32Z"}, {"body": "Simply go to `http://localhost:8000/admin/default/usersocialauth/` to trigger the error relating to the fact that Django 1.9 deprecated and then removed in 1.10 many `_meta` functions as part of the \"formalization of the `Model._meta` api\".  [[Django Reference](https://docs.djangoproject.com/en/1.9/ref/models/meta/#migrating-from-the-old-api)]\r\n\r\nThis includes `_User._meta.get_all_field_names()`.", "created_at": "2016-08-02T17:22:42Z"}, {"body": "We have an API client that sends a ton of requests in parallel after getting a token from a different oauth service.  As a result, we have a race condition for local account creation. This patch handles that by seeing if there was IntegrityError as an indication that another fork created the user already and then trying to find the created user to return instead of making it.", "created_at": "2016-08-02T14:56:19Z"}, {"body": "This is basically the same change made in #770 but this adds transaction support around creating the user object as well.  The reasoning here is a bit different than #770 as this is just intended to prevent request failures in scenarios where a client is logging in for the first time simultaneously via multiple parallel API calls using token authentication and creating 500 responses as a result of the user being created in a different fork.", "created_at": "2016-08-01T15:19:19Z"}, {"body": "related to #798", "created_at": "2016-08-01T06:21:28Z"}, {"body": "The same thing happens with Google. The URL looks like:\r\n\r\n`/complete/facebook/?redirect_state=<state>&client_id=<client_id>`\r\n\r\nThis times out with a 502 Bad Gateway error. If I just go to the path `/complete/facebook` in my browser even that times out (and I get a log `Missing needed parameter code` in my log file).\r\n\r\nAnyone know what could be happening?", "created_at": "2016-07-30T22:13:41Z"}, {"body": "When we use django url namespace and use url split via : like a\r\n\r\n`SOCIAL_AUTH_LOGIN_ERROR_URL = 'social:error'`\r\n\r\nfor example, next code is wrong  (may be and in other places)\r\nhttps://github.com/omab/python-social-auth/blob/b07708efe7d19b75009771aa97ddf821e59ec08e/social/apps/django_app/middleware.py#L42\r\n\r\n```\r\nurl += ('?' in url and '&' or '?') + \\\r\n                       'message={0}&backend={1}'.format(urlquote(message),\r\n                                                        backend_name)\r\n```\r\n\r\n\r\nwe must reverse before url contacting \r\n\r\n\r\n```\r\nurl = reverse(self.get_redirect_uri(request, exception))\r\nurl += ('?' in url and '&' or '?') + \\\r\n                       'message={0}&backend={1}'.format(urlquote(message),\r\n                                                        backend_name)\r\n```\r\n", "created_at": "2016-07-30T08:30:46Z"}, {"body": "When the `OpenIdConnectAuth` backend makes a call to authorize a request, it creates a nonce. Once a response is received, this nonce should be removed from the database (e.g. Association table for Django). The backend does not currently do this, resulting in a table that grows without bound.", "created_at": "2016-07-28T07:02:47Z"}, {"body": "This unique_together index on the server_url and handle columns ensures lookups do not result in full table scans.\r\n\r\nFixes #967", "created_at": "2016-07-28T02:44:40Z"}, {"body": "This appears to have been broken since it was introduced by #908.", "created_at": "2016-07-28T02:42:30Z"}, {"body": "The [`Association` model](https://github.com/omab/python-social-auth/blob/df6d841bbcad0a800cc0cf1c4395e0cb2531aabb/social/apps/django_app/default/models.py#L88) inherits from DjangoAssociationMixin, which [performs a lookup when logging in](https://github.com/omab/python-social-auth/blob/master/social/storage/django_orm.py#L125-L126). This lookup relies on the `server_url` and `handle` columns.\r\n\r\nDue to the lack of indices on these columns this lookup results in a full table scan, which is non-performant for applications with large user bases.\r\n\r\n**Recommendations**\r\n\r\n1. Add a compound index on the `server_url` and `handle` columns of the `Association` model.\r\n2. Update the documentation recommending that those classes inheriting `DjangoAssociationMixin` include the same compound index.", "created_at": "2016-07-28T02:10:11Z"}, {"body": "See https://docs.djangoproject.com/en/1.9/releases/1.8/#selected-methods-in-django-db-models-options-options\r\nand\r\nhttps://docs.djangoproject.com/en/1.9/ref/models/meta/#migrating-old-meta-api\r\n", "created_at": "2016-07-26T23:44:27Z"}, {"body": "So imagine your auth server lives on a subdomain. How are you going to use ?next= parameter if you want user to get back to the main domain, or even some other domain for whatever reason?\r\n\r\nThis solves it by introducint the ALLOWED_REDIRECT_HOSTS setting. Disadvantage of this approach is that you can't possibly apply it to a wildcard.\r\n\r\nAnother approach could be to figure out the lowest level common domain, but it just feels less safe.\r\n\r\nDon't hesitate to criticize this, as I just chose the most obvious solution. There might be a better way to achieve what I want.", "created_at": "2016-07-26T16:07:16Z"}, {"body": "Didn't spend much time investigating, but basic case works, at least on Pyramid 1.7.", "created_at": "2016-07-26T15:51:11Z"}, {"body": "Not sure if this is the best approach. Please let me know if it's any good.", "created_at": "2016-07-26T15:48:05Z"}, {"body": "django.db.migrations.exceptions.NodeNotFoundError: Migration social_auth.0004_auto_20160423_0400 dependencies reference nonexistent parent node (u'default', u'0003_alter_email_max_length')\r\n\r\nNobody?\r\n\r\nLooking at https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/migrations/0004_auto_20160423_0400.py#L11\r\n\r\nkinda weird, did the app name change? look at the previous one.\r\n\r\nhttps://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/migrations/0003_alter_email_max_length.py#L14", "created_at": "2016-07-26T03:53:44Z"}, {"body": "I am using the Djinga templating engine (which processes both Django and Jinja templates)  so I am not sure if this behavior is reproducible either in the vanilla Django template or even Jinja2. The social.apps.django_app.context_processors.login_redirect context processor fails when rendering using the django.template.loader.render_to_string() function.\r\n\r\nThe reason is very simple: Djinga passes request=None to all context processors when render_to_string is called and login_redirect fails with this kind of input. I am not sure if Djinga is abusing an undocumented Django behavior or login_redirect is the one to blame. \r\n\r\nAnyway, the error can be fixed trivially by checking if request is None in the begining of the login redirect function.", "created_at": "2016-07-26T03:13:11Z"}, {"body": "In 2015, Yammer revised their security requirements to require the exact redirect_uri, rather than just the domain.  As a result, it is important that python-social-auth specify the appropriate redirect_uri in the documentation.\r\n\r\nThe documentation format in this PR matches the format of other backends, such as [foursquare](https://github.com/omab/python-social-auth/blob/master/docs/backends/foursquare.rst)\r\n\r\n[yammer documentation](https://developer.yammer.com/blog/action-required-please-make-this-simple-update-prior-to-august-25-2015)", "created_at": "2016-07-25T18:18:52Z"}, {"body": "Should I make a PR out of this https://github.com/moorchegue/python-social-auth/commit/b836001a4382de684d3c503ab4293e54ff961dd9 ?", "created_at": "2016-07-25T03:59:59Z"}, {"body": "Hello, I got a problem. I make site, I try to log via Steam, but when I log in steam I redirect to my fail view - I logged in Steam and not logged in my site. Please help me solve this problem.", "created_at": "2016-07-19T17:07:09Z"}, {"body": "Fix for https://github.com/omab/python-social-auth/issues/945 to make it work with Flask/SQLAlchemy again, reverts some of the changes in https://github.com/omab/python-social-auth/commit/a52ee69cc641018bbf32c6fd599a6c30036b3086", "created_at": "2016-07-17T18:14:40Z"}, {"body": "Hi everyone,\r\n\r\nThe example demo runs well on the default SQLite 3. But I need to set up in Apache 2 with MySQL. When using the Django example with MySQL 5.5.49, the following error occurs with the command \"python manage.py migrate\". How to solve this issue?\r\n\r\nThank you all for your suggestions.\r\n\r\nOperations to perform:\r\n  Apply all migrations: sessions, admin, sites, auth, default, contenttypes\r\nRunning migrations:\r\n  Rendering model states... DONE\r\n  Applying contenttypes.0001_initial... OK\r\n  Applying admin.0001_initial...Traceback (most recent call last):\r\n  File \"manage.py\", line 8, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py\", line 353, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py\", line 345, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/base.py\", line 348, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/base.py\", line 399, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/commands/migrate.py\", line 200, in handle\r\n    executor.migrate(targets, plan, fake=fake, fake_initial=fake_initial)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/migrations/executor.py\", line 92, in migrate\r\n    self._migrate_all_forwards(plan, full_plan, fake=fake, fake_initial=fake_initial)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/migrations/executor.py\", line 121, in _migrate_all_forwards\r\n    state = self.apply_migration(state, migration, fake=fake, fake_initial=fake_initial)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/migrations/executor.py\", line 198, in apply_migration\r\n    state = migration.apply(state, schema_editor)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/backends/base/schema.py\", line 90, in __exit__\r\n    self.execute(sql)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/backends/base/schema.py\", line 110, in execute\r\n    cursor.execute(sql, params)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/backends/utils.py\", line 79, in execute\r\n    return super(CursorDebugWrapper, self).execute(sql, params)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/utils.py\", line 95, in __exit__\r\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/backends/mysql/base.py\", line 112, in execute\r\n    return self.cursor.execute(query, args)\r\n  File \"/usr/local/lib/python2.7/dist-packages/MySQLdb/cursors.py\", line 205, in execute\r\n    self.errorhandler(self, exc, value)\r\n  File \"/usr/local/lib/python2.7/dist-packages/MySQLdb/connections.py\", line 36, in defaulterrorhandler\r\n    raise errorclass, errorvalue\r\ndjango.db.utils.OperationalError: (1005, \"Can't create table 'social.#sql-4c77_38' (errno: 150)\")", "created_at": "2016-07-17T02:28:27Z"}, {"body": "I'm running django 1.8 and am trying to migrate from django-social-auth to python-social-auth.  I'm using the newest released version of django-social-auth (0.7.28) and I'm trying to install the latest version python-social-auth.\r\n\r\nI've followed the directions in the porting guide in the docs. However, I noticed that the the model state of the django-social-auth 0.7.28 does not match the initial migration of the python-social-auth migration.  For example, the python-social-auth default module has models and fields in it in that are not in the state of my database from django-social-auth. \r\n\r\nI'm wondering what the model upgrade path is between django-social-auth and python-social-auth?  If I drop and recreate the social auth tables, will that irreversibly destroy the users and their social account, or will the same association get recreated next time they login in? \r\n\r\nHere is the original repo with django-social-auth:\r\nhttps://github.com/chicagopython/chipy.org/blob/master/requirements.txt#L17\r\n\r\nHere is the branch that I'm trying to upgrade to python-social-auth:\r\nhttps://github.com/JoeJasinski/chipy.org/blob/feature/cleanup-and-updates-2/requirements.txt\r\n\r\nThis is my current model state: \r\n\r\n```\r\nchipy_org=# \\d social_auth_association\r\n                                   Table \"public.social_auth_association\"\r\n   Column   |          Type          |                              Modifiers                               \r\n------------+------------------------+----------------------------------------------------------------------\r\n id         | integer                | not null default nextval('social_auth_association_id_seq'::regclass)\r\n server_url | character varying(255) | not null\r\n handle     | character varying(255) | not null\r\n secret     | character varying(255) | not null\r\n issued     | integer                | not null\r\n lifetime   | integer                | not null\r\n assoc_type | character varying(64)  | not null\r\nIndexes:\r\n    \"social_auth_association_pkey\" PRIMARY KEY, btree (id)\r\n\r\n\r\nchipy_org=# \\d social_auth_nonce;\r\n                                   Table \"public.social_auth_nonce\"\r\n   Column   |          Type          |                           Modifiers                            \r\n------------+------------------------+----------------------------------------------------------------\r\n id         | integer                | not null default nextval('social_auth_nonce_id_seq'::regclass)\r\n server_url | character varying(255) | not null\r\n timestamp  | integer                | not null\r\n salt       | character varying(40)  | not null\r\nIndexes:\r\n    \"social_auth_nonce_pkey\" PRIMARY KEY, btree (id)\r\n\r\n\r\nchipy_org=# \\d social_auth_usersocialauth;\r\n                                   Table \"public.social_auth_usersocialauth\"\r\n   Column   |          Type          |                                Modifiers                                \r\n------------+------------------------+-------------------------------------------------------------------------\r\n id         | integer                | not null default nextval('social_auth_usersocialauth_id_seq'::regclass)\r\n user_id    | integer                | not null\r\n provider   | character varying(32)  | not null\r\n uid        | character varying(255) | not null\r\n extra_data | text                   | not null\r\nIndexes:\r\n    \"social_auth_usersocialauth_pkey\" PRIMARY KEY, btree (id)\r\n    \"social_auth_usersocialauth_provider_uid_key\" UNIQUE CONSTRAINT, btree (provider, uid)\r\n    \"social_auth_usersocialauth_user_id\" btree (user_id)\r\nForeign-key constraints:\r\n    \"social_auth_usersocial_user_id_193b2d80880502b2_fk_auth_user_id\" FOREIGN KEY (user_id) REFERENCES auth_user(id) DEFERRABLE INITIALLY DEFERRED\r\n\r\n\r\nchipy_org=# \\d social_auth_usersocialauth_user_id \r\nIndex \"public.social_auth_usersocialauth_user_id\"\r\n Column  |  Type   | Definition \r\n---------+---------+------------\r\n user_id | integer | user_id\r\nbtree, for table \"public.social_auth_usersocialauth\"\r\n\r\n\r\n\r\n```\r\n", "created_at": "2016-07-16T16:04:04Z"}, {"body": "I'm running into a problem using the Slack OAuth2 authentication.\r\n\r\nFirstly, the documentation at http://psa.matiasaguirre.net/docs/backends/slack.html says that \"also it\u2019s possible to define extra permissions with\" `SOCIAL_AUTH_SLACK_SCOPE`. This implies providing this variable is optional.\r\n\r\nHowever, if I don't set this variable or if I set it to an empty list, Slack gives me the following error: `OAuth Error: blank_scope: Requested scopes cannot be blank`.\r\n\r\nIf I set `SOCIAL_AUTH_SLACK_SCOPE` to `['identify']`, the authentication does work and a user is created. However, the user is completely devoid or any details, with an empty name, e-mail, etc to the point where this causes errors in Django admin. I'm guessing this is because no user details were obtained due to the lack of scopes `identity.basic`, `identity.email`, as per https://api.slack.com/docs/sign-in-with-slack.\r\n\r\nBut I set the value to include additional options, such as `['identify','identity.email']` or any other `identity.` values whatsoever alongside `identify`, I also get the following error from Slack: `OAuth Error: invalid_scope: Cannot request both identity scopes and other scopes at the same time`.\r\n\r\nReally having trouble getting this to work, need some help (and believe the documentation needs some serious revisions).", "created_at": "2016-07-15T13:12:26Z"}, {"body": "If `social.apps.django_app.middleware.SocialAuthExceptionMiddleware` is added to Django 1.10's new (default) `MIDDLEWARE` setting (as opposed to `MIDDLEWARE_CLASSES`), Django will fail to start.  Ideally the middleware should be updated (using `django.utils.deprecation.MiddlewareMixin` in the short-term), and the documentation should be updated too.\r\n\r\nRef: https://docs.djangoproject.com/en/1.10/topics/http/middleware/#upgrading-middleware", "created_at": "2016-07-14T22:54:05Z"}, {"body": "Which makes it impossible to access extra_data since it is not unserialized.\r\n\r\nI had to apply this workaround https://github.com/Linkuist/linkuist/commit/12716355286382c791f4b7f820b9ac3f9a008d62 in an old django 1.6 based project to get through strange `AttributeError: 'unicode' object has no attribute 'get'` or `TypeError: string indices must be integers` errors.\r\n", "created_at": "2016-07-13T21:15:33Z"}, {"body": "Importing flask.ext.login is deprecated, use flask_login instead.\r\n\r\nSee pallets/flask#1135 for details.", "created_at": "2016-07-13T13:18:10Z"}, {"body": "When using postgres the username field can be a varchar with no maximum size.", "created_at": "2016-07-13T11:03:52Z"}, {"body": "Hey, \r\n\r\nI tried using python-social-auth with django and I was getting error:\r\nNo module named social.apps.django_app\r\n\r\nAfter some digging, I found out that folder was actually named Social, not social and that was causing the trouble (in lib/python2.7/site-packages of my virtualenv).\r\nI am no python expert, but I would guess something is wrong with your pip configuration.", "created_at": "2016-07-13T09:04:22Z"}, {"body": "Using Python 3, we need to pass a str to format, not bytes. Otherwise we end up with an Authorization that looks like:\r\n\r\nAuthorization: Basic b'Zm9vOmJhcg=='", "created_at": "2016-07-13T08:30:30Z"}, {"body": "Using Python 3, we need to pass a str to format, not bytes. Otherwise we end up with an Authorization that looks like:\r\n\r\nAuthorization: Basic b'Zm9vOmJhcg=='", "created_at": "2016-07-13T06:05:05Z"}, {"body": "Importing flask.ext.login is deprecated, use flask_login instead.\r\n\r\nSee https://github.com/pallets/flask/issues/1135 for details.", "created_at": "2016-07-13T04:51:51Z"}, {"body": "Probably since this commit, python-social-auth no longer works with flask_sqlalchemy:\r\n\r\nhttps://github.com/omab/python-social-auth/commit/cc5908675c95944b68aae038700c7ee901aff491#diff-a622acca45e0e3a8d67139fe21cd35fe\r\n\r\nIf we pass the `db.session` (where db is the SQLAlchemy object) instead of `db_session` to `init_social(app, db_session)`, which is a scoped session, things seem to work fine until python-social-auth has to add a new user, when it timeouts with `Lock wait timeout exceeded; try restarting transaction` on the `INSERT INTO social_auth_usersocialauth` statement. \r\n\r\nIt has something to do with the sequence of flushing and committing, because if we do `cls._session().commit()` instead of `cls._flush()` in `SQLAlchemyMixin._save_instance`, then it works fine.", "created_at": "2016-07-03T12:35:06Z"}, {"body": "Hello,\r\nI'm Beginner . please what is the best method to create a custom user and retrieve extra data from Linkedin Auth. Import succeded in social_auth_usersocial_auth. But you didn't mention simply and clearly how to retrieve these information. examples please", "created_at": "2016-07-02T13:42:11Z"}, {"body": "I just make this simple call, passing access token, that im retrieving using Vk OpenApi js library.\r\nEmail in scope permissions is defined, as an integer.\r\n\r\n`if backend == 'vk-oauth2':  \r\n    user = request.backend.do_auth(access_token)`\r\n\r\nBut on pipeline `associate_by_email` the process of creating a new user fails, because there is no email address.\r\nWhen using this pure library with redirection, everything works fine.\r\nCould somebody help me to solve this?\r\n\r\nSame process with registration by access token for Facebook works fine.", "created_at": "2016-06-30T17:54:58Z"}, {"body": "How can i convert this django url tag\r\n\r\n`{% url \"social:begin\" \"github\" %}`\r\n\r\nto the proper jinja url tag? I have already tried\r\n\r\n`{% set myurl=url(\"social:begin\", \"github\") %}`\r\n\r\nand then use the {{url}}\r\n\r\nbut i get an\r\n\r\n  \r\n\r\n>   ImportError at /login/\r\n> \r\n>     No module named github\r\n\r\nMy settings.py:\r\n```\r\n\r\n        UTHENTICATION_BACKENDS = ('social.backends.github.GithubOAuth2',)\r\n\r\n        SOCIAL_AUTH_GITHUB_KEY = '75ba4983720f9852c22a'\r\n        SOCIAL_AUTH_GITHUB_SECRET = '7e43083e9ee92bd95ad195064f3aaa91704cbfe0'\r\n\r\n        INSTALLED_APPS = [\r\n         'social.apps.django_app.default',\r\n        ]\r\n\r\n```\r\nand my urls.py:\r\n\r\n.....\r\n```\r\ni18n_urls = [\r\n    url(r'^$', 'zerver.views.home'),\r\n    url('social-auth/', include('social.apps.django_app.urls', namespace='social')),\r\n```\r\n.....\r\n\r\n", "created_at": "2016-06-29T14:56:17Z"}, {"body": "", "created_at": "2016-06-28T14:39:25Z"}, {"body": "Trying so much hard to get linkedin extra data , when a user try to Sign up \r\nbut cant' get email or full profile list \r\n\r\nhere is my setting.py \r\n\r\n`\r\nSOCIAL_AUTH_LINKEDIN_SCOPE = ['r_fullprofile', 'r_emailaddress']\r\n\r\nSOCIAL_AUTH_LINKEDIN_FIELD_SELECTORS = [\r\n    'email-address',\r\n    'headline',\r\n    'industry']\r\n\r\nSOCIAL_AUTH_LINKEDIN_EXTRA_DATA = [('id', 'id'),\r\n                                   ('firstName', 'first_name'),\r\n                                   ('lastName', 'last_name'),\r\n                                   ('emailAddress', 'email_address'),\r\n                                   ('headline', 'headline'),\r\n                                   ('industry', 'industry')]\r\n`\r\n\r\nand here is my view.py \r\n`\r\ndef save_profile(backend, user, response, request, *args, **kwargs):\r\n    if backend.name == 'facebook' or backend.name == 'linkedin-oauth2':\r\n        try:\r\n            user_profile = UserProfile.objects.get(user=user.id)\r\n            print \"printing try profiel....\"\r\n            print user_profile\r\n        except:\r\n            if backend.name == 'facebook': \r\n                user_id = User.objects.get(pk=user.id)\r\n                Candidate.assign_role_to_user(user_id)\r\n                candidate = EmployeeResume(first_name=user.first_name,\r\n                                               last_name=user.last_name, email=user.email,\r\n                                               created_by=user\r\n                    )\r\n                candidate.save()\r\n\r\n                profile = UserProfile(user=user_id, first_name=user.first_name, last_name=user.last_name,\r\n                                      user_role=\"CANDIDATE\")\r\n                profile.first_name = user.first_name\r\n                profile.save() \r\n                access_token = response[\"access_token\"]\r\n                uid = kwargs[\"uid\"]\r\n                # uid = 100009659355226\r\n                print access_token\r\n                print \" printing uid ......\"\r\n                print uid\r\n                if access_token:\r\n\r\n                    url = u'https://graph.facebook.com/{0}/' \\\r\n                    u'friends?fields=id,name,picture,email' \\\r\n                    u'&access_token={1}'.format(\r\n                        uid,\r\n                        response['access_token'],\r\n                        )\r\n                    fb_request = urllib2.Request(url)\r\n                    friends = json.loads(urllib2.urlopen(fb_request).read()).get('data')\r\n                    print \"start into friend loop\"\r\n                    print \"pirnt frind ...\"\r\n                    print friends \r\n                    for friend in friends:\r\n                        print friend\r\n                        # contact = Contacts(full_name=friend[\"name\"],)\r\n\r\n            elif backend.name == 'linkedin-oauth2':\r\n                print \"linkedin kwargs......\"\r\n                print kwargs\r\n                user_id = User.objects.get(pk=user.id)\r\n                Candidate.assign_role_to_user(user_id)\r\n                candidate = EmployeeResume(first_name=user.first_name,\r\n                                               last_name=user.last_name, email=user.email,\r\n                                               created_by=user\r\n                    )\r\n                candidate.save()\r\n\r\n                profile = UserProfile(user=user_id, first_name=user.first_name, last_name=user.last_name,\r\n                                      user_role=\"CANDIDATE\")\r\n                profile.first_name = user.first_name\r\n                print \"before profile save ...\"\r\n                profile.save()\r\n                print \"After profile save ...\"\r\n\r\n`\r\nUser can sign UP but can't get his email adddress \r\n", "created_at": "2016-06-27T06:55:39Z"}, {"body": "", "created_at": "2016-06-27T06:51:41Z"}, {"body": "This caused me headaches:\r\nThe SOCIAL_AUTH_USER_MODEL setting is not respected in the second django migration.", "created_at": "2016-06-22T13:44:56Z"}, {"body": "Line (https://line.me/en/) messenger OAuth2 support.", "created_at": "2016-06-19T17:15:58Z"}, {"body": "We use stock `auth.User` model for administrators (without social auth) and custom `UserAccount` model for other types of users with enabled social auth. So we have `SOCIAL_AUTH_USER_MODEL = 'customauth.UserAccount'`.\r\n\r\nThe patch fixes the following failure:\r\n\r\n```\r\n./manage.py migrate --fake-initial\r\n\r\ndjango.db.utils.IntegrityError: insert or update on table \"social_auth_usersocialauth\" violates foreign key constraint \"social_auth_usersocialauth_user_id_17d28448_fk_auth_user_id\"\r\nDETAIL:  Key (user_id)=(225873) is not present in table \"auth_user\".\r\n```", "created_at": "2016-06-17T04:39:50Z"}, {"body": "I have the error:\r\n\r\nImportError: No module named django_app\r\n```\r\npip freeze\r\ncontextlib2==0.5.3\r\ndj-database-url==0.4.1\r\nDjango==1.9.7\r\ngunicorn==19.6.0\r\noauthlib==1.1.2\r\nPyJWT==1.4.0\r\npython-openid==2.2.5\r\npython-social-auth==0.2.19\r\nraven==5.20.0\r\nrequests==2.10.0\r\nrequests-oauthlib==0.6.1\r\nsix==1.10.0\r\n```\r\n\r\n```\r\n(v180) C:\\Users\\aa\\PycharmProjects\\vinil180>python manage.py runserver\r\nUnhandled exception in thread started by <function wrapper at 0x03DFEE70>\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\aa\\v180\\lib\\site-packages\\django\\utils\\autoreload.py\", line 226, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"C:\\Users\\aa\\v180\\lib\\site-packages\\django\\core\\management\\commands\\runserver.py\", line 109, in inner_run\r\n    autoreload.raise_last_exception()\r\n  File \"C:\\Users\\aa\\v180\\lib\\site-packages\\django\\utils\\autoreload.py\", line 249, in raise_last_exception\r\n    six.reraise(*_exception)\r\n  File \"C:\\Users\\aa\\v180\\lib\\site-packages\\django\\utils\\autoreload.py\", line 226, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"C:\\Users\\aa\\v180\\lib\\site-packages\\django\\__init__.py\", line 18, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"C:\\Users\\aa\\v180\\lib\\site-packages\\django\\apps\\registry.py\", line 85, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"C:\\Users\\aa\\v180\\lib\\site-packages\\django\\apps\\config.py\", line 116, in create\r\n    mod = import_module(mod_path)\r\n  File \"C:\\Python27\\Lib\\importlib\\__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named django_app\r\n```", "created_at": "2016-06-11T03:12:38Z"}, {"body": "", "created_at": "2016-06-06T02:26:35Z"}, {"body": "currently `coursera` backend is designed to use custom `username` key as `ID_KEY`\r\nthe `username` value is prepared and stored in `details` dict by `get_user_details`, however it doesn't override `get_user_id` method, which results in the app trying to fetch `username` from `response` dict.\r\n", "created_at": "2016-06-05T16:27:35Z"}, {"body": "", "created_at": "2016-06-01T16:23:27Z"}, {"body": "", "created_at": "2016-06-01T15:52:11Z"}, {"body": "with python 2.7 everything works as expected, with python 3.4. it fails with a \r\n\r\n`requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http://www.openstreetmap.org/oauth/request_token`\r\n\r\nfrom the api side:\r\n\r\n' I see requests from the same IP you are connected from with no arguments\r\n just \"GET /oauth/request_token HTTP/1.1\"' `\r\n\r\nI am using \r\npython-social-auth==0.2.18\r\nrequests-oauthlib==0.6.1\r\nwith \r\nDjango==1.9.6\r\n", "created_at": "2016-05-24T10:35:07Z"}, {"body": "This change is not backwards compatible, but as of now it's impossible to subclass AbstractUserSocialAuth", "created_at": "2016-05-23T22:28:34Z"}, {"body": "", "created_at": "2016-05-16T07:45:38Z"}, {"body": "Hi guys,\r\n\r\nI have many Instagram accounts, Can i connect these different Instagram accounts for a same User?", "created_at": "2016-05-12T17:26:31Z"}, {"body": "The facebook url [1] version should be configurable since most users will eventually want to upgrade:\r\n\r\n```\r\nclass FacebookOAuth2(BaseOAuth2):\r\n    \"\"\"Facebook OAuth2 authentication backend\"\"\"\r\n    AUTHORIZATION_URL = 'https://www.facebook.com/v2.3/dialog/oauth'\r\n    ACCESS_TOKEN_URL = 'https://graph.facebook.com/v2.3/oauth/access_token'\r\n    REVOKE_TOKEN_URL = 'https://graph.facebook.com/v2.3/{uid}/permissions'\r\n    USER_DATA_URL = 'https://graph.facebook.com/v2.3/me'\r\n```\r\n\r\nShould be something like:\r\n\r\n```\r\nfb_api_version = settings.SOCIAL_AUTH_FACEBOOK_API_VERSION\r\n\r\nclass FacebookOAuth2(BaseOAuth2):\r\n    \"\"\"Facebook OAuth2 authentication backend\"\"\"\r\n    AUTHORIZATION_URL = 'https://www.facebook.com/{0}/dialog/oauth'.format(fb_api_version)\r\n    ACCESS_TOKEN_URL = 'https://graph.facebook.com/{0}/oauth/access_token'.format(fb_api_version)\r\n    REVOKE_TOKEN_URL = 'https://graph.facebook.com/{0}/{uid}/permissions'.format(fb_api_version)\r\n    USER_DATA_URL = 'https://graph.facebook.com/{0}/me'.format(fb_api_version)\r\n```\r\n\r\nI guess the problem here is that the code handling of the api responses might need to change as well though.\r\n\r\n**UPDATE**: the comments below were related to changing my email in facebook, then trying to login via facebook which was linked to another account.  The error I was seeing was my fault.\r\n\r\nAlso, I came across an issues where a single facebook user can have multiple facebook uids if auth is handled across multiple apps:\r\n\r\n- http://stackoverflow.com/questions/28181769/multiple-facebook-ids-for-the-same-user\r\n- https://developers.facebook.com/docs/graph-api/reference/v2.6/user/ids_for_business\r\n\r\nIE, a facebook UID is not always the same.  I ran into an issue where my fb user id that was stored was different when I released a mobile app so I could no longer authenticate my facebook user.  I was unaware that a single facebook user could have multiple facebook user ids until today.\r\n\r\n[1] https://github.com/omab/python-social-auth/blob/master/social/backends/facebook.py", "created_at": "2016-05-12T02:58:06Z"}, {"body": "I am getting a problem with the user field of the AbstractUserSocialAuth: if I try to create an alternative UserSocialAuth inheriting AbstractUserSocialAuth the related_name of the user fields will clash because both will inherit the related_name from AbstractUserSocialAuth:\r\n```\r\naccounts.CustomUserSocialAuth.user: (fields.E304) Reverse accessor for 'CustomUserSocialAuth.user' clashes with reverse accessor for 'UserSocialAuth.user'.\r\n        HINT: Add or change a related_name argument to the definition for 'CustomUserSocialAuth.user' or 'UserSocialAuth.user'.\r\naccounts.CustomUserSocialAuth.user: (fields.E305) Reverse query name for 'CustomUserSocialAuth.user' clashes with reverse query name for 'UserSocialAuth.user'.\r\n        HINT: Add or change a related_name argument to the definition for 'CustomUserSocialAuth.user' or 'UserSocialAuth.user'.\r\ndefault.UserSocialAuth.user: (fields.E304) Reverse accessor for 'UserSocialAuth.user' clashes with reverse accessor for 'CustomUserSocialAuth.user'.\r\n        HINT: Add or change a related_name argument to the definition for 'UserSocialAuth.user' or 'CustomUserSocialAuth.user'.\r\ndefault.UserSocialAuth.user: (fields.E305) Reverse query name for 'UserSocialAuth.user' clashes with reverse query name for 'CustomUserSocialAuth.user'.\r\n        HINT: Add or change a related_name argument to the definition for 'UserSocialAuth.user' or 'CustomUserSocialAuth.user'.\r\n```\r\nWhat is the expected way to override this class? As per Django's documentation [the related_name should not be hardcoded in an abstract class](https://docs.djangoproject.com/en/1.9/topics/db/models/#be-careful-with-related-name), maybe I'm missing something, can you help?", "created_at": "2016-05-11T14:18:16Z"}, {"body": "The three possible sources of **redirect-uri** to `backend.strategy.redirect()` call would most likely supply a relative uri. From my encounter with this, the **redirect-uri** got loaded over http which caused Mixed-content error since the social platform disconnection request was made over https scheme.\r\n\r\nSo passing any of the relative **redirect-uri** to `backend.strategy.absolute_uri()` would pass the absolute **redirect-uri** with the desired scheme to `backend.strategy.redirect()`.", "created_at": "2016-05-10T15:54:16Z"}, {"body": "How to extend UserSocialAuth model (add few fields) from django app and tag new one?", "created_at": "2016-05-10T09:02:18Z"}, {"body": "How to use PSA for requests to VK API? Suppose, I want retrieve an profile picture - can I do this, using PSA?", "created_at": "2016-05-10T08:59:18Z"}, {"body": "I needed to add the support for [Edmodo](https://developers.edmodo.com/edmodo-connect/edmodo-connect-overview-getting-started/) for one of my project, I thought someone else would potentially benefit from it:\r\n- OAuth2 backend\r\n- Tests\r\n- Updated documentation", "created_at": "2016-05-09T19:15:54Z"}, {"body": "In case Internal server error is returned by Facebook, unexpected `HTTPError` is raised. In my opinion, all exceptions from `requests` should be transformed to one of social auth exceptions by `handle_http_errors` utility.\r\n\r\nTraceback from the unexpected error:\r\n```\r\n  File \"/usr/lib/python2.7/dist-packages/social/actions.py\", line 43, in do_complete\r\n    user = backend.complete(user=user, *args, **kwargs)\r\n\r\n  File \"/usr/lib/python2.7/dist-packages/social/backends/base.py\", line 40, in complete\r\n    return self.auth_complete(*args, **kwargs)\r\n\r\n  File \"/usr/lib/python2.7/dist-packages/social/utils.py\", line 202, in wrapper\r\n    return func(*args, **kwargs)\r\n\r\n  File \"/usr/lib/python2.7/dist-packages/social/backends/facebook.py\", line 87, in auth_complete\r\n    return self.do_auth(access_token, response, *args, **kwargs)\r\n\r\n  File \"/usr/lib/python2.7/dist-packages/social/backends/facebook.py\", line 104, in do_auth\r\n    data = self.user_data(access_token)\r\n\r\n  File \"/usr/lib/python2.7/dist-packages/social/backends/facebook.py\", line 57, in user_data\r\n    return self.get_json(self.USER_DATA_URL, params=params)\r\n\r\n  File \"/usr/lib/python2.7/dist-packages/social/backends/base.py\", line 225, in get_json\r\n    return self.request(url, *args, **kwargs).json()\r\n\r\n  File \"/usr/lib/python2.7/dist-packages/social/backends/base.py\", line 221, in request\r\n    response.raise_for_status()\r\n\r\n  File \"/usr/lib/python2.7/dist-packages/requests/models.py\", line 851, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\n\r\nHTTPError: 500 Server Error: Internal Server Error\r\n```", "created_at": "2016-05-02T11:05:24Z"}, {"body": "I am trying to run pyramid_example and it gives \r\n'ImportError: No module named 'example.local_settings' error.\r\nKindly Help me. ", "created_at": "2016-04-30T09:00:01Z"}, {"body": "**Sometimes** I get this error. How can I fix it?\r\n\r\n\r\nERROR:django.request:Internal Server Error: /login/steam/\r\nTraceback (most recent call last):\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/openid/fetchers.py\", line 192, in fetch\r\n    return self.fetcher.fetch(*args, **kwargs)\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/openid/fetchers.py\", line 404, in fetch\r\n    c.perform()\r\npycurl.error: (51, \"SSL: no alternative certificate subject name matches target host name 'steamcommunity.com'\")\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/openid/consumer/consumer.py\", line 343, in begin\r\n    service = disco.getNextService(self._discover)\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/openid/yadis/manager.py\", line 105, in getNextService\r\n    yadis_url, services = discover(self.url)\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/openid/consumer/discover.py\", line 471, in discover\r\n    return discoverURI(identifier)\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/openid/consumer/discover.py\", line 463, in discoverURI\r\n    claimed_id, openid_services = discoverYadis(uri)\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/openid/consumer/discover.py\", line 390, in discoverYadis\r\n    response = yadisDiscover(uri)\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/openid/yadis/discover.py\", line 72, in discover\r\n    resp = fetchers.fetch(uri, headers={'Accept': YADIS_ACCEPT_HEADER})\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/openid/fetchers.py\", line 48, in fetch\r\n    return fetcher.fetch(url, body, headers)\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/openid/fetchers.py\", line 201, in fetch\r\n    raise HTTPFetchingError(why=exc_inst)\r\nopenid.fetchers.HTTPFetchingError: (51, \"SSL: no alternative certificate subject name matches target host name 'steamcommunity.com'\")\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/social/backends/open_id.py\", line 245, in openid_request\r\n    params))\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/openid/consumer/consumer.py\", line 346, in begin\r\n    'Error fetching XRDS document: %s' % (why.why,), None)\r\nopenid.yadis.discover.DiscoveryFailure: Error fetching XRDS document: (51, \"SSL: no alternative certificate subject name matches target host name 'steamcommunity.com'\")\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/django/core/handlers/base.py\", line 149, in get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/django/core/handlers/base.py\", line 147, in get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/social/apps/django_app/utils.py\", line 51, in wrapper\r\n    return func(request, backend, *args, **kwargs)\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/social/apps/django_app/views.py\", line 19, in auth\r\n    return do_auth(request.backend, redirect_name=REDIRECT_FIELD_NAME)\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/social/actions.py\", line 28, in do_auth\r\n    return backend.start()\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/social/backends/base.py\", line 35, in start\r\n    if self.uses_redirect():\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/social/backends/open_id.py\", line 239, in uses_redirect\r\n    return self.openid_request().shouldSendRedirect()\r\n  File \"/home/steam-tools/steam-tools/lib/python3.4/site-packages/social/backends/open_id.py\", line 248, in openid_request\r\n    err\r\nsocial.exceptions.AuthException: OpenID discovery error: Error fetching XRDS document: (51, \"SSL: no alternative certificate subject name matches target host name 'steamcommunity.com'\")", "created_at": "2016-04-29T18:11:00Z"}, {"body": "Hey, I'm using 0.2.13 of your plugin and I have the following issue: I set `SOCIAL_AUTH_CLEAN_USERNAMES ` to True (default) but when a users signs up with a Facebook account with an accent in the name, then the username generated has an accent. The space is removed but not the accent eg if Facebook name is `Paul Ledd\u00e9` generated username is `PaulLedd\u00e9` which is not the expected behaviour I think", "created_at": "2016-04-27T05:15:41Z"}, {"body": "now displays social_auth instead of 'default' when running migration tool", "created_at": "2016-04-26T14:35:10Z"}, {"body": "Hello,\r\n\r\nI am using python-social auth within a django application. \r\n\r\nStarting from the 25th of April google authentication stopped to work rising a certificate issue.\r\n\r\nI'm running:\r\n\r\n- Django==1.9.4\r\n- python-social-auth==0.2.12\r\n- requests==2.7.0\r\n- requests-cache==0.4.10\r\n- requests-oauthlib==0.5.0\r\n- certifi==2015.11.20.1\r\n\r\nI didn't change this libs since months ago and nothing changed on the machine.\r\n\r\nAny idea how to fix it?\r\nThanks a lot,\r\nWalter\r\n\r\nThis is the most interesting part of the log stack trace:\r\n\r\nError message\r\nsocial.exceptions:AuthFailed: Authentication failed: [Errno 1] _ssl.c:509: error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed\r\n\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/django/core/handlers/wsgi.py\", line 177, in __call__\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 147, in get_response\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/newrelic-2.58.2.45/newrelic/hooks/framework_django.py\", line 499, in wrapper\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 51, in wrapper\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 28, in complete\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/social/actions.py\", line 43, in do_complete\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/social/backends/base.py\", line 41, in complete\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/social/utils.py\", line 229, in wrapper\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/social/backends/oauth.py\", line 383, in auth_complete\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/social/backends/oauth.py\", line 361, in request_access_token\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/social/backends/base.py\", line 229, in get_json\r\nFile \"/opt/sailogy.com/venv/local/lib/python2.7/site-packages/social/backends/base.py\", line 224, in request", "created_at": "2016-04-26T08:39:57Z"}, {"body": "This project is awesome!\r\nBut I would like to know, is it possible to store data in MongoDB while using Tornado?\r\nIf not - what steps should I take to implement this? Or is it better to use MySQL instead?", "created_at": "2016-04-25T15:30:44Z"}, {"body": "I have followed the flask_example with google OAuth2. When I did the authorization, the user successfully made and entered into the database. But after the redirect, the user was not automatically logged in. I combined python-social-auth with flask-security. Can someone help me figure it out where I made a mistake?\r\nThis is my implementation in app.py\r\n\r\n<pre>user_datastore = SQLAlchemyUserDatastore(db, User, Role)\r\nsecurity = Security(app, user_datastore)\r\n\r\n\r\n\r\nengine = create_engine(app.config['SQLALCHEMY_DATABASE_URI'])\r\nSession = sessionmaker(autocommit=False, autoflush=False, bind=engine)\r\ndb_session = scoped_session(Session)\r\napp.register_blueprint(social_auth)\r\ninit_social(app, db_session)\r\n\r\n\r\nlogin_manager = login.LoginManager()\r\nlogin_manager.login_view = 'security.login'\r\nlogin_manager.login_message = ''\r\nlogin_manager.init_app(app)\r\n@login_manager.user_loader\r\ndef load_user(userid):\r\n    return User.query.get(int(userid))\r\n\r\n\r\n\r\n@app.before_request\r\ndef global_user():\r\n    g.user = login.current_user\r\n\r\n\r\n@app.teardown_appcontext\r\ndef commit_on_success(error=None):\r\n    if error is None:\r\n        db_session.commit()\r\n    else:\r\n        db_session.rollback()\r\n\r\n    db_session.remove()\r\n\r\n\r\n@app.context_processor\r\ndef inject_user():\r\n    try:\r\n        return {'user': g.user}\r\n    except AttributeError:\r\n        return {'user': None}\r\n\r\n\r\napp.context_processor(backends)\r\n</pre>", "created_at": "2016-04-25T06:56:47Z"}, {"body": "This value is useful for authentication servers (AS) that may provide multiple types of tokens. Most servers use the `Bearer` token type; however, we at @edx are transitioning to using `JWT`. The ability to make the switch without having to change our backend would be ideal. Storing the token type means we can avoid hardcoding the value and let the access token response determine which scheme is used for future requests made using the issued token.", "created_at": "2016-04-23T22:30:43Z"}, {"body": "- Added support for passing kwargs to jwt.decode()\r\n- Updated iat claim validation\r\n\r\nThe first commit adds support for passing kwargs to `jwt.decode()`, allowing for great flexibility to determine, for example, which signing algorithms are used or the expected value of the audience claim.\r\n\r\nThe second commit (a) instructs PyJWT to verify the iat claim and ensure a value is present, and (b) makes the value against which the claim is compared configurable. I don't know why I hardcoded this to 10 minutes; but, that is not in the spec, and should be configurable for each individual client.", "created_at": "2016-04-23T21:36:34Z"}, {"body": "There isn't much value to having yet another implementation of JSONField in python-social-auth when plenty of others exist.  This commit replaces the JSONField implementation with that from the package jsonfield. jsonfield is an extra requirement as specifed in setup.py.\n\nNOTE: This implementation of JSONField does not support Django 1.7 or below.", "created_at": "2016-04-23T04:41:16Z"}, {"body": "Django 1.8 is the current long-term support version of Django. There is some code that mentions Django 1.6; but, the South migrations haven't been update along with the standard Django migrations. This could probably fixed; but, it would be simpler to drop support for older versions and remove the cruft from the codebase.", "created_at": "2016-04-23T04:15:10Z"}, {"body": "The default should be an empty dict, not a string value.\n\nFixes #898", "created_at": "2016-04-23T04:10:13Z"}, {"body": "I got it only then I've opened sources. \r\nIn my opinion it will be helpful to be here, because settings without \"SOCIAL_AUTH_\" prifix uses only inside modules, not on web wramework config level.", "created_at": "2016-04-21T21:43:25Z"}, {"body": "In the Flask example app (but not the Flask ME one), the `done` route is defined like this\r\n````python\r\n@login_required\r\n@app.route('/done/')\r\ndef done():\r\n    return render_template('done.html')\r\n````\r\nIn order for the `login_required` decorator to work, it must be \"inside\" of the `app.route` decorator. Currently the `done` route is accessible for non-authenticated users as well.", "created_at": "2016-04-20T15:44:29Z"}, {"body": "Fixes #831.\r\n\r\nShould hopefully do nothing for existing URLs and resolves other named URLs.", "created_at": "2016-04-20T08:23:23Z"}, {"body": "Please review and merge :)", "created_at": "2016-04-20T03:17:13Z"}, {"body": "I want to propose/discuss a possibility to add an i18n support for `python-social-auth`\r\n\r\nHere's my patch with some notes\r\n\r\nI just want to be sure, that I'm moving in right direction and there's a possibility for merge it with base project.\r\n\r\n## What I did:\r\n\r\nI discovered a `Strategy` class and subclasses for each web framework, and decided to put internationalization stuff in this class. And these strategies are injected everywhere in library core\r\n\r\nIn base class I created a method `ugettext`, which, by default, just return a string, that was passed as only argument\r\n\r\nIn `Django` subclass (I have no much experience with other supported frameworks) I overrode it with Django's own `ugettext` function\r\n\r\nI wrapped each message (all messages, that I could find) with `backend.strategy.ugettext` (or similar), so they are translated\r\n\r\nFor default django app I manually created `django.po` file with translations for Russian language\r\n\r\nOther frameworks should provide their `ugettext` implementation and translation resources\r\n\r\nAnd it all works as expected", "created_at": "2016-04-19T07:57:47Z"}, {"body": "I'm trying to use python-social-auth to login with github, but I keep getting ImportError: No module named loading when it reaches Django, because loading doesn't exist anymore.\r\n\r\nI'm using Django 1.9.5 and python-social-auth 0.2.16.\r\n\r\nAny help with this issue would be appreciated.", "created_at": "2016-04-16T02:38:00Z"}, {"body": "As documented here:\r\nhttps://sketchfab.com/developers/oauth", "created_at": "2016-04-15T23:11:43Z"}, {"body": "BaseStrategy.validate_email() will check if a Code object exists, but not that the Code object's email field matches the email parameter passed to the method; indeed, the email parameter isn't used at all.\r\n\r\nIn a nutshell: if you have the social.pipeline.mail.mail_validation backend set up with SOCIAL_AUTH_PASSWORDLESS, you can gain access to any user account on the system. Log in once to get a genuine verification code, take note of the URL callback to the 'social:complete' view (e.g. /social/complete/email/?verification_code=b855c8966abf45e6aaac89af9b12f7c8&email=attacker%40gmail.com ), then hit the same URL but with a different email (e.g. /social/complete/email/?verification_code=b855c8966abf45e6aaac89af9b12f7c8&email=admin%40site.com).", "created_at": "2016-04-15T08:25:06Z"}, {"body": "Weixin have two oauth method:\r\n1. User login with web, when user scan 2D barcode\uff1b\r\n2. User click green submit button in Weixin app.\r\n\r\nThese two way are very different in development scene.\r\nBeacause my poorly english and developer who use weixin oauth\r\nalmost are Chinese.I'll explain in Chinese.\r\n\r\n\u5fae\u4fe1\u6709\u4e24\u79cd\u6388\u6743\u65b9\u5f0f:\r\n1. \u901a\u8fc7\u5fae\u4fe1\u5f00\u653e\u5e73\u53f0\u6ce8\u518c\u7684\u8d26\u53f7\uff0c\u7528\u6237\u53ef\u4ee5\u5728web\u4e0a\u70b9\u51fb\u7528\u5fae\u4fe1\u767b\u9646\uff0c\u6b64\u65f6\u5fae\u4fe1\r\n\u4f1a\u751f\u6210\u4e8c\u7ef4\u7801\uff0c\u7528\u6237\u626b\u63cf\u540e\u5373\u53ef\u767b\u9646\uff1b\r\n2. \u901a\u8fc7\u5fae\u4fe1app\u767b\u9646\uff0c\u5f00\u53d1\u8005\u5728\u5fae\u4fe1\u5f00\u653e\u5e73\u53f0\u6ce8\u518c\u5fae\u4fe1\u516c\u4f17\u53f7(\u670d\u52a1\u53f7)\u540e\uff0c\u7528\u6237\r\n\u6253\u5f00\u9700\u8981\u6388\u6743\u7684\u9875\u9762\u540e\u4f1a\u5148\u51fa\u73b0\u4e00\u4e2a\u6709\u7eff\u8272\u786e\u8ba4\u6309\u94ae\u7684\u9875\u9762\uff0c\u5f53\u7528\u6237\u70b9\u51fb\u767b\u9646\u540e\r\n\u5b8c\u6210\u767b\u9646\u903b\u8f91.\r\n\r\n\u6ce8\u610f\r\n1. \u5982\u679c\u4f60\u662f\u5728\u4e24\u4e2a\u5e73\u53f0\u6ce8\u518c\u7684\u8d26\u53f7\uff0c\u7528\u6237\u4f53\u7cfb\u9700\u8981\u7528\u5fae\u4fe1\u7684uninionid\u81ea\u5df1\r\n\u505a\u552f\u4e00\u6027\u5173\u8054\uff0c\u56e0\u4e3a\u5fae\u4fe1\u8ba4\u4e3a\u8fd9\u662f\u4e24\u4e2aapp\u5373\u4f7f\u4f60\u7528\u540c\u4e00\u4e2a\u5f00\u653e\u8005\u8d26\u53f7\u6ce8\u518c\uff1b\u6240\u4ee5\r\n\u73b0\u8c61\u662f\u540c\u4e00\u4e2a\u7528\u6237\u7528\u5fae\u4fe1\u6253\u5f00\u4e24\u4e2a\u4e0d\u540c\u573a\u666f\u7684\u670d\u52a1\u767b\u9646\u65f6\uff0copenid\u662f\u4e0d\u540c\u7684\uff0c\u4f46\u662f\r\n\u53ef\u4ee5\u901a\u8fc7uninionid\u6765\u5173\u8054,\u552f\u4e00\u786e\u8ba4\u7528\u6237\u3002\r\n2. \u5fae\u4fe1app\u7684\u767b\u9646\u65b9\u5f0f\u8bf7\u6dfb\u52a0\u4e00\u4e2a\u53ef\u4ee5\u6309\u7167\u65e5\u671f\u6216\u8005\u5176\u4ed6\u4efb\u4f55\u968f\u673a\u53d8\u5316\u7684\u53c2\u6570\uff0c\r\n\u56e0\u4e3a\u5fae\u4fe1\u5bf9\u4e8e\u8f6c\u53d1\u6709\u5947\u602a\u7684\u9650\u5236\uff0c\u5f53\u8f6c\u53d1\u91cf\u5230\u4e00\u5b9a\u7a0b\u5ea6\u540e\uff0c\u5fae\u4fe1\u4f1a\u5e9f\u5f03\u8fd9\u4e2a\u94fe\u63a5\uff0c\r\n\u73b0\u8c61\u662f\u4f60\u81ea\u5df1\u5728\u670b\u53cb\u5708\u53ef\u4ee5\u770b\u5230\u81ea\u5df1\u8f6c\u53d1\u7684\u94fe\u63a5\uff0c\u4f46\u662f\u4f60\u7684\u670b\u53cb\u4eec\u5374\u770b\u4e0d\u5230\u3002", "created_at": "2016-04-15T06:36:10Z"}, {"body": "Hello! \r\n\r\n## code:\r\n```\r\nsocial_user = get_object_or_none(\r\n       self.request.user.social_auth.all(),\r\n       provider='vk-oauth2'\r\n)\r\nstrategy = load_strategy(self.request)\r\nprint type(social_user.extra_data)\r\nsocial_user.refresh_token(strategy)\r\n```\r\n## traceback:\r\n### in 0.2.16 version\r\n```\r\n<type 'unicode'>\r\nInternal Server Error: /user-photos/load/vk-oauth2/\r\nTraceback (most recent call last):\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 149, in get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 147, in get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/django/views/generic/base.py\", line 88, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/django/views/generic/base.py\", line 157, in get\r\n    context = self.get_context_data(**kwargs)\r\n  File \"/home/user/papara/apps/user_photos/views.py\", line 329, in get_context_data\r\n    social_user.refresh_token(strategy)\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/social/storage/base.py\", line 49, in refresh_token\r\n    token = self.extra_data.get('refresh_token') or \\\r\nAttributeError: 'unicode' object has no attribute 'get'\r\n```\r\n\r\n### in 0.2.14 version\r\n```\r\n<type 'dict'>\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 149, in get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 147, in get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/django/views/generic/base.py\", line 88, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/django/views/generic/base.py\", line 157, in get\r\n    context = self.get_context_data(**kwargs)\r\n  File \"/home/user/papara/apps/user_photos/views.py\", line 329, in get_context_data\r\n    social_user.refresh_token(strategy)\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/social/storage/base.py\", line 54, in refresh_token\r\n    response = backend.refresh_token(token, *args, **kwargs)\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/social/backends/oauth.py\", line 418, in refresh_token\r\n    request = self.request(url, **request_args)\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/social/backends/base.py\", line 225, in request\r\n    response.raise_for_status()\r\n  File \"/home/user/.virtualenvs/papara/local/lib/python2.7/site-packages/requests/models.py\", line 837, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nHTTPError: 401 Client Error: Unauthorized for url: https://oauth.vk.com/access_token\r\n```\r\n\r\npsa send request vk.com: https://oauth.vk.com/access_token?client_id=<>&client_secret=<>&grant_type=refresh_token&refresh_token=<>\r\nin 0.2.14 vk response: {\"error\":\"invalid_grant\",\"error_description\":\"Code is invalid or expired.\"}\r\n[vk get access_token docs](https://vk.com/dev/oauth_gettoken)\r\nI think, \"code\" param miss\r\n\r\nin 0.2.14 facebook and odnoklassniki refresh_token is OK.\r\n\r\n\r\n\r\n\r\n", "created_at": "2016-04-14T13:28:25Z"}, {"body": "Without this extra_data field can be returned as its raw serialized string...", "created_at": "2016-04-13T23:51:07Z"}, {"body": "", "created_at": "2016-04-12T13:49:47Z"}, {"body": "Hi! I have a problem now with social auth when I try to link the current logined account with some social network.\r\nI use flask with sqlalchemy. The same problem are repeated on the example app https://github.com/omab/python-social-auth/tree/master/examples/flask_example\r\n\r\nUse case:\r\n    - Go to landing page and try to sign up with some social network\r\n    - Click 'disconnect'\r\n    - Then try to associate it again.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/alex/.virtualenvs/pyth_social_auth_example/lib/python2.7/site-packages/flask/app.py\", line 1836, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/home/alex/.virtualenvs/pyth_social_auth_example/lib/python2.7/site-packages/flask/app.py\", line 1820, in wsgi_app\r\n    response = self.make_response(self.handle_exception(e))\r\n  File \"/home/alex/.virtualenvs/pyth_social_auth_example/lib/python2.7/site-packages/flask/app.py\", line 1403, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/alex/.virtualenvs/pyth_social_auth_example/lib/python2.7/site-packages/flask/app.py\", line 1817, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/home/alex/.virtualenvs/pyth_social_auth_example/lib/python2.7/site-packages/flask/app.py\", line 1478, in full_dispatch_request\r\n    response = self.make_response(rv)\r\n  File \"/home/alex/.virtualenvs/pyth_social_auth_example/lib/python2.7/site-packages/flask/app.py\", line 1577, in make_response\r\n    rv = self.response_class.force_type(rv, request.environ)\r\n  File \"/home/alex/.virtualenvs/pyth_social_auth_example/lib/python2.7/site-packages/werkzeug/wrappers.py\", line 847, in force_type\r\n    response = BaseResponse(*_run_wsgi_app(response, environ))\r\n  File \"/home/alex/.virtualenvs/pyth_social_auth_example/lib/python2.7/site-packages/werkzeug/test.py\", line 871, in run_wsgi_app\r\n    app_rv = app(environ, start_response)\r\n  File \"/home/alex/.virtualenvs/pyth_social_auth_example/lib/python2.7/site-packages/werkzeug/local.py\", line 371, in <lambda>\r\n    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)\r\nTypeError: 'User' object is not callable\r\n```\r\n", "created_at": "2016-04-12T08:35:23Z"}, {"body": "This is my first contribution, so please let me know if there are any stylistic or other changes that you'd like me to make.  Thanks!\r\n\r\nref: https://untappd.com/api/docs", "created_at": "2016-04-12T02:15:50Z"}, {"body": "I have some problem. I will try explain by steps:\r\n1. User click \"facebook login\".\r\n2. Redirect to fb page where user uncheck email permission and click ok.\r\n3. Redirect to site and show error because email is empty.\r\n4. User try again and click \"facebook login\" but he cant see fb popup with connection permissions and see only error.\r\n\r\nWhat can I do for set email as required in first fb connection or what can I do for remove old connection without email permission for make new one?\r\nThanks!", "created_at": "2016-04-11T22:08:36Z"}, {"body": "add coding(https://coding.net) oauth2", "created_at": "2016-04-11T00:20:18Z"}, {"body": "I using django with multilanguage supports. Now I need to translate exceptions messages to other languages. How I can do it properly?", "created_at": "2016-04-08T02:59:50Z"}, {"body": "This pull request adds a backend for [Classlink](https://developer.classlink.com/docs/getting-started) - an SSO / rostering provider primarily used in K-12 education. It's been tested and verified working with their sandbox. It includes one small alteration to `set_extra_data` - extra data from Classlink came down as `unicode` and therefore was not caught by `isinstance(self.extra_data, str)`. I've changed it to check for all string types using `six`. \r\n\r\nLet me know if you have questions. Thank you!", "created_at": "2016-04-07T15:30:25Z"}, {"body": "When login with Facebook, the email is always empty:\r\n\r\nThis is my 'details' response:\r\n\r\n{'fullname': 'name', 'first_name': 'first_name', 'username': 'username', 'email': '', 'last_name': 'last_name'}\r\n\r\nThe graph say 'granted':\r\n\r\n![image](https://cloud.githubusercontent.com/assets/6276555/14353423/6898cb9a-fcaf-11e5-90fd-bd0a88d316a2.png)\r\n\r\nMy settings.py:\r\n\r\nAUTHENTICATION_BACKENDS = (\r\n    'social.backends.facebook.FacebookAppOAuth2',\r\n    'social.backends.facebook.FacebookOAuth2',\r\n    'social.backends.google.GoogleOpenId',\r\n    'social.backends.google.GoogleOAuth2',\r\n    'social.backends.google.GoogleOAuth',\r\n    'django.contrib.auth.backends.ModelBackend',\r\n)\r\n\r\nSOCIAL_AUTH_URL_NAMESPACE = 'social'\r\n \r\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = \"/\"\r\n \r\nSOCIAL_AUTH_LOGIN_URL = \"/\"\r\n\r\nSOCIAL_AUTH_EMAIL_VALIDATION_FUNCTION = 'apps.main.mail.send_validation'\r\nSOCIAL_AUTH_EMAIL_VALIDATION_URL = '/email_sent/'\r\nSOCIAL_AUTH_FORCE_EMAIL_VALIDATION = True\r\n\r\nSOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email']\r\n  \r\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\r\n\r\nSOCIAL_AUTH_PIPELINE = (\r\n    'social.pipeline.social_auth.social_details',\r\n    'social.pipeline.social_auth.social_uid',\r\n    'social.pipeline.social_auth.auth_allowed',\r\n    'social.pipeline.social_auth.social_user',\r\n    'social.pipeline.user.get_username',\r\n    'apps.main.pipelines.require_email',\r\n    'apps.main.pipelines.custom_mail_validation',\r\n    'social.pipeline.social_auth.associate_by_email',  \r\n    'social.pipeline.user.create_user',\r\n    'social.pipeline.social_auth.associate_user',\r\n    'social.pipeline.social_auth.load_extra_data',\r\n    'social.pipeline.user.user_details',\r\n    'apps.main.pipelines.login'\r\n)\r\n\r\nAny idea?\r\n\r\nThanks!\r\n", "created_at": "2016-04-07T13:59:00Z"}, {"body": "Changed variable name to be more specific.\r\n'PIPELINE' variable is also a settings variable used in django-pipeline, which causes an error when used together. #838 ", "created_at": "2016-04-07T10:36:57Z"}, {"body": "On the comparison site, the row \"Types\" is empty for python-social-auth.\r\n\r\nhttps://www.djangopackages.com/grids/g/authentication/\r\n\r\nWould be nice if you could fill in the missing data.\r\n\r\nThank you.", "created_at": "2016-04-06T19:50:13Z"}, {"body": "Link is broken and points to a SPAM/Scam website. Looked for a replacement link but it appears the author no longer has a blog, I checked his twitter and googled him and the article. Fixes issue #860 ", "created_at": "2016-04-06T17:45:45Z"}, {"body": "When I run my application, with django 1.9.5, show this warning:\r\n\r\n.../lib/python3.4/site-packages/six.py:808: RemovedInDjango110Warning: SubfieldBase has been deprecated. Use Field.from_db_value instead.\r\n  return meta(name, bases, d)", "created_at": "2016-04-06T03:28:23Z"}, {"body": "Weixin have two oauth method:\r\n1. User login with web, when user scan 2D barcode\uff1b\r\n2. User click green submit button in Weixin app.\r\n\r\nThese two way are very different in development scene.\r\nBeacause my poorly english and developer who use weixin oauth\r\nalmost are Chinese.I'll explain in Chinese.\r\n\r\n\u5fae\u4fe1\u6709\u4e24\u79cd\u6388\u6743\u65b9\u5f0f:\r\n1. \u901a\u8fc7\u5fae\u4fe1\u5f00\u653e\u5e73\u53f0\u6ce8\u518c\u7684\u8d26\u53f7\uff0c\u7528\u6237\u53ef\u4ee5\u5728web\u4e0a\u70b9\u51fb\u7528\u5fae\u4fe1\u767b\u9646\uff0c\u6b64\u65f6\u5fae\u4fe1\r\n\u4f1a\u751f\u6210\u4e8c\u7ef4\u7801\uff0c\u7528\u6237\u626b\u63cf\u540e\u5373\u53ef\u767b\u9646\uff1b\r\n2. \u901a\u8fc7\u5fae\u4fe1app\u767b\u9646\uff0c\u5f00\u53d1\u8005\u5728\u5fae\u4fe1\u5f00\u653e\u5e73\u53f0\u6ce8\u518c\u5fae\u4fe1\u516c\u4f17\u53f7(\u670d\u52a1\u53f7)\u540e\uff0c\u7528\u6237\r\n\u6253\u5f00\u9700\u8981\u6388\u6743\u7684\u9875\u9762\u540e\u4f1a\u5148\u51fa\u73b0\u4e00\u4e2a\u6709\u7eff\u8272\u786e\u8ba4\u6309\u94ae\u7684\u9875\u9762\uff0c\u5f53\u7528\u6237\u70b9\u51fb\u767b\u9646\u540e\r\n\u5b8c\u6210\u767b\u9646\u903b\u8f91.\r\n\r\n\u6ce8\u610f\r\n1. \u5982\u679c\u4f60\u662f\u5728\u4e24\u4e2a\u5e73\u53f0\u6ce8\u518c\u7684\u8d26\u53f7\uff0c\u7528\u6237\u4f53\u7cfb\u9700\u8981\u7528\u5fae\u4fe1\u7684uninionid\u81ea\u5df1\r\n\u505a\u552f\u4e00\u6027\u5173\u8054\uff0c\u56e0\u4e3a\u5fae\u4fe1\u8ba4\u4e3a\u8fd9\u662f\u4e24\u4e2aapp\u5373\u4f7f\u4f60\u7528\u540c\u4e00\u4e2a\u5f00\u653e\u8005\u8d26\u53f7\u6ce8\u518c\uff1b\u6240\u4ee5\r\n\u73b0\u8c61\u662f\u540c\u4e00\u4e2a\u7528\u6237\u7528\u5fae\u4fe1\u6253\u5f00\u4e24\u4e2a\u4e0d\u540c\u573a\u666f\u7684\u670d\u52a1\u767b\u9646\u65f6\uff0copenid\u662f\u4e0d\u540c\u7684\uff0c\u4f46\u662f\r\n\u53ef\u4ee5\u901a\u8fc7uninionid\u6765\u5173\u8054,\u552f\u4e00\u786e\u8ba4\u7528\u6237\u3002\r\n2. \u5fae\u4fe1app\u7684\u767b\u9646\u65b9\u5f0f\u8bf7\u6dfb\u52a0\u4e00\u4e2a\u53ef\u4ee5\u6309\u7167\u65e5\u671f\u6216\u8005\u5176\u4ed6\u4efb\u4f55\u968f\u673a\u53d8\u5316\u7684\u53c2\u6570\uff0c\r\n\u56e0\u4e3a\u5fae\u4fe1\u5bf9\u4e8e\u8f6c\u53d1\u6709\u5947\u602a\u7684\u9650\u5236\uff0c\u5f53\u8f6c\u53d1\u91cf\u5230\u4e00\u5b9a\u7a0b\u5ea6\u540e\uff0c\u5fae\u4fe1\u4f1a\u5e9f\u5f03\u8fd9\u4e2a\u94fe\u63a5\uff0c\r\n\u73b0\u8c61\u662f\u4f60\u81ea\u5df1\u5728\u670b\u53cb\u5708\u53ef\u4ee5\u770b\u5230\u81ea\u5df1\u8f6c\u53d1\u7684\u94fe\u63a5\uff0c\u4f46\u662f\u4f60\u7684\u670b\u53cb\u4eec\u5374\u770b\u4e0d\u5230\u3002", "created_at": "2016-04-05T07:04:38Z"}, {"body": "When oauth provider responds with error, we only got `AuthCanceled` exception.\r\nIt is hard to understand, why provider refuses to accept our request. We can't easily log the response.\r\n\r\nThis patch saves response in attribute of  `AuthCanceled` exception (if it is possible).\r\nAnd users of library can log the response to understand, what really happened.", "created_at": "2016-04-02T19:24:21Z"}, {"body": "\u2026on new login attempts. This can happen with the email backend, which sends data directly to auth:complete, thereby bypassing the call to `clean_partial_pipeline` in `do_auth`.\r\n\r\nMore info:\r\nDuring testing we ran into an issue with old session data from uncompleted email verifications sticking around while trying to login with other accounts. No matter what data you typed into the form, it would send you to a page saying a verification was sent to the email address inside the session's partial pipeline.\r\n\r\nAfter looking through python-social-auth's code, I thought this was the best place to check that any new data, such as an email, matches what's in the current partial pipeline data; it seemed like the best place since it also verifies the backend names match.\r\n\r\nNormally this isn't an issue since do_auth calls clean_partial_pipeline, but the email backend only works when you send data directly to the \"complete\" handler.", "created_at": "2016-03-31T23:00:04Z"}, {"body": "All the emails that are registered through python-social-auth backend do not have any passwords set in their account. \r\n\r\nIf the same users try to reset their password from the from, they do not get email in their mailbox, the users who registered via django backend receive the email properly. \r\n\r\nHow do we sort out this issue? I do not want to ask users for password when they are registering. ", "created_at": "2016-03-31T06:05:10Z"}, {"body": "```\r\nenv/local/lib/python2.7/site-packages/social/apps/django_app/default/migrations/0002_add_related_name.py:18: RemovedInDjango20Warning: on_delete will be a required arg for ForeignKey in Django 2.0. Set it to models.CASCADE on models and in existing migrations if you want to maintain the current default behavior. See https://docs.djangoproject.com/en/1.9/ref/models/fields/#django.db.models.ForeignKey.on_delete\r\n  field=models.ForeignKey(related_name='social_auth', to=settings.AUTH_USER_MODEL)\r\n```", "created_at": "2016-03-29T00:15:21Z"}, {"body": "Facebook auth responds with: ```Invalid appsecret_proof provided in the API argument``` Authentication works if ```SOCIAL_AUTH_APPSECRET_PROOF``` is set to ```False```.\r\n\r\nhttps://github.com/omab/python-social-auth/blob/master/social/backends/facebook.py#L50", "created_at": "2016-03-28T20:19:42Z"}, {"body": "There is a wrong name of the social auth key. I think, 'POCKET_CONSUMER_KEY' shoud be a 'SOCIAL_AUTH_POCKET_KEY'. 'POCKET_CONSUMER_KEY' makes a ''400 Client Error\".", "created_at": "2016-03-27T21:31:28Z"}, {"body": "Hi! Now I'm working on a flask app with the peewee ORM. And I have need to integrate facebook login there. Is it ok to add support for the peewee ORM in `storage`? Actually I can do this.", "created_at": "2016-03-27T15:13:11Z"}, {"body": "When I iniciate a login I get the Google account picker and then I am forwarded back to my website with AttributeError: 'str' object has no attribute 'update'. Sure enough if I\r\n\r\n`print(type(self.extra_data))\r\nprint(self.extra_data)`\r\n\r\nI get\r\n\r\n`<class 'str'>\r\n\"{}\"`\r\n\r\nException Location:\t/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/social/storage/base.py in set_extra_data, line 87", "created_at": "2016-03-24T21:52:40Z"}, {"body": "The `value` retrieved in `login_redirect` is automatically un-escaped and needs to be re-escaped in order to be used in a querystring.   Currently if the redirect url is something like \"/page/?this=that\" then the `REDIRECT_QUERYSTRING` will be \"next=/page/?this=that\" when it should be \"next=/page/%3Fthis%3Dthat\".\r\n\r\nThe way to work around this bug is to use `{{ REDIRECT_FIELD_NAME }}={{ REDIRECT_FIELD_VALUE|urlencode }}` in templates.", "created_at": "2016-03-24T17:09:49Z"}, {"body": "and an optional corresponding argument to social_auth creation and search functions\r\n(namely create_social_auth, get_social_auth and get_social_auth_for_user.)\r\nAlso include this provider_domain in the uniqueness constraint.\r\nThis allows to account for the fact that the UID may be local to a specific instance of a given provider type.\r\nUse case 1: We can have multiple OAuth2 servers based on Wordpress OAuth Server. The UID here is local to a specific Wordpress installation, so I'd include the wordpress server URL as provider_domain.\r\nUse case 2: Facebook uids are keyed to a app_id, so different apps will receive a different uid for the same user. There is a global uniqueness constraint for app-depedent uids, but that uniqueness does not extend to test accounts. So it is safer to include the app_id as provider_domain in facebook social_auth models.", "created_at": "2016-03-23T19:23:50Z"}, {"body": "The docs at http://psa.matiasaguirre.net/docs/configuration/django.html#exceptions-middleware state that if there's an error that the `message` and `backend` are attached to the redirect url as GET variables.  However, the middleware tries to use the Django messaging system first and only does the GET variables if the messaging fails.  There's no mention of django.contrib.messages in the docs here.", "created_at": "2016-03-23T16:50:22Z"}, {"body": "hi folks\r\n\r\nWeChat, also have a common name WeiXin in chinese, along with QQ (supported already), is  made by Tencent. \r\n\r\nnow it become the most hitest molibe app in China.\r\n\r\nso i'm wandering if someone can go with me to add wechat to the Auth providers list\r\n\r\nfeel free to reply me if you are facing any problem.\r\n\r\nthx", "created_at": "2016-03-23T04:27:39Z"}, {"body": "It breaks here:\r\nhttps://github.com/omab/python-social-auth/blob/b07708efe7d19b75009771aa97ddf821e59ec08e/social/backends/xing.py#L35\r\n\r\nXing doesn't like that we transmit the oauth parameters `oauth_callback` and `oauth_verifier` in the request (set here: https://github.com/omab/python-social-auth/blob/b07708efe7d19b75009771aa97ddf821e59ec08e/social/backends/oauth.py#L289). These are actually not needed anymore in this request (auth is done) and Xing fails this request with a `400`.", "created_at": "2016-03-18T21:54:31Z"}, {"body": "I am trying to find out when/where is session written. I am using Redis to store session and it's working properly, but I'd like to avoid sending a `user` to template, I want to write a custom session, instead of the default and return a JSON with the user data if everything went right I have tried with pipelines but I can't find where session is written. Is this possible?", "created_at": "2016-03-18T17:29:01Z"}, {"body": "Fix a small typo. Feel free to squash this ^^.", "created_at": "2016-03-18T15:11:35Z"}, {"body": "`Internal Server Error: /login/twitter/`\r\n\r\n```\r\nInternal Server Error: /login/twitter/\r\nTraceback (most recent call last):\r\n  File \"/home/paperc/.pyenv/versions/paperc/lib/python2.7/site-packages/django/core/handlers/base.py\", line 132, in get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/home/paperc/.pyenv/versions/paperc/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/home/paperc/.pyenv/versions/paperc/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 51, in wrapper\r\n    return func(request, backend, *args, **kwargs)\r\n  File \"/home/paperc/.pyenv/versions/paperc/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 19, in auth\r\n    return do_auth(request.backend, redirect_name=REDIRECT_FIELD_NAME)\r\n  File \"/home/paperc/.pyenv/versions/paperc/lib/python2.7/site-packages/social/actions.py\", line 28, in do_auth\r\n    return backend.start()\r\n  File \"/home/paperc/.pyenv/versions/paperc/lib/python2.7/site-packages/social/backends/base.py\", line 36, in start\r\n    return self.strategy.redirect(self.auth_url())\r\n  File \"/home/paperc/.pyenv/versions/paperc/lib/python2.7/site-packages/social/backends/oauth.py\", line 165, in auth_url\r\n    token = self.set_unauthorized_token()\r\n  File \"/home/paperc/.pyenv/versions/paperc/lib/python2.7/site-packages/social/backends/oauth.py\", line 221, in set_unauthorized_token\r\n    token = self.unauthorized_token()\r\n  File \"/home/paperc/.pyenv/versions/paperc/lib/python2.7/site-packages/social/backends/oauth.py\", line 245, in unauthorized_token\r\n    method=self.REQUEST_TOKEN_METHOD\r\n  File \"/home/paperc/.pyenv/versions/paperc/lib/python2.7/site-packages/social/backends/base.py\", line 225, in request\r\n    response.raise_for_status()\r\n  File \"/home/paperc/.pyenv/versions/paperc/lib/python2.7/site-packages/requests/models.py\", line 851, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nHTTPError: 503 Server Error: Service Temporarily Unavailable\r\n```\r\n\r\nShouldn't this be caught and redirected to `SOCIAL_AUTH_LOGIN_ERROR_URL` instead of generating a 500?", "created_at": "2016-03-18T14:25:40Z"}, {"body": "I read [the documentation of PIPELINE](https://python-social-auth.readthedocs.org/en/latest/pipeline.html), but the last part, save_profile(), didn't work.\r\nFirst, get_profile() was deleted on Django, so Django gave me an Error.\r\n\r\nI'd like to do this.\r\n\r\n> create full_name field and set \"name\" from facebook in full_name field.\r\n\r\nIs myfacebook_pipeline.py something wrong, or is the order of setting PIPELINE wrong? \r\n\r\nIf you give me some piece of advice, I would be grateful.\r\n\r\n\r\nmodels.py\r\n```\r\n\r\nfrom django.contrib.auth.models import AbstractUser\r\nclass User2(AbstractUser):\r\n    full_name = models.Charfield()\r\n```\r\n\r\n\r\nmyfacebook_pipeline.py  # almost same as [save_profile() of documentations](https://python-social-auth.readthedocs.org/en/latest/pipeline.html#extending-the-pipeline)\r\n\r\n```\r\nfrom myapp.models import User2\r\n\r\ndef myfacebook(backend, user, response, *args, **kwargs):\r\n    import pdb; pdb.set_trace()\r\n    if backend.name == 'facebook':\r\n        profile = User2.objects.get(id=user.id)\r\n        profile.full_name = response.get('name')\r\n        profile.username = response.get('email')\r\n        profile.save()\r\n```\r\n\r\n\r\nsettings.py\r\n\r\n```\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'myapp',\r\n    'debug_toolbar',\r\n    'social.apps.django_app.default',\r\n]\r\n\r\nMIDDLEWARE_CLASSES = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.cache.UpdateCacheMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.cache.FetchFromCacheMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n    'social.apps.django_app.middleware.SocialAuthExceptionMiddleware',\r\n]\r\n\r\nAUTHENTICATION_BACKENDS = (\r\n    'social.backends.open_id.OpenIdAuth',\r\n    'social.backends.facebook.FacebookOAuth2',\r\n    'django.contrib.auth.backends.ModelBackend',\r\n)\r\n\r\n\r\nSOCIAL_AUTH_URL_NAMESPACE = 'social'\r\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/home/'\r\nSOCIAL_AUTH_LOGIN_ERROR_URL = '/login-error/'\r\nSOCIAL_AUTH_LOGIN_URL = '/'\r\nSOCIAL_AUTH_DISCONNECT_REDIRECT_URL = '/logout/'\r\n\r\nSOCIAL_AUTH_FACEBOOK_KEY = 'key'\r\nSOCIAL_AUTH_FACEBOOK_SECRET = 'password'\r\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\r\nSOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\r\n    'fields': 'id, name, email', \r\n}\r\n\r\nSOCIAL_AUTH_PIPELINE = (\r\n    'social.pipeline.social_auth.social_details',\r\n    'social.pipeline.social_auth.social_uid',\r\n    'social.pipeline.social_auth.auth_allowed',\r\n    'social.pipeline.social_auth.social_user',\r\n    'social.pipeline.user.get_username',\r\n    'social.pipeline.user.create_user',\r\n\r\n    'pylib.pipeline.myfacebook_pipeline.myfacebook',  # <= my pipeline\r\n\r\n    'social.pipeline.social_auth.associate_user',\r\n    'social.pipeline.social_auth.load_extra_data',\r\n    'social.pipeline.user.user_details',\r\n)\r\n\r\nSOCIAL_AUTH_DISCONNECT_PIPELINE = (\r\n    'social.pipeline.disconnect.allowed_to_disconnect',\r\n    'social.pipeline.disconnect.get_entries',\r\n    'social.pipeline.disconnect.revoke_tokens',\r\n    'social.pipeline.disconnect.disconnect',\r\n)\r\n```\r\n\r\n\r\nDjango: 1.9, \r\nPython: 3.5, \r\npython-social-auth: 0.2.14, ", "created_at": "2016-03-17T23:47:49Z"}, {"body": "I'm using **python 3.4, django 1.9.4**.\r\nI check #592 and Facebook returns access token by  **json format**, since Facebook v2.3.\r\n\r\nHowever FacebookOAuth2 `process_refresh_token_response` still returns `parse_qs` so it returns empty resutls.\r\n\r\nInstead of FacebookOAuth2 `process_refresh_token_response(self, response, *args, **kwargs)`, it's parents(BaseOAuth2)'s code works. \r\n```\r\ndef process_refresh_token_response(self, response, *args, **kwargs):\r\n        return response.json()\r\n```\r\n", "created_at": "2016-03-17T14:08:04Z"}, {"body": "I could have logged in my application with facebook account, but after I added this following code, all of sudden, I was less able to log in with this Error.\r\n\r\n```\r\nSOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\r\n    'fields': 'id,name,email', \r\n}\r\n```\r\n\r\n> AttributeError at /complete/facebook/\r\n> 'NoneType' object has no attribute 'provider'\r\n\r\nI asked this in [Stackoverflow](http://stackoverflow.com/questions/36050247/i-was-less-able-to-login-my-django-app-with-facebook-account-with-attributeerror), but I found here and thought here would be appropriate to ask.\r\n\r\nIs this Error caused because of my codes or facebook settings?\r\n\r\npython: 3.5.1, Django 1.9.2, python-social-auth: 0.2.14\r\n\r\nsettings.py\r\n\r\n```\r\n# -*- coding: utf-8 -*-\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\n# when we develop in testcase\r\nDEBUG = True\r\nALLOWED_HOSTS = []\r\n\r\n# when we release our site\r\n#DEBUG = False\r\n#ALLOWED_HOSTS = ['*']\r\n\r\n\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'myapp',\r\n    'debug_toolbar',\r\n    'social.apps.django_app.default',\r\n]\r\n\r\nMIDDLEWARE_CLASSES = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.cache.UpdateCacheMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.cache.FetchFromCacheMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n    'social.apps.django_app.middleware.SocialAuthExceptionMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'mysite.urls'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [os.path.join(BASE_DIR, 'templates'),],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.core.context_processors.debug',\r\n                'django.core.context_processors.i18n',\r\n                'django.core.context_processors.media',\r\n                'django.core.context_processors.static',\r\n                'django.core.context_processors.tz',\r\n                'django.contrib.messages.context_processors.messages',\r\n                'social.apps.django_app.context_processors.backends',\r\n                'social.apps.django_app.context_processors.login_redirect',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators\r\n\r\nAUTH_USER_MODEL = 'myapp.User2'\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\nAUTHENTICATION_BACKENDS = (\r\n    'social.backends.open_id.OpenIdAuth',\r\n    'social.backends.twitter.TwitterOAuth',\r\n    'social.backends.facebook.FacebookOAuth2',\r\n    'social.backends.google.GoogleOAuth2',\r\n    'django.contrib.auth.backends.ModelBackend',\r\n)\r\n\r\n\r\nSOCIAL_AUTH_URL_NAMESPACE = 'social'\r\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/home/'\r\nSOCIAL_AUTH_LOGIN_ERROR_URL = '/login-error/'\r\nSOCIAL_AUTH_LOGIN_URL = '/'\r\nSOCIAL_AUTH_DISCONNECT_REDIRECT_URL = '/logout/'\r\n# facebook\r\nSOCIAL_AUTH_FACEBOOK_KEY = 'key'\r\nSOCIAL_AUTH_FACEBOOK_SECRET = 'password'\r\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\r\n#SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\r\n#    'fields': 'id,name,email', \r\n#}\r\n\r\nSOCIAL_AUTH_DISCONNECT_PIPELINE = (\r\n    # Verifies that the social association can be disconnected from the current\r\n    # user (ensure that the user login mechanism is not compromised by this\r\n    # disconnection).\r\n    'social.pipeline.disconnect.allowed_to_disconnect',\r\n\r\n    # Collects the social associations to disconnect.\r\n    'social.pipeline.disconnect.get_entries',\r\n\r\n    # Revoke any access_token when possible.\r\n    'social.pipeline.disconnect.revoke_tokens',\r\n\r\n    # Removes the social associations.\r\n    'social.pipeline.disconnect.disconnect',\r\n)\r\n", "created_at": "2016-03-17T02:51:38Z"}, {"body": "But instead use the standard recommended getLogger function https://docs.python.org/2/library/logging.html#logger-objects", "created_at": "2016-03-14T18:08:00Z"}, {"body": "I noticed a few other solutions of this matter but, unfortunately, neither of them worked for me.\r\nThis patch solves not the issue with Subfield (that works in older versions of Django too), also it fixes wrong value handling due to changed base class.", "created_at": "2016-03-14T01:07:23Z"}, {"body": "I try to follow the Book \"Django By Example\" (Chapter 04) with Django 1.9 and Python 3.5.1, but when I try the google login, it doesn't work. I put just `'social.backends.google.GoogleOAuth2',`, but the debug says: `Backend not found`.\r\n\r\nWhat am I doing wrong?\r\nThanks", "created_at": "2016-03-08T03:30:44Z"}, {"body": "Edit. Well, problem was that i had another app called social and i forgot about it.\r\nGet following error message when run\r\n\r\n    python manage.py migrate\r\n\r\nPython version is 3.4\r\n\r\nError:\r\n\r\n        Traceback (most recent call last):\r\n          File \"<frozen importlib._bootstrap>\", line 2218, in _find_and_load_unlocked\r\n        AttributeError: 'module' object has no attribute '__path__'\r\n       \r\n       During handling of the above exception, another exception occurred:\r\n\r\n        Traceback (most recent call last):\r\n          File \"manage.py\", line 10, in <module>\r\n            execute_from_command_line(sys.argv)\r\n          File \"/home/grigoriy/Sources/Web/gamepartners/venv/lib/python3.4/site-packages/django/core/management/__init__.py\", line 353, in execute_from_command_line\r\n    utility.execute()\r\n          File \"/home/grigoriy/Sources/Web/gamepartners/venv/lib/python3.4/site-packages/django/core/management/__init__.py\", line 327, in execute\r\n    django.setup()\r\n          File \"/home/grigoriy/Sources/Web/gamepartners/venv/lib/python3.4/site-packages/django/__init__.py\", line 18, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n          File \"/home/grigoriy/Sources/Web/gamepartners/venv/lib/python3.4/site-packages/django/apps/registry.py\", line 85, in populate\r\n    app_config = AppConfig.create(entry)\r\n          File \"/home/grigoriy/Sources/Web/gamepartners/venv/lib/python3.4/site-packages/django/apps/copy\", line 116, in create\r\n        .py\", line 116, in create\r\n        ig.py\", line 116, in create\r\n        fig.py\", line 116, in create\r\n        nfig.py\", line 116, in create\r\n        line 116, in create\r\n            mod = import_module(mod_path)\r\n                  File \"/home/grigoriy/Sources/Web/gamepartners/venv/lib/python3.4/importlib/__init__.py\", line 109, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n          File \"<frozen importlib._bootstrap>\", line 2254, in _gcd_import\r\n          File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\r\n          File \"<frozen importlib._bootstrap>\", line 2221, in _find_and_load_unlocked\r\n        ImportError: No module named 'social.apps.django_app'; 'social.apps' is not a package", "created_at": "2016-03-05T17:49:01Z"}, {"body": "The link \"A Rest API using Django and authentication with OAuth2 AND third parties!\" in [`docs/uses_cases.rst`](https://github.com/omab/python-social-auth/blob/b51d8248521779a609dbd5e4754c9432c553e50b/docs/use_cases.rst#signup-by-oauth-access_token) is broken.", "created_at": "2016-03-03T16:10:43Z"}, {"body": "raise HTTPError(http_error_msg, response=self)\r\n\r\nException Type: HTTPError at /complete/google-plus/\r\nException Value: 500 Server Error: Internal Server Error for url: https://www.googleapis.com/plus/v1/people/me?access_token=ya29.lwKoepIJhAaefiMgalubRxr7q-uy3VxHMwDHtgGaJl6ucbUDEY8xNtkTHvvDby-HYYuA-A&alt=json\r\nRequest information:\r\nGET:", "created_at": "2016-03-02T16:12:11Z"}, {"body": "I'm trying to use `examples/flask_example` and run `python manage.py run server` after pip-installing everything, but for most auth providers I'm getting errors, e.g. this one for Twitter: **\u201cValueError: Only unicode objects are escapable. Got None of type <type 'NoneType'>.\"** \r\n\r\nSo far I'm getting only a login window for Instagram, Yandex, Podio, Mined and (maybe) Persona, where I don't have an account. It looks like most sites barf at some client or app ID being wrong.\r\n\r\nI think I've read the docs about configuration etc. but it looks like this example should work as-is, or isn't that the case?\r\n\r\nI just retested with `examples/django_example` and apparently I'm getting exactly the same results. So it's not a matter of flask... ", "created_at": "2016-03-01T14:17:50Z"}, {"body": "Can anyone help with \"AuthStateForbidden: Wrong state parameter given.\" issue? I don't know how to reproduce this issue but getting this error occasionally.\r\n\r\nInternal Server Error: /sso/social/complete/linkedin-oauth2/\r\nTraceback (most recent call last):\r\n  File\r\n\"/virtualenvs/pyappd/lib/python2.7/site-packages/django/core/handlers/base.py\",\r\nline 132, in get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File\r\n\"/virtualenvs/pyappd/lib/python2.7/site-packages/django/utils/decorators.py\",\r\nline 145, in inner\r\n    return func(*args, **kwargs)\r\n  File\r\n\"/virtualenvs/pyappd/lib/python2.7/site-packages/django/views/decorators/csrf.py\",\r\nline 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File\r\n\"/virtualenvs/pyappd/lib/python2.7/site-packages/social/apps/django_app/utils.py\",\r\nline 52, in wrapper\r\n    return func(request, backend, *args, **kwargs)\r\n  File\r\n\"/virtualenvs/pyappd/lib/python2.7/site-packages/social/apps/django_app/views.py\",\r\nline 20, in complete\r\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\r\n  File\r\n\"/virtualenvs/pyappd/lib/python2.7/site-packages/social/actions.py\",\r\nline 43, in do_complete\r\n    user = backend.complete(user=user, *args, **kwargs)\r\n  File\r\n\"/virtualenvs/pyappd/lib/python2.7/site-packages/social/backends/base.py\",\r\nline 40, in complete\r\n    return self.auth_complete(*args, **kwargs)\r\n  File\r\n\"/virtualenvs/pyappd/lib/python2.7/site-packages/social/backends/oauth.py\",\r\nline 357, in auth_complete\r\n    state = self.validate_state()\r\n  File\r\n\"/virtualenvs/pyappd/lib/python2.7/site-packages/social/backends/oauth.py\",\r\nline 83, in validate_state\r\n    raise AuthStateForbidden(self)\r\nAuthStateForbidden: Wrong state parameter given.", "created_at": "2016-03-01T05:11:14Z"}, {"body": "While running `python manage.py makemessages` in a Django project, it complains that the `weibo.py` file is not using a known encoding. Replacing `utf8` with `utf-8` removes the warning.\r\n\r\n````\r\nxgettext: ./lib/python2.7/site-packages/social/backends/weibo.py:1: Unknown encoding \"utf8\". Proceeding with ASCII instead.\r\n````", "created_at": "2016-02-27T17:35:24Z"}, {"body": "I'm trying to add Yahoo OpenID login to my existing python-social-auth login options in a Django application. \r\n\r\nI have a login url like:\r\n```\r\n/social-auth/login/yahoo/?next=https://localhost/login/DYNAMIC_UUID_HERE/\r\n```\r\nThe process goes through, hits /social-auth/complete/yahoo/ and then goes to SOCIAL_AUTH_LOGIN_REDIRECT_URL instead of the *next* url. Other backends I use (all oauth actually) don't have that problem. What can be the cause of this?\r\n\r\nI tried yahoo oauth2, but I get \"ups something went wrong\" type message on Yahoo - either by trying to test from localhost or they have a problem.", "created_at": "2016-02-24T15:24:35Z"}, {"body": "I see lot of sites now using login with office365, similar to signin with google, facebook or tweeter (though very low amount of sites.). Is it yet supported in python-social-auth or planning to support?\r\n", "created_at": "2016-02-23T22:51:25Z"}, {"body": "Applications submitted to Twitter's privileged list can now obtain user e-mail address. Fix for #825 ", "created_at": "2016-02-23T17:25:45Z"}, {"body": "Fixes exception 'str' object has no attribute 'update' when user profile is updated. #771 ", "created_at": "2016-02-23T17:21:51Z"}, {"body": "I used Python social auth for fb integration which works fine.\r\nWhen I try to use it for google I am getting Oauth cancelled error\r\nOn debugging it a bit, I realized I am getting this error on making a post request to get the access_token as on making the request I am getting 400 bad request from google.\r\n\r\nHere is a bit of relevant code for this problem. Kindly help if any one can\r\nAUTHENTICATION_BACKENDS = (\r\n    'social.backends.facebook.FacebookOAuth2',\r\n    'social.backends.google.GoogleOAuth2',\r\n    'social.backends.google.GooglePlusAuth',\r\n    'social.backends.twitter.TwitterOAuth',  # OAuth1.0\r\n    'django.contrib.auth.backends.ModelBackend',\r\n)\r\n\r\nSOCIAL_AUTH_PIPELINE = (\r\n    'users.social_pipeline.auto_logout',  # custom action\r\n    'social.pipeline.social_auth.social_details',\r\n    'social.pipeline.social_auth.social_uid',\r\n    'social.pipeline.social_auth.auth_allowed',\r\n    'social.pipeline.social_auth.social_user',\r\n    'social.pipeline.user.get_username',\r\n    'social.pipeline.user.create_user',\r\n    'social.pipeline.social_auth.associate_user',\r\n    'social.pipeline.social_auth.load_extra_data',\r\n    'social.pipeline.user.user_details',\r\n    'users.social_pipeline.save_avatar',  # custom action\r\n)\r\n\r\nLOGGING = {\r\n    'version': 1,\r\n    'disable_existing_loggers': False,\r\n    'handlers': {\r\n        'console': {\r\n            'level': 'DEBUG',\r\n            'class': 'logging.StreamHandler',\r\n        },\r\n    },\r\n    'loggers': {\r\n        'rest_social_auth': {\r\n            'handlers': ['console', ],\r\n            'level': \"DEBUG\",\r\n        },\r\n    }\r\n}\r\n\r\n**Custom pipeline that I am using**\r\n\r\nimport hashlib\r\n\r\n\r\ndef auto_logout(*args, **kwargs):\r\n    \"\"\"Do not compare current user with new one\"\"\"\r\n    return {'user': None}\r\n\r\n\r\ndef save_avatar(strategy, details, user=None, *args, **kwargs):\r\n    \"\"\"Get user avatar from social provider.\"\"\"\r\n    if user:\r\n        backend_name = kwargs['backend'].__class__.__name__.lower()\r\n        response = kwargs.get('response', {})\r\n        social_thumb = None\r\n        if 'facebook' in backend_name:\r\n            if 'id' in response:\r\n                social_thumb = (\"http://graph.facebook.com/{0}/picture?\"\r\n                    \"type=normal\").format(response['id'])\r\n        elif 'twitter' in backend_name and response.get('profile_image_url'):\r\n            social_thumb = response['profile_image_url']\r\n        else:\r\n            social_thumb = \"http://www.gravatar.com/avatar/\"\r\n            social_thumb += hashlib.md5(user.email.lower().encode('utf8')).hexdigest()\r\n            social_thumb += \"?size=100\"\r\n        if social_thumb and user.social_thumb != social_thumb:\r\n            user.social_thumb = social_thumb\r\n            strategy.storage.user.changed(user)", "created_at": "2016-02-22T07:32:41Z"}, {"body": "I was trying to update python-saml from 2.1.3 to 2.1.6 \r\nI had to install the following dependencies in that process. This is the updated requirements file.\r\nHowever, I was stuck at one point. In python-social-auth/social/backends/azuread.py we have:\r\nfrom jwt import DecodeError, ExpiredSignature, decode as jwt_decode\r\nThere are no such errors or exceptions defined in jwt.\r\nI am stuck here.\r\nI could be missing something here. I couldnt find such issues anywhere else.", "created_at": "2016-02-20T09:33:01Z"}, {"body": "I tried to log in using google oauth2 with python-social-auth after two weeks and suddenly, seeing this error : Backend Not Found. \r\nErrors is at https://example.com/login/google/\r\n\r\nMy domain name is correct for my local. I don't understand what's causing this error suddenly as google did not complain earlier with the exact domain name. \r\n\r\nAnyone aware of this issue, please let me know what could be a possible reason. I tried changing the Google App and set a new pair of keys for the Google OAuth2 backend. Still, the same error occurred. ", "created_at": "2016-02-19T22:31:54Z"}, {"body": "Adds support for OAuth2 with Itembase.", "created_at": "2016-02-19T09:47:58Z"}, {"body": "", "created_at": "2016-02-16T04:25:00Z"}, {"body": " [python-saml 2.1.6 release](https://github.com/onelogin/python-saml/releases/tag/v2.1.6)\r\nincludes a security fix, please use it instead of 2.1.3\r\n\r\nSome documents reference old version:\r\n- social/tests/requirements.txt\r\n- docs/backends/saml.rst\r\n\r\n\r\n", "created_at": "2016-02-16T01:05:53Z"}, {"body": "", "created_at": "2016-02-15T16:52:49Z"}, {"body": "I'm trying to log-in with twitter using example https://github.com/omab/python-social-auth/tree/master/examples/django_example\r\n\r\nThe twitter side goes fine with twitter redirecting my into http://127.0.0.1:8000/complete/twitter where I'm getting\r\n\r\nOperationalError at /complete/twitter/ no such table: app_customuser\r\n\r\n```\r\nEnvironment:\r\n\r\n\r\nRequest Method: GET\r\nRequest URL: http://127.0.0.1:8000/complete/twitter/?redirect_state=BLa0NTd6yUIEa47Aa0GimQJs8DK7iFg3&oauth_token=vj8STgAAAAAAkXlhAAABUuA6ldA&oauth_verifier=gUDxqTwS20PRPUlgDEQ3QN7T237qUdAR\r\n\r\nDjango Version: 1.9.2\r\nPython Version: 2.7.9\r\nInstalled Applications:\r\n('django.contrib.auth',\r\n 'django.contrib.admin',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.sites',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'social.apps.django_app.default',\r\n 'example.app')\r\nInstalled Middleware:\r\n('django.middleware.common.CommonMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware')\r\n\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  149.                     response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\r\n  147.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\r\n  57.         response = view_func(request, *args, **kwargs)\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\r\n  58.         return view_func(*args, **kwargs)\r\n\r\nFile \"../../social/apps/django_app/utils.py\" in wrapper\r\n  51.             return func(request, backend, *args, **kwargs)\r\n\r\nFile \"../../social/apps/django_app/views.py\" in complete\r\n  28.                        redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\r\n\r\nFile \"../../social/actions.py\" in do_complete\r\n  43.         user = backend.complete(user=user, *args, **kwargs)\r\n\r\nFile \"../../social/backends/base.py\" in complete\r\n  41.         return self.auth_complete(*args, **kwargs)\r\n\r\nFile \"../../social/utils.py\" in wrapper\r\n  229.             return func(*args, **kwargs)\r\n\r\nFile \"../../social/backends/oauth.py\" in auth_complete\r\n  182.         return self.do_auth(access_token, *args, **kwargs)\r\n\r\nFile \"../../social/utils.py\" in wrapper\r\n  229.             return func(*args, **kwargs)\r\n\r\nFile \"../../social/backends/oauth.py\" in do_auth\r\n  193.         return self.strategy.authenticate(*args, **kwargs)\r\n\r\nFile \"../../social/strategies/django_strategy.py\" in authenticate\r\n  96.         return authenticate(*args, **kwargs)\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/contrib/auth/__init__.py\" in authenticate\r\n  74.             user = backend.authenticate(**credentials)\r\n\r\nFile \"../../social/backends/base.py\" in authenticate\r\n  82.         return self.pipeline(pipeline, *args, **kwargs)\r\n\r\nFile \"../../social/backends/base.py\" in pipeline\r\n  85.         out = self.run_pipeline(pipeline, pipeline_index, *args, **kwargs)\r\n\r\nFile \"../../social/backends/base.py\" in run_pipeline\r\n  112.             result = func(*args, **out) or {}\r\n\r\nFile \"../../social/pipeline/social_auth.py\" in social_user\r\n  20.     social = backend.strategy.storage.user.get_social_auth(provider, uid)\r\n\r\nFile \"../../social/apps/django_app/default/models.py\" in get_social_auth\r\n  48.                                                           uid=uid)\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/db/models/query.py\" in get\r\n  381.         num = len(clone)\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/db/models/query.py\" in __len__\r\n  240.         self._fetch_all()\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/db/models/query.py\" in _fetch_all\r\n  1074.             self._result_cache = list(self.iterator())\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/db/models/query.py\" in __iter__\r\n  52.         results = compiler.execute_sql()\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/db/models/sql/compiler.py\" in execute_sql\r\n  848.             cursor.execute(sql, params)\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\r\n  79.             return super(CursorDebugWrapper, self).execute(sql, params)\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\r\n  64.                 return self.cursor.execute(sql, params)\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/db/utils.py\" in __exit__\r\n  95.                 six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\r\n  64.                 return self.cursor.execute(sql, params)\r\n\r\nFile \"/home/bob/.local/lib/python2.7/site-packages/django/db/backends/sqlite3/base.py\" in execute\r\n  323.         return Database.Cursor.execute(self, query, params)\r\n\r\nException Type: OperationalError at /complete/twitter/\r\nException Value: no such table: app_customuser\r\n```\r\n\r\nWould love any help!", "created_at": "2016-02-15T10:48:11Z"}, {"body": "I was just about to write some code that checks if an `access_token` is still valid, but it turns out python social auth doesn't have the creation date of the `access_token` anywhere and thus I cannot calculate with the `expires` in any way. Did I miss something? I cannot use the creation date of the user account or similar because the social auth might come later and of course the token might get refreshed and then the expiration is counting from that time on.", "created_at": "2016-02-11T15:19:45Z"}, {"body": "I'm trying to use python-social-auth in Flask with the google-oauth2 backend and a PostgreSQL+psycopg2 database.  My models are in a module called `ha.models` and I've done this:\r\n\r\n```\r\nfrom ha.models import db, engine\r\nfrom social.apps.flask_app.default import models\r\ndb.metadata.create_all(engine)\r\nmodels.PSABase.metadata.create_all(engine)\r\n```\r\n\r\nThis seems to have worked:\r\n\r\n```\r\n$ psql ha\r\npsql (9.3.6)\r\nType \"help\" for help.\r\n\r\nha=> \\dt\r\n                  List of relations\r\n Schema |            Name            | Type  | Owner\r\n--------+----------------------------+-------+--------\r\n public | devices                    | table | tkcook\r\n public | rooms                      | table | tkcook\r\n public | social_auth_association    | table | tkcook\r\n public | social_auth_code           | table | tkcook\r\n public | social_auth_nonce          | table | tkcook\r\n public | social_auth_usersocialauth | table | tkcook\r\n public | switches                   | table | tkcook\r\n public | user_devices               | table | tkcook\r\n public | users                      | table | tkcook\r\n(9 rows)\r\n```\r\n\r\nBut when I try to login to the webapp, I get:\r\n\r\n```\r\nsqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) column social_auth_usersocialauth.uid does not exist\r\nLINE 1: ...ra_data AS social_auth_usersocialauth_extra_data, social_aut...\r\n                                                             ^\r\n [SQL: 'SELECT social_auth_usersocialauth.id AS social_auth_usersocialauth_id, social_auth_usersocialauth.provider AS social_auth_usersocialauth_provider, social_auth_usersocialauth.extra_data AS social_auth_usersocialauth_extra_data, social_auth_usersocialauth.uid AS social_auth_usersocialauth_uid, social_auth_usersocialauth.user_id AS social_auth_usersocialauth_user_id \\nFROM social_auth_usersocialauth \\nWHERE social_auth_usersocialauth.provider = %(provider_1)s AND social_auth_usersocialauth.uid = %(uid_1)s \\n LIMIT %(param_1)s'] [parameters: {'provider_1': 'google-oauth2', 'param_1': 1, 'uid_1': 'XXX@gmail.com'}]\r\n```\r\n\r\nIt seems it has got confused about the name of the (u)id column somewhere along the way:\r\n\r\n```\r\nha=> \\d social_auth_usersocialauth\r\n                                  Table \"public.social_auth_usersocialauth\"\r\n   Column   |         Type          |                                Modifiers\r\n------------+-----------------------+-------------------------------------------------------------------------\r\n id         | integer               | not null default nextval('social_auth_usersocialauth_id_seq'::regclass)\r\n provider   | character varying(32) |\r\n extra_data | text                  |\r\nIndexes:\r\n    \"social_auth_usersocialauth_pkey\" PRIMARY KEY, btree (id)\r\n```\r\n\r\nWhat is going on?", "created_at": "2016-02-11T14:36:40Z"}, {"body": "This change modifies the django strategy's `request_port` method to respect the `USE_X_FORWARDED_HOST` setting, and the `USE_X_FORWARDED_PORT` setting in django >= 1.9.\r\n\r\nIt should achieve the same thing as https://github.com/omab/python-social-auth/pull/741 but without introducing new settings.", "created_at": "2016-02-11T11:35:56Z"}, {"body": "I'm using flask to create an app that will need to authentication / authorize users with openid connect. My openid provider is within my company (not one of the externally listed ones in the docs). Can I still use this package? How will I do it? I have my client_id, authorization, and token endpoints from my OP. (If possible), how can I use this package to facilitate enabling authentication with my flask application? Thanks.\r\n", "created_at": "2016-02-08T22:47:29Z"}, {"body": "Steam would throw a 400 error when trying to get player information. This was because no key was sent in the URL parameters to steam. Changed API_KEY to SOCIAL_AUTH_STEAM_KEY so that the setting() method pulls the correct value from the settings.py file.", "created_at": "2016-02-05T18:48:42Z"}, {"body": "I use django-pipeline and in it's new version it needs a dictionary named PIPLINE in settings.py. python-social-auth seems to pickup this variable as it's own pipeline.  \r\ndjango-pipeline's PIPLINE looks like this:  \r\n```\r\nPIPELINE = {\r\n    'STYLESHEETS': {\r\n        'base': {  \r\n        ...\r\n```\r\nThe error is in social/utils.py line 55, when it tries to split \"STYLESHEETS\":  \r\n```\r\ndef module_member(name):\r\n    mod, member = name.rsplit('.', 1)\r\n    module = import_module(mod)\r\n    return getattr(module, member)\r\n```", "created_at": "2016-02-05T14:57:18Z"}, {"body": "When I try to sign up I am getting this error page:\r\n\r\nWe're unable to complete your request\r\n\r\nMicrosoft account is experiencing technical problems. Please try again later.\r\n\r\nhttps://login.live.com/err.srf?lc=1033#error=invalid_request&error_description=The+provided+value+for+the+input+parameter+%27redirect_uri%27+is+not+valid.+The+expected+value+is+%27https://login.live.com/oauth20_desktop.srf%27+or+a+URL+which+matches+the+redirect+URI+registered+for+this+client+application.&state=HZfLyhK6CS1ZoPNWgJ4PWy6OZ05xFLPL\r\n\r\n![capture du 2016-02-03 12 25 28](https://cloud.githubusercontent.com/assets/4919345/12782186/53fbd026-ca71-11e5-80fe-c9dbcad9f1ad.png)\r\n\r\nCould you please help in this?", "created_at": "2016-02-03T12:27:47Z"}, {"body": "Hi, there.\r\n\r\nAbout a year ago odnoklassniki social network switched out their domain and name to ok.\r\nYou can chech it by url (http://ok.ru/group/57170323832868/topic/62946583920676). \r\n\r\nI've updated documentation and oauth entry points.", "created_at": "2016-02-03T05:09:28Z"}, {"body": " If Yahoo does not returns `email`, instead of it we get `guid` value. It's unusual, in most others backends we get empty string in this case. Is it for some reason, or it can be changed?\r\n\r\nfile `social/backends/yahoo.py`:\r\n\r\n    class YahooOAuth2(BaseOAuth2):\r\n        ...\r\n        def get_user_details(self, response):\r\n            ...\r\n            email = emails[0]['handle'] if emails else response.get('guid', '')", "created_at": "2016-02-02T20:12:19Z"}, {"body": "The documentation for the Github Enterprise backend lacked an explanation on how to set the API URL for the Github Enterprise appliance. This PR fixes that.", "created_at": "2016-02-02T11:40:41Z"}, {"body": "The urls resolves right, to `SOCIAL_AUTH_LOGIN_REDIRECT_URL` or `?next=` attribute if set. \r\n\r\nBut they are always ending with `/#_=_`. I have no idea where this come from.\r\n\r\nBackendname: facebook\r\npython-social-auth 0.2.14\r\ndjango 1.9.1\r\npython 3.4.3", "created_at": "2016-02-01T17:44:02Z"}, {"body": "I was doing initial migration with `python manage.py migrate` for my Django app with `django-social-auth==0.7.28` installed. It gives me this error:\r\n\r\n```\r\ndjango.db.utils.OperationalError: (1005, \"Can't create table '<db-name>.#sql-1_b8' (errno: 150)\")\r\n```\r\nI did some investigations and got the faulty query:\r\n```\r\nALTER TABLE `social_auth_usersocialauth` ADD CONSTRAINT `social_auth_usersociala_user_id_193b2d80880502b2_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)\r\n```\r\n**At the time of this query, table `auth_user` is non-existent.** I'll try creating it by hand and see what happens. In the meantime, is this a known issue?\r\n\r\nMy Django version is **`1.8.1`** and:\r\n```\r\n$ mysql --version\r\nmysql  Ver 14.14 Distrib 5.5.47, for linux2.6 (x86_64) using readline 5.1\r\n```\r\n**To reproduce**: Get MySQL 5.5.47. Run the [mysql:5.5 docker] (https://hub.docker.com/_/mysql/) to get exactly what I'm running. Install **django-social-auth==0.7.28**. Make a Django 1.8.1 app. Add `social_auth` to your `INSTALLED_APPS`. Do a `python manage.py migrate`.", "created_at": "2016-02-01T07:59:47Z"}, {"body": "The included Django `auth` app allows for using named URLs in the settings, like so:\r\n\r\n    LOGIN_REDIRECT_URL = 'my_url'\r\n\r\nHowever, trying to do the same in `python-social-auth` produces an error because the named URL isn't resolved when the Django strategy retrieves it from the settings.", "created_at": "2016-01-30T20:45:50Z"}, {"body": "Python Social Auth is undoubtedly one of the best plugin for Social Authentication and I expect a lot of people are using it in production. But I see a major bug here in email Authentication while adding a new email during new account creation.\r\n\r\nThe case can be replicated as follows -\r\n1. Create a new user account using email. An Email confirmation link will be sent to user.\r\n2. Confirm the link from other browser\r\n3. This will give Missing needed parameter email error.\r\n\r\nThis is because there's dependency on the session for the mail validation partial, which is not an expected behavior. User should be able to confirm his email from any browser.\r\n\r\nThis issue was raised here #577. @omab  told that -\r\n\r\n**I see the problem now, and even if I think that this could be solved with a re-write of the email validation pipeline, this affects all the pipeline functions that use the partial mechanism, so, I'm already working on a restructure of the pipeline serialization functionality that will improve this behavior. Basically the pipeline data will be dumped to a DB table and a hash code will be used to identify the processes which can be stopped and continue later, removing the dependency of the session.**\r\n\r\nBut I see no updates on this after that, even after the new version is out now. @omab can you please update regarding this.\r\n\r\n1. When are you going to fix this issue ?\r\n2. If you are not working on this, what should be the workaround to fix this issue.\r\n\r\n I don't want to play with this pipeline mechanism as any change can lead to serious issues in authentication. Currently I am using this [monkey patch](https://gist.github.com/SaneMethod/b30156a3705ce9e944cd#file-django-python-social-auth-monkey-py) which is not perfect.\r\n\r\n@omab it seems like a serious issue as many users will not be able to sign up leading to a weird user experience. Everyone who is using psa in production will be facing this issue. **Please give urgent attention on this.**", "created_at": "2016-01-28T13:15:25Z"}, {"body": "Added support for optional `include_email` parameter for Twitter backend.\r\nAdded test for checking email address receiving.\r\nUpdated docs.\r\n\r\nCorresponding issue: #825", "created_at": "2016-01-27T15:25:10Z"}, {"body": "", "created_at": "2016-01-26T17:06:55Z"}, {"body": "We're trying to unit test social authentication, this is our approach:\r\n\r\n```python\r\nself.client.get(\r\n    '/complete/facebook/',\r\n    {\r\n        'state': '...',\r\n        'redirect_state': '...',\r\n        'code': '...',\r\n    }\r\n)\r\n\r\n...\r\n```\r\n\r\nHowever, we're getting this error.\r\n\r\n```bash\r\nline 88, in validate_state\r\n    raise AuthStateMissing(self, 'state')\r\nAuthStateMissing: Session value state missing.\r\n```\r\n\r\nIs there a way to unit test a strategy calling the complete URL directly?\r\n\r\nThanks!", "created_at": "2016-01-25T17:33:33Z"}, {"body": "When trying to sign in via Google and a mobile app (used this example http://psa.matiasaguirre.net/docs/use_cases.html#signup-by-oauth-access-token) I'm getting a 403 Forbidden error with the following response:\r\n\r\n```\r\n{\r\n  \"error\": {\r\n    \"errors\": [\r\n      {\r\n        \"domain\": \"usageLimits\",\r\n        \"reason\": \"dailyLimitExceededUnreg\",\r\n        \"message\": \"Daily Limit for Unauthenticated Use Exceeded. Continued use requires signup.\",\r\n        \"extendedHelp\": \"https://code.google.com/apis/console\"\r\n      }\r\n    ],\r\n    \"code\": 403,\r\n    \"message\": \"Daily Limit for Unauthenticated Use Exceeded. Continued use requires signup.\"\r\n  }\r\n}\r\n```\r\n\r\nfrom googling around I saw that the common issue is having Google+ API disabled, but for us it was already enabled due to previous use of the API in another internal project.\r\n\r\nWhat I tried:\r\n1. Disabling and re-Enabling the API \r\n2. Using both OAUTH2 and PLUS strategies\r\n3. Creating new Client ID and Client Secret\r\n\r\nOur settings:\r\n```\r\nSOCIAL_AUTH_GOOGLE_PLUS_KEY = X\r\nSOCIAL_AUTH_GOOGLE_PLUS_SECRET = Y\r\nSOCIAL_AUTH_GOOGLE_PLUS_SCOPE = [\r\n    'https://www.googleapis.com/auth/plus.login',\r\n    'https://www.googleapis.com/auth/plus.me'\r\n]\r\nSOCIAL_AUTH_GOOGLE_OAUTH2_KEY = X\r\nSOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = Y\r\nSOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [\r\n    'https://www.googleapis.com/auth/plus.login',\r\n    'https://www.googleapis.com/auth/plus.me'\r\n]\r\n\r\nAUTHENTICATION_BACKENDS = (\r\n    'social.backends.google.GooglePlusAuth',\r\n    'social.backends.facebook.FacebookOAuth2',\r\n    'social.backends.google.GoogleOAuth2',\r\n\r\n    'django.contrib.auth.backends.ModelBackend',\r\n)\r\n```\r\n\r\nFacebook works perfectly\r\n\r\nWould love any assistance!", "created_at": "2016-01-25T15:04:46Z"}, {"body": "Greetings!\r\n\r\nI perform a little googling and find out that Twitter recently adds optional returning of users Email address.\r\nLook at the end of this long [thread](https://twittercommunity.com/t/how-to-get-email-from-twitter-user-using-oauthtokens/558/193) and [Twitter docs](https://dev.twitter.com/rest/reference/get/account/verify_credentials).\r\n\r\nIn short, if your app is approved by Twitter and you provide links to ToS and Privacy Policy for your site, you can (as they claim) get a user email address by providing `include_email` in request to endpoint `https://api.twitter.com/1.1/account/verify_credentials.json`.\r\n\r\nDoes any one succeed at this? Any thoughts?\r\n", "created_at": "2016-01-22T19:14:53Z"}, {"body": "After spending too much time debugging why my extra entry in `SOCIAL_AUTH_USER_FIELDS` was `None`, if figured out that the issue lies in `social.pipeline.create_user`. If the extra field in `SOCIAL_AUTH_USER_FIELDS` is a boolean evaluated to `False`, and it\u00b4s provided in kwargs, it will return `None` instead of the correct `False` value.\r\n\r\n```Python\r\n>>> kwargs = {'field': False}\r\n>>> details = {}\r\n>>> results = kwargs.get('field') or details.get('field')\r\n>>> print(results)\r\nNone\r\n>>> results = kwargs.get('field', details.get('field'))\r\n>>> print(results)\r\nFalse\r\n```", "created_at": "2016-01-19T14:39:51Z"}, {"body": "I was on the django irc today and assisted a user with getting his script working again after he installed django-haystack. With django-haystack it also installs urllib3 which then meets the Python3 requirements in the try import statement. This though does not install urllib3[secure] which causes python-social-auth to throw ssl errors. I suggest a different kind of check or an addition check before the import of urllib3.", "created_at": "2016-01-19T05:45:18Z"}, {"body": "Private API get_template_from_string(template_code) was removed in Django 1.8 because it had no way to choose an engine to compile the template.", "created_at": "2016-01-15T15:33:58Z"}, {"body": "The SAML login handler fails with a KeyError if the idp query param is not given, which leads to a 500 response. Raise AuthMissingParameter instead.", "created_at": "2016-01-15T04:43:32Z"}, {"body": "", "created_at": "2016-01-15T00:57:46Z"}, {"body": "It looks like the second migration has the same issue as #422 .", "created_at": "2016-01-14T05:47:34Z"}, {"body": "When the user approves FB login, they may grant all, some, or none of the scopes requested by the application. By passing `\"return_scopes\": true` as a parameter to the login URL, the data returned includes a list of scopes that were actually granted by the user.\r\n\r\nI am happy to do the work to make this work, but I'm not entirely sure where this should go. It appears to be a parameter on the call to the `AUTHORIZATION_URL`, though when I add it to `SOCIAL_AUTH_FACEBOOK_EXTRA_ARGUMENTS` in settings it is not being picked up.\r\n\r\nAn alternate way to retrieve this info is calling the Facebook SDK (using facebook-sdk, for instance), but it seems this belongs in the authentication pipeline as that's where I am populating the database with the user's preferences and settings.", "created_at": "2016-01-12T20:48:33Z"}, {"body": "Djangos request.GET is fine, but request.POST is not necessary populated with the data sent in a POST request. See https://github.com/omab/python-social-auth/blob/aa66b83d4848c09defa57384529eca83597a3692/social/strategies/django_strategy.py#L40 for the problem and http://www.django-rest-framework.org/api-guide/requests/#data for the django docs.\r\nThe idea is that POST is only populated if it's form-data.\r\n\r\nWould it be an idea to change out the logic in the strategy to use .data if the request.method != 'GET'?\r\n\r\nI'm submitting this as an issue now because I'm unsure if this is something you guys want or not. Is there any reason not to use .data? Have this only been biting me?", "created_at": "2016-01-12T19:15:55Z"}, {"body": "`BaseOAuth2.do_auth` wasn't storing the access token to be passed to the pipeline. As a result, backends inheriting from `BaseOAuth2` wasn't storing the token because `OAuthAuth.extra_data` never had the token information passed to it.\r\n\r\nReference: \r\n`BaseOAuth1.do_auth`\r\nhttps://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py#L185-L193\r\n\r\n`OAuthAuth.extra_data`\r\nhttps://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py#L39-L46\r\n\r\nRelated:\r\nhttps://github.com/omab/python-social-auth/issues/416", "created_at": "2016-01-07T23:54:56Z"}, {"body": "* amazon backend: change authorization URL from http to https\r\n* twilio backend: fix backend name in comment", "created_at": "2016-01-04T13:49:58Z"}, {"body": "In /social/backends/azuread.py, the function auth_extra_arguments only adds an (optional) resource. \r\n\r\nOther possible extra_arguments (like domain_hint for adfs scenarios) are ignored.\r\n", "created_at": "2016-01-02T20:34:30Z"}, {"body": "Removed metaclass syntax to break the dependency on django.db.models.SubfieldBase, which has been deprecated in Django 1.9 and will be removed with Django 1.10.\r\n\r\nFixes #804 and #754. Extends fix provided by #806.", "created_at": "2015-12-30T21:47:41Z"}, {"body": "C:\\w>manage.py makemigrations\r\nC:\\Python27\\lib\\site-packages\\django\\db\\models\\fields\\subclassing.py:22: Removed\r\nInDjango110Warning: SubfieldBase has been deprecated. Use Field.from_db_value in\r\nstead.\r\n  RemovedInDjango110Warning)\r\n\r\nNo changes detected\r\n\r\n\r\npip freeze environment is Python 2.7.9 and django 1.9\r\n\r\n", "created_at": "2015-12-29T06:53:13Z"}, {"body": "In Django 1.10. not working, throw an error\r\n```\r\nclass JSONField(six.with_metaclass(models.SubfieldBase, models.TextField)):\r\nAttributeError: module 'django.db.models' has no attribute 'SubfieldBase'\r\n```\r\n[Source](https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/fields.py#L14)", "created_at": "2015-12-28T09:20:20Z"}, {"body": "", "created_at": "2015-12-26T21:05:31Z"}, {"body": "Heyo! First of all: thanks for all of the hard work.\r\n\r\nI'm trying to setup github oauth in my Django app, but I am getting this strange error... \r\n\r\n```\r\nRuntimeError: Model class social.apps.django_app.default.models.UserSocialAuth doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. \r\n```\r\n\r\nI have the right stuff in installed apps (I believe) `'social.apps.django_app.default'`\r\n\r\nAnd I know I just recently used `python-social-auth` with 0 problems in another project, so I'm not sure what I may be doing wrong. I'm pretty confused because I see issues with people getting the same error (but as a warning?) and it seems to have been fixed?\r\n\r\nHere's the complete error:\r\n```\r\nNot Found: /login/github\r\n/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/django/db/models/fields/subclassing.py:22: RemovedInDjango110Warning: SubfieldBase has been deprecated. Use Field.from_db_value instead.\r\n  RemovedInDjango110Warning)\r\n\r\nInternal Server Error: /login/github\r\nTraceback (most recent call last):\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/django/core/handlers/base.py\", line 235, in get_response\r\n    response = middleware_method(request, response)\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/django/middleware/common.py\", line 113, in process_response\r\n    if self.should_redirect_with_slash(request):\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/django/middleware/common.py\", line 78, in should_redirect_with_slash\r\n    and urlresolvers.is_valid_path('%s/' % request.path_info, urlconf)\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/django/core/urlresolvers.py\", line 668, in is_valid_path\r\n    resolve(path, urlconf)\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/django/core/urlresolvers.py\", line 534, in resolve\r\n    return get_resolver(urlconf).resolve(path)\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/django/core/urlresolvers.py\", line 376, in resolve\r\n    sub_match = pattern.resolve(new_path)\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/django/core/urlresolvers.py\", line 376, in resolve\r\n    sub_match = pattern.resolve(new_path)\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/django/core/urlresolvers.py\", line 248, in resolve\r\n    return ResolverMatch(self.callback, args, kwargs, self.name)\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/django/core/urlresolvers.py\", line 255, in callback\r\n    self._callback = get_callable(self._callback_str)\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/django/core/urlresolvers.py\", line 115, in get_callable\r\n    mod = import_module(mod_name)\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 662, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/social/apps/django_app/views.py\", line 10, in <module>\r\n    from social.apps.django_app.utils import psa\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/social/apps/django_app/utils.py\", line 21, in <module>\r\n    Storage = module_member(STORAGE)\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/social/utils.py\", line 56, in module_member\r\n    module = import_module(mod)\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/social/utils.py\", line 50, in import_module\r\n    __import__(name)\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/social/apps/django_app/default/models.py\", line 67, in <module>\r\n    class UserSocialAuth(AbstractUserSocialAuth):\r\n  File \"/Users/eric/.virtualenvs/3sc-api/lib/python3.5/site-packages/django/db/models/base.py\", line 103, in __new__\r\n    \"application was loaded. \" % (module, name))\r\nRuntimeError: Model class social.apps.django_app.default.models.UserSocialAuth doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. \r\n[25/Dec/2015 03:18:06] \"GET /login/github HTTP/1.1\" 500 152175\r\n\r\n```", "created_at": "2015-12-25T03:25:53Z"}, {"body": "", "created_at": "2015-12-24T21:03:11Z"}, {"body": "Microsoft has changed the OAuth2 endpoints so this PR updates those. Microsoft has also added a couple of params to the refresh token request, so we have also added them.", "created_at": "2015-12-18T19:08:08Z"}, {"body": "In django_app/urls.py:\r\n* Use a list instead of `patterns`\r\n* Use view callables instead of strings\r\n\r\nFixes #804, #754", "created_at": "2015-12-16T20:08:05Z"}, {"body": "I am using Yahoo for OAuth2. When I use it, I get the error:\r\n\r\nssl.c:504: error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed\r\n\r\nHowever, if I set the option:\r\n\r\nSOCIAL_AUTH_YAHOO_VERIFY_SSL = False\r\n\r\nit works ! It seems to be a cert issue at the Yahoo end, but was wondering if anyone else has run into it.\r\n\r\n", "created_at": "2015-12-15T00:25:38Z"}, {"body": "I get the following deprecation warnings when starting the django development server with Python Social Auth app installed:\r\n\r\n/usr/lib/tethys/local/lib/python2.7/site-packages/social/apps/django_app/urls.py:19: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got auth). Pass the callable instead.\r\n  name='begin'),\r\n\r\n/usr/lib/tethys/local/lib/python2.7/site-packages/social/apps/django_app/urls.py:21: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got complete). Pass the callable instead.\r\n  name='complete'),\r\n\r\n/usr/lib/tethys/local/lib/python2.7/site-packages/social/apps/django_app/urls.py:24: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got disconnect). Pass the callable instead.\r\n  name='disconnect'),\r\n\r\n/usr/lib/tethys/local/lib/python2.7/site-packages/social/apps/django_app/urls.py:26: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got disconnect). Pass the callable instead.\r\n  .format(extra), 'disconnect', name='disconnect_individual'),\r\n\r\n/usr/lib/tethys/local/lib/python2.7/site-packages/social/apps/django_app/urls.py:26: RemovedInDjango110Warning: django.conf.urls.patterns() is deprecated and will be removed in Django 1.10. Update your urlpatterns to be a list of django.conf.urls.url() instances instead.\r\n  .format(extra), 'disconnect', name='disconnect_individual'),\r\n", "created_at": "2015-12-14T23:14:08Z"}, {"body": "", "created_at": "2015-12-14T04:46:54Z"}, {"body": "Redirects me to the homepage, even after registering, no way to find forum.", "created_at": "2015-12-14T04:46:14Z"}, {"body": "This is the output info\r\n``` Python\r\npython manage.py makemigrations\r\n/usr/local/Cellar/python3/3.4.3_2/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/django/db/models/fields/subclassing.py:22: RemovedInDjango110Warning: SubfieldBase has been deprecated. Use Field.from_db_value instead.\r\n  RemovedInDjango110Warning)\r\n```", "created_at": "2015-12-10T21:35:23Z"}, {"body": "", "created_at": "2015-12-09T02:05:18Z"}, {"body": "Currently the Battlenet oauth backend only returns battletags and no longer returns the Account ID which is needed to hit other endpoints. This change makes the function return more than just the battletag.\r\n\r\nWould love for some other opinions on this, just getting started with Battlenet api stuff today, may be misunderstanding something.\r\n\r\nAlso updated docs with what it took to get the backend working for me.", "created_at": "2015-12-08T13:08:41Z"}, {"body": "Updating v2.3 to current v2.5 version of facebook api", "created_at": "2015-12-07T22:31:09Z"}, {"body": "On last week instagram has changed the authorization routes from 'https://instagram.com/oauth/authorize' to 'https://api.instagram.com/oauth/authorize', and this have break all systems with old route. This change isn't well documented by instagram, but on documentation there is examples with new urls.\r\nhttps://www.instagram.com/developer/authentication/", "created_at": "2015-12-05T14:40:07Z"}, {"body": "Backend is currently calling:\r\nhttps://instagram.com/oauth/access_token\r\nPost Nov 17 changes on the instagram side this throws a HTTP 405 error.\r\n\r\nCorrect URL is\r\nhttps://api.instagram.com/oauth/access_token\r\n\r\nFixed in:\r\nhttps://github.com/omab/python-social-auth/pull/795", "created_at": "2015-12-04T19:16:00Z"}, {"body": "https://instagram.com will result in a 405 error after last update of instagram api (nov 17)", "created_at": "2015-12-04T19:15:43Z"}, {"body": "My project was using django-social-auth and we decided to upgrade to use this newer package. The problem is the migrations didn't seem prepared for this:\r\n\r\n- If I run `manage.py migrate`, I get a \"Table social_auth_association already exists\" error.\r\n- If I fake the initial migration, subsequent ones will fail because the table for the Code model (which didn't exist in dsa and is created in that initial migration) is missing.\r\n- If I fake all the migrations it doesn't fail, but the social_auth_code is never created.\r\n\r\nMy solution was to edit the migrations so the social_auth_code table is not created in the initial migration but in the second. Then, the first migration can be faked and the rest will be applied without issues.", "created_at": "2015-12-01T22:06:29Z"}, {"body": "For the django strategy at least, the AUTH_EXTRA_ARGUMENTS settings still need to be prefixed with SOCIAL_AUTH_ to be recognized.", "created_at": "2015-12-01T03:51:28Z"}, {"body": "Hi guys,\r\n\r\nI get this exception for about 1-3% of daily users. I am not sure what the problem is. \r\n\r\n**Setup:**\r\n\r\ndjango 1.8\r\ngoogle-oauth\r\n\r\n\r\n**Things I tired so far:**\r\n\r\n- Originally I thought it was caused by sessions missing in the database. I deleted all the session to see if I can get a 100% repro. But i could not get it to repro for me. \r\n- I traced creation of state in the session table. I can see that the state variable is set before google auth redirection and then it is read back again. It works on my machine consistently. So I can not repro the exception.\r\n- I have read all the related bug on AuthStateMissing but none of the solutions worked for me. \r\n\r\n\r\nIt seems that the problem is persistent. I can see the use attempting to login several times and gets this error and then gives up. Few hours later another user attempts several times and gets several of these exceptions. I am not 100% sure that after several errors the user gets though or the user gives up. I bet is that the user gives up. \r\n\r\n\r\n**Here is is the stack trace:**\r\n\r\nTraceback (most recent call last):\r\nFile \"/usr/local/lib/python2.7/dist-packages/newrelic-2.58.1.44/newrelic/api/web_transaction.py\", line 717, in __iter__\r\nFile \"/usr/local/lib/python2.7/dist-packages/newrelic-2.58.1.44/newrelic/api/web_transaction.py\", line 1093, in __call__\r\nFile \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/wsgi.py\", line 189, in __call__\r\nFile \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 132, in get_response\r\nFile \"/usr/local/lib/python2.7/dist-packages/newrelic-2.58.1.44/newrelic/hooks/framework_django.py\", line 499, in wrapper\r\nFile \"/usr/local/lib/python2.7/dist-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\r\nFile \"/usr/local/lib/python2.7/dist-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\nFile \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/utils.py\", line 51, in wrapper\r\nFile \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/views.py\", line 28, in complete\r\nFile \"/usr/local/lib/python2.7/dist-packages/social/actions.py\", line 43, in do_complete\r\nFile \"/usr/local/lib/python2.7/dist-packages/social/backends/base.py\", line 41, in complete\r\nFile \"/usr/local/lib/python2.7/dist-packages/social/utils.py\", line 229, in wrapper\r\nFile \"/usr/local/lib/python2.7/dist-packages/social/backends/oauth.py\", line 375, in auth_complete\r\nFile \"/usr/local/lib/python2.7/dist-packages/social/backends/oauth.py\", line 88, in validate_state\r\n\r\n\r\n\r\n", "created_at": "2015-11-30T11:16:54Z"}, {"body": "https://developers.google.com/identity/sign-in/android/backend-auth\r\n\r\nI get the 403 forbidden error, with a token I am generating on my frontend app. The python-social-auth backend was working fine initially and now doesn't work with this new token so I am guessing this library doesn't support the new v3 endpoints?\r\n\r\nI may be completely off. Any more information on this?", "created_at": "2015-11-18T06:37:02Z"}, {"body": "Hi,\r\n\r\nThis is a question rather than issue.\r\n\r\nI would like to access Friend's email address via Facebook. Assuming that, my application is still in beta I would like to find out:\r\n\r\na. Whether, if someone approves access to (email, user_profile and user_friends) by accessing application - does it cover user's email scope?\r\n\r\nb. Does python-social-auth allow retrieval of Friend's email address? If yes, what scope needs to be used?\r\n\r\nc. If above requires extended permission, does it require application review process?\r\n\r\nWith best,\r\nRajan", "created_at": "2015-11-17T23:17:50Z"}, {"body": "naver.com is the largest and most popular search engine in Republic of Korea.\r\n\r\n- Backend NaverOAuth2 added\r\n- Docs for NaverOAuth2 added\r\n- Tests for NaverOAuth2 backend added", "created_at": "2015-11-16T14:58:21Z"}, {"body": "", "created_at": "2015-11-13T16:11:30Z"}, {"body": "Updating API version to latest (2.5) fixes extra parameter (emails,location,birthday) errors.", "created_at": "2015-11-13T13:05:50Z"}, {"body": "weixin need scope for auth", "created_at": "2015-11-13T06:12:11Z"}, {"body": "I tried to authenticate a user with twitter but I got UnicodeDecodeError: \r\n'charmap' codec can't encode character '\\u2026' in position XX: character maps to <undefined>\r\n\r\nI discovered this happens when the  response object contains some weird character that pprint() is unable to decode. In this case \\u2026 (horizontal ellipsis).\r\n\r\nIt would be better to insert a try-except for the pprint statements to avoid blowing up authentication due to a problem with printing data to console (in debug mode).\r\n```python\r\ntry:\r\n  pprint(reponse)\r\nexcept:\r\n  pass\r\n```", "created_at": "2015-11-12T12:31:43Z"}, {"body": "", "created_at": "2015-11-12T10:51:28Z"}, {"body": "This fix allows the SAML Backend to support Python 2.6", "created_at": "2015-11-11T21:00:54Z"}, {"body": "In #440, we learn the reddit authorization string that composes key and\r\nsecret into a base-64 string leaves it as a bytestring, and then tries\r\nin python3 tries to insert it into a unicode literal.  That adds its\r\nrepr format \"b'foo'\" in the auth, which is wrong.\r\n\r\nInstead encode the base64 string back to unicode. The b64 format is\r\nguaranteed to be 7-bit safe, so even lame default encodings should\r\nhandle it fine.", "created_at": "2015-11-10T21:24:52Z"}, {"body": "I'd like to add additional credentials to for my users in my app, without creating/changing the existing django user....\r\n\r\nThe work flow would be like this:  \r\n1.) Use PSA to establish user (new, or current login),  creates django user, logs into app.\r\n2.) Use PSA for existing logged in user, to obtain credentials in pipeline, BUT keep current user logged in, and don't change anything in django for that user.\r\n\r\nIs there an easy way to do this without changing the pipeline?  I've got my pipeline setup, and I've tried\r\nto save off the user object at the start of the authentication process, and then reassign it back... I seem to be able to keep the same django user.id, but the e-mail address changes on me.\r\n\r\nAm I making sense on this?", "created_at": "2015-11-10T18:03:25Z"}, {"body": "I'm getting this whenever the user hits /complete/linkedin-oauth2/ twice. I'm guessing - not sure - that what happens is this:\r\n\r\n* The user clicks the 'accept' button twice by mistake (or maybe because of a bug with the provider's front end).\r\n* The first 'complete' pops the session state and tries to continue with the pipeline. It fails because the provider revoked the token, because of the second request.\r\n* The second 'complete' doesn't find the state so fails.\r\n\r\nIf this is indeed the issue, maybe we can somehow avoid popping the session state; rather leaving it as is for the next request.\r\n\r\n(I posted this as a comment on https://github.com/omab/python-social-auth/issues/220 but the original issue there was different, so I figured it's better as a separate issue).", "created_at": "2015-11-07T19:09:02Z"}, {"body": "I am getting this error, when I try social auth.\r\n\r\nNoReverseMatch: Reverse for 'complete' with arguments '('twitter_custom',)' and keyword arguments '{}' not found. 1 pattern(s) tried: [u'(?P<domain_id>[^/]+)/api/social/complete/(?P<backend>[^/]+)/$']\r\n\r\nEssentially my url structure is like:\r\n\r\nbase url\r\n-----------\r\nurl(r'^(?P&lt;domain_id>[^/]+)/api, include('api.urls')),\r\n\r\napi.urls\r\n----------\r\nurl(r'^social/', include('social.apps.django_app.urls', namespace='social')),\r\n\r\n\r\nThe cause is line 41 on social/apps/django_app/utils.py which has:\r\n    uri = reverse(redirect_uri, args=(backend,))\r\n\r\ni.e. it uses only the backend to build the reverse url. However we need the domain_id also which is the first part of the url.\r\n\r\nanyone come across this?", "created_at": "2015-11-06T17:22:45Z"}, {"body": "For example I used Azure even though it isn't listed anywhere in the github repository.\r\n\r\nI also was looking at using a SAML backend OneLogin and even though it's not listed there's tests for it in the code. https://github.com/omab/python-social-auth/search?utf8=\u2713&q=onelogin Which I assume must be passing.\r\n\r\nAre these things officially supported and undocumented, or are they not supported at all? Apologies if I'm duplicating, but the only issue I found for this was open but the code supporting SAML seems to be merged 6 months ago.https://github.com/omab/python-social-auth/issues/388 which then links to this > https://github.com/omab/python-social-auth/pull/616.\r\n\r\nI'm assuming it's possible but unofficially supported I just want to clarify to be sure. (Also any examples of anything I might need to do to get this to work?)", "created_at": "2015-11-05T11:41:59Z"}, {"body": "I set SOCIAL_AUTH_UID_LENGTH = 191 in my settings.py file for my Django project, but it looks like get the following error still: _mysql_exceptions.OperationalError: (1071, 'Specified key was too long; max key length is 767 bytes')\r\n\r\nWhen I search for SOCIAL_AUTH_UID_LENGTH it does not look like, the code is referencing this, but just wanted to double check.\r\n\r\nThank you and appreciate the help!\r\n\r\nHere's my setup:\r\nUbuntu 14.04.3/Python 3.4.3\r\nmysql 5.5.46\r\nDjango==1.8.6\r\nmysqlclient==1.3.6\r\npython-social-auth==0.2.13\r\n\r\n", "created_at": "2015-11-05T00:06:55Z"}, {"body": "These changes will remove warnings like below\r\n\r\n```\r\nRemovedInDjango19Warning: Model class social.apps.django_app.default.models.Code \r\ndoesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS\r\nor else was imported before its application was loaded. This will no longer be supported\r\nin Django 1.9.\r\n```", "created_at": "2015-11-04T06:43:29Z"}, {"body": "I have the following custom social authentication when a new user is created in the pipeline:\r\n\r\nfrom social.backends.facebook import FacebookOAuth2\r\nfrom social.backends.twitter import TwitterOAuth\r\nfrom social.backends.linkedin import LinkedinOAuth\r\nfrom social.backends.google import GoogleOAuth2\r\n\r\n\r\nUSER_FIELDS = ['username', 'email']\r\n\r\n\r\ndef create_user(strategy, details, response, uid, user=None, *args, **kwargs):\r\n    if user:\r\n        return {'is_new': False}\r\n\r\n    fields = dict(\r\n        (name, kwargs.get(name) or details.get(name))\r\n        for name in strategy.setting('USER_FIELDS', USER_FIELDS)\r\n    )\r\n    if not fields:\r\n        return\r\n\r\n    if not fields.get('email'):\r\n        messages.info(\r\n            kwargs['request'],\r\n            'Please register o enter with another social network',\r\n        )\r\n        return\r\n\r\n    return {\r\n        'is_new': True,\r\n        'user': strategy.create_user(**fields)\r\n    }\r\n\r\n\r\n\r\nI have the supplied the settings:\r\nAUTH_USER_MODEL = 'userprofile.User'\r\nSOCIAL_AUTH_USER_MODEL = 'userprofile.User'\r\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/home/'\r\nSOCIAL_AUTH_LOGIN_URL = '/accounts/login/'\r\n\r\nSOCIAL_AUTH_FACEBOOK_KEY = ''\r\nSOCIAL_AUTH_FACEBOOK_SECRET = ''\r\n\r\n\r\n\r\nIn my HTML calling the url as \" <a href=\"{% url 'social:begin' 'facebook' %}?next={% url 'home' %}\">\r\n\r\nWhat should be noted is that I for any users already registered this works just fine, the error appears to only new users.\r\n", "created_at": "2015-10-26T13:52:57Z"}, {"body": "Add pinterest oauth2 backend.\r\n\r\nDetails: https://developers.pinterest.com/docs/api/authentication/\r\n\r\n./run_tox.sh\r\n  ...\r\n  py26: commands succeeded\r\n  py27: commands succeeded\r\n  py33: commands succeeded\r\n  py34: commands succeeded\r\n  pypy: commands succeeded\r\n  doc: commands succeeded\r\n  congratulations :)\r\n", "created_at": "2015-10-26T13:22:56Z"}, {"body": "The changes are quite straightforward, and some similar to the #758.\r\nBut we are testing our infrastructure against the master of branch of Django 1.9 on a daily basis, so this contains some small additions.\r\n\r\nMoreover, we would very much like to use the native JSON field, but still we don't have the perfect idea on how to do it. I thought of a setting, but you might have @omab some suggestions.\r\n\r\nCheers", "created_at": "2015-10-26T00:05:48Z"}, {"body": "", "created_at": "2015-10-24T11:36:25Z"}, {"body": "I've got **AttributeError** at `/complete/facebook/` just before redirecting newly registered user to `LOGIN_REDIRECT_URL`: Exception Value: 'str' object has no attribute 'update'\r\n\r\n- Request Method: GET\r\n- Request URL: http://appdomain/complete/facebook/?redirect_state=~&code=~&state=~\r\n- Django Version: 1.9\r\n- Python Version: 2.7.6\r\n- Installed Applications:\r\n  - 'django.contrib.admin',\r\n  - 'django.contrib.auth',\r\n  - 'django.contrib.contenttypes',\r\n  - 'django.contrib.sessions',\r\n  - 'django.contrib.messages',\r\n  - 'django.contrib.staticfiles',\r\n  - 'django.contrib.gis',\r\n  - 'social.apps.django_app.default',\r\n  - 'myapp'\r\n- Installed Middleware:\r\n  - 'django.contrib.sessions.middleware.SessionMiddleware',\r\n  - 'django.middleware.common.CommonMiddleware',\r\n  - 'django.middleware.csrf.CsrfViewMiddleware',\r\n  - 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n  - 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\r\n  - 'django.contrib.messages.middleware.MessageMiddleware',\r\n  - 'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n  - 'django.middleware.security.SecurityMiddleware']\r\n\r\nTraceback:\r\n\r\nFile \".../social/pipeline/social_auth.py\" in load_extra_data\r\n`  92.         social.set_extra_data(extra_data)`\r\n\r\nFile \".../social/storage/django_orm.py\" in set_extra_data\r\n`  16.         if super(DjangoUserMixin, self).set_extra_data(extra_data)`\r\n\r\nFile \".../social/storage/base.py\" in set_extra_data\r\n`  85.                 self.extra_data.update(extra_data)`\r\n\r\nUser and related social auth was created correctly, except `extra_data` field of `UserSocialAuth` model (it was empty JSON string). Every next attempt was competed without any errors, updating `extra_data` field with facebook related data in JSON format.\r\n\r\nError appears again if User and related UserSocialAuth models are removed. Seems like `set_extra_data` function assumes `self.extra_data` to be **dict**, but **str** given for new users.\r\n\r\nMy app is default django project appended using PSA documentation guides.", "created_at": "2015-10-22T18:49:50Z"}, {"body": "Since Django 1.6, a `transaction.atomic` decorator has been available. There's a pattern that's supported in python_social_auth that performs a Django ORM operation and then handles a possible IntegrityError raised by the operation - see here:\r\n\r\nhttps://github.com/omab/python-social-auth/blob/master/social/pipeline/social_auth.py#L40\r\n\r\nThis pattern is even documented in the Django docs:\r\n\r\nhttps://docs.djangoproject.com/en/1.6/topics/db/transactions/#django.db.transaction.atomic\r\n\r\nHowever, if an IntegrityError is raised without being in a `transaction.atomic` block (via decorator or context manager), the transaction itself is left in a \"broken\" state - and any subsequent transaction operations will fail with the following exception:\r\n\r\n`An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.`\r\n\r\nThis condition is not detected in the current unittest suite because the IntegrityError scenario is tested by using a simple raise with no actual DB transaction:\r\n\r\nhttps://github.com/omab/python-social-auth/blob/aa66b83d4848c09defa57384529eca83597a3692/social/tests/test_pipeline.py#L21\r\n\r\nThis PR attempts to fix the broken transaction scenario. I've tested it with our https://github.com/edx/edx-platform test suite and it fixes the broken transaction. As a workaround for our Django 1.8 upgrade, I've monkey-patched edx-platform to fix the issue - that commit can be seen here:\r\n\r\nhttps://github.com/edx/edx-platform/commit/699ae371033869653a2ee79013a941f32b30e29c\r\n\r\nThe fix in this PR may not be the preferred one - but it does at least fix the issue. I'm happy to provide more information if needed.\r\n", "created_at": "2015-10-21T22:05:29Z"}, {"body": "Support all kind of data type (like uuid) of User.id on Pyramid", "created_at": "2015-10-21T19:38:50Z"}, {"body": "should be 'login process' instead of 'loging process'", "created_at": "2015-10-20T17:11:27Z"}, {"body": "In docs/backends/implementation.rst you have an example that still uses the `urlopen()` method that has been removed and should be replaced in the example with `get_json()`", "created_at": "2015-10-19T20:29:38Z"}, {"body": "I'm using the GoogleOAuth2 backend and I've got `SOCIAL_AUTH_GOOGLE_OAUTH2_WHITELISTED_DOMAINS` set to only allow accounts from a specific domain [as described in the docs](http://psa.matiasaguirre.net/docs/configuration/settings.html?highlight=redirect#whitelists). \r\n\r\nEverything works as expected, except I get a 500 Internal Server Error when I try to log in with an account outside of the specified domain. I would have expected the response to have been a 403 Forbidden.\r\n\r\nI'm using Django, and can see from the traceback that the 500 error results from an unhandled `AuthForbidden` exception. Would it be possible for the pipeline to catch that exception and redirect to the default 403 view?\r\n\r\nI'd be interested in working on this, but would need a little direction as to how the fix could be framework-agnostic (still work for Flask, Tornado, etc.)", "created_at": "2015-10-19T17:50:13Z"}, {"body": "Is it possible to create a local django user using the soical auth framework. I dont see any examples that illustrate this. I have a rest api that creates users just fine but i would like to consolidate and use social auth for local registration as well. \r\n\r\nThe kinda data would like to pass into social auth to create a user profile \r\n{  \r\n   \"groups\":[34],\r\n   \"first_name\":\"mike\",\r\n   \"email\":\"mike@bizz.com\",\r\n   \"confirm_email\":\"mike@bizz.com\",\r\n   \"password\":\"secret77\",\r\n   \"confirm_password\":\"secret77\",\r\n   \"accept_terms_conditions\":true,\r\n   \"username\":\"mike@bizz.com\"\r\n}\r\n\r\nStill new to the social auth would appreciate if anyone can point me in the right direction. \r\n", "created_at": "2015-10-18T11:59:42Z"}, {"body": "This PR includes mostly grammar fixes, but does include one substantive change the a command in Django docs: running `./manage.py migrate` is all that's required to sync the database.", "created_at": "2015-10-16T15:18:08Z"}, {"body": "sometimes nickname will duplicate with another qq account, this PR can fix it", "created_at": "2015-10-16T07:54:35Z"}, {"body": "I have a problem of python-social-auth failing on Django if [USERNAME_FIELD](https://docs.djangoproject.com/en/1.8/topics/auth/customizing/#django.contrib.auth.models.CustomUser) is set to anything other than `'username'`, i.e. `'email'`. \r\n\r\nI have debugged to understand that the cause of the problem is due to `create_user()` in `django_orm.py` [popping out](https://github.com/omab/python-social-auth/blob/master/social/storage/django_orm.py#L59) `username` kwarg and replacing it with, in my case, `email` kwarg before calling the model manager's [create_user](https://docs.djangoproject.com/en/1.8/ref/contrib/auth/#django.contrib.auth.models.UserManager.create_user) method.\r\n\r\nTo me that is completely unexpectant, as I don't understand why this is done, and why `USERNAME_FiELD` is taken into account on user creation, when it's supposed to be used only by authentication backends. ", "created_at": "2015-10-14T15:00:36Z"}, {"body": "After upgrading from PSA 0.2.6 to 0.2.7, I get the following error message when running the migrations:\r\n\r\n```\r\n  Applying default.0003_alter_email_max_length...Traceback (most recent call last):\r\n  File \"./manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/core/management/__init__.py\", line 385, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/core/management/__init__.py\", line 377, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/core/management/base.py\", line 288, in run_from_argv\r\n    self.execute(*args, **options.__dict__)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/core/management/base.py\", line 338, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/core/management/commands/migrate.py\", line 160, in handle\r\n    executor.migrate(targets, plan, fake=options.get(\"fake\", False))\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 63, in migrate\r\n    self.apply_migration(migration, fake=fake)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 97, in apply_migration\r\n    migration.apply(project_state, schema_editor)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/db/migrations/migration.py\", line 107, in apply\r\n    operation.database_forwards(self.app_label, schema_editor, project_state, new_state)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/db/migrations/operations/fields.py\", line 139, in database_forwards\r\n    schema_editor.alter_field(from_model, from_field, to_field)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/db/backends/schema.py\", line 473, in alter_field\r\n    self._alter_field(model, old_field, new_field, old_type, new_type, old_db_params, new_db_params, strict)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/db/backends/schema.py\", line 626, in _alter_field\r\n    params,\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/db/backends/schema.py\", line 99, in execute\r\n    cursor.execute(sql, params)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/db/backends/utils.py\", line 81, in execute\r\n    return super(CursorDebugWrapper, self).execute(sql, params)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/db/backends/utils.py\", line 65, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/db/utils.py\", line 94, in __exit__\r\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n  File \"/home/danilo/.virtualenvs/radar/lib/python2.7/site-packages/django/db/backends/utils.py\", line 65, in execute\r\n    return self.cursor.execute(sql, params)\r\ndjango.db.utils.ProgrammingError: relation \"social_auth_code\" does not exist\r\n```\r\n\r\nAny ideas?", "created_at": "2015-10-12T11:26:09Z"}, {"body": "", "created_at": "2015-10-12T07:05:15Z"}, {"body": "https://github.com/omab/python-social-auth/blob/v0.2.13/docs/backends/implementation.rst\r\n\r\n>EXTRA_DATA = None\r\n>During the auth process some basic user data is returned by the provider or retrieved by user_data() method \r\n\r\n* This doc indicates `EXTRA_DATA` is related to `user_data()`, and indeed goes on to show two code examples with `backend.user_data()` implemented.\r\n* However [social.pipeline.social_auth.load_extra_data](https://github.com/omab/python-social-auth/blob/v0.2.13/social/pipeline/social_auth.py#L86-L87) actually calls `backend.extra_data()`, not `backend.user_data()`.\r\n\r\nThis suggests the `backend.user_data()` function is never called by PSA with the default `SOCIAL_AUTH_PIPELINE`.\r\n\r\n* Facebook2OAuth2 appears to be one exception, calling `user_data()` as part of [do_auth](https://github.com/omab/python-social-auth/blob/v0.2.13/social/backends/facebook.py#L104) though it seems to be a relatively uncommon flow out of the 100 or so backend providers.\r\n\r\nSo what are `backend.user_data` and `backend.extra_data` supposed to be used for?", "created_at": "2015-10-12T06:38:01Z"}, {"body": "\u2026and say goodbye to RemovedInDjango110Warning warnings on Django 1.9...", "created_at": "2015-10-12T05:20:13Z"}, {"body": "Fix get_user_id method for modern VK API response (5.34 tested) where no uid param - fallback to get_user_id from BaseAuth class which gets uid by self.ID_KEY", "created_at": "2015-10-07T16:13:06Z"}, {"body": "Fix scope separator which is \";\" in OK api\r\nFix logic of get_user_details, it will correctly process email in OK response (because OK may return email in response in case you have permissions for that and scope \"GET_EMAIL\")", "created_at": "2015-10-07T16:10:46Z"}, {"body": "Please, check your social.apps.django_app.default.fields.JSONField and refactor code, need to remove usage of SubfieldBase...\r\nhttps://docs.djangoproject.com/en/1.8/releases/1.8/#subfieldbase \r\n\r\nTested on Django1.9a1, Python 3.5\r\n\r\n", "created_at": "2015-10-03T15:17:29Z"}, {"body": "Please, check your /site-packages/social/apps/django_app/urls.py and replace 'auth', 'complete', 'disconnect', 'disconnect' to view.\r\n\r\nTested on Django1.9a1, Python 3.5", "created_at": "2015-10-03T15:11:20Z"}, {"body": "Some backends (e.g. OpenIdConnect) have an `id_token` next to an `access_token` and `refresh_token`, so they all need to be stored.", "created_at": "2015-10-02T10:16:26Z"}, {"body": "Now user_agent get from `utils.user_agent` when `SEND_USER_AGENT` is `True`. To override it I need override whole `request` method: https://github.com/omab/python-social-auth/blob/master/social/backends/base.py#L215.\r\n\r\nPropose add overridable `user_agent` method instead direct `utils.user_agent` usage.", "created_at": "2015-10-01T08:26:07Z"}, {"body": "Hi. I use django with python-social-auth. How I can add localization for error message when I try to login through oauth?\r\n\r\n", "created_at": "2015-09-30T10:24:06Z"}, {"body": "Put together a full implementation of the NGPVAN [ActionID](http://developers.ngpvan.com/action-id) OpenID backend.\r\n\r\nThey'll offer OpenID Connect soon, but supporting their version of OpenID connect could involve some significant refactoring of the OpenID Connect implementation already in `python-social-auth`, so starting out with the standard OpenID 1.1 implementation would probably be a good first step.\r\n\r\nLet me know what you think.\r\n\r\nThanks!", "created_at": "2015-09-30T07:31:08Z"}, {"body": "Addresses Issue #670. The problem was that unicode strings are default in Python 3, but the base64 and hmac libraries require byte strings. The fix was to explicitly encode and decode the strings as necessary. I tested this patch in Python 2.7.6 and 3.4.0.", "created_at": "2015-09-29T20:18:36Z"}, {"body": "SQLAlchemy can't detect changes to the extra_data property of a user. By wrapping in a MutableDict it can and will save updated data (like bearer tokens in case of OAuth).", "created_at": "2015-09-29T14:45:39Z"}, {"body": "This PR fixes logins with Google OpenID Connect. It merges https://github.com/omab/python-social-auth/pull/687 and https://github.com/omab/python-social-auth/pull/693.", "created_at": "2015-09-29T13:06:03Z"}, {"body": "Would you mind adding a change-log update for the latest version?", "created_at": "2015-09-29T01:29:52Z"}, {"body": "", "created_at": "2015-09-28T17:30:03Z"}, {"body": "", "created_at": "2015-09-28T15:11:49Z"}, {"body": "This adds OAuth 2.0 support to Fitbit.\r\n\r\nCloses #733", "created_at": "2015-09-28T01:05:37Z"}, {"body": "hi, \r\nI just cloned psa in a fresh virtualenv with python 3.4.2 django 1.8.4 and also python_social_auth-0.2.12-py3-none-any.whl  , did a ./manage.py migrate and ./manage runserver . after getting on the front page I pushed the twitterOAuth button, get redirected to the api page and then get back to the loopback page. \r\nhere is the error message I have on the http://127.0.0.1:8000/login/twitter/ .\r\n\r\n<snip>\r\nValueError at /login/twitter/\r\nOnly unicode objects are escapable. Got None of type <class 'NoneType'>.\r\nRequest Method:\tGET\r\nRequest URL:\thttp://127.0.0.1:8000/login/twitter/\r\nDjango Version:\t1.8.4\r\nException Type:\tValueError\r\nException Value:\t\r\nOnly unicode objects are escapable. Got None of type <class 'NoneType'>.\r\nException Location:\t/Users/jcda/django/python-social-auth/lib/python3.4/site-packages/oauthlib/oauth1/rfc5849/utils.py in escape, line 56\r\nPython Executable:\t/Users/jcda/django/python-social-auth/bin/python\r\nPython Version:\t3.4.2\r\nPython Path:\t\r\n['../..',\r\n '/Users/jcda/django/python-social-auth/src/python-social-auth/examples/django_example',\r\n '/Users/jcda/django/python-social-auth/lib/python3.4/site-packages/setuptools-18.3.2-py3.4.egg',\r\n '/Users/jcda/django/python-social-auth/lib/python3.4/site-packages/pip-7.1.2-py3.4.egg',\r\n '/Library/Frameworks/Python.framework/Versions/3.4/lib/python34.zip',\r\n '/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4',\r\n '/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/plat-darwin',\r\n '/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/lib-dynload',\r\n '/Users/jcda/django/python-social-auth/lib/python3.4/site-packages']\r\nServer time:\tThu, 24 Sep 2015 06:27:15 -0300\r\n\r\n</snip>\r\n", "created_at": "2015-09-24T09:30:49Z"}, {"body": "**Description:** This PR adds support for getting host and port from X-Forwarded-* headers, if they are available.\r\n\r\n**Related:** https://github.com/edx-solutions/edx-platform/pull/530, https://github.com/edx/edx-platform/pull/9848\r\n\r\n**Motivation:** If an application using PSA is running behind the reverse proxy on a non-standard port, PSA (python-saml, to be precise) fails checking the SAML assertion response with message \"Authentication failed: SAML login failed: ['invalid_response'] The response was received at http://host:port instead of http://host\".\r\n\r\nCommon way of passing original host and port to proxied app is using X-Forwarded-* headers. Some webservers (i.e. gunicorn) already respect those headers and pass them to django as \"real\" host and port (i.e. `request.get_host()` and `request.META['SERVER_PORT']` actually return X-Forwarded-Host and X-Forwarded-Port` values). Other webservers (i.e. django dev server, nginx(?)) does not do so.\r\n\r\nThis PR adds a web-server-agnostic way to use PSA behind the reverse proxy.\r\n\r\n**Author concerns:**\r\n1. This might not be an optimal way to do it. Possible alternatives:\r\n1.1. It is already working fine; clients should either use web-servers that respect X-Forwarded-* headers, or solve this issue in some other, non-PSA-related way.\r\n1.2. Clients should provide custom strategy with `request-host` and `request_port` overridden (i.e. follow the same approach as in https://github.com/edx/edx-platform/pull/9848)\r\n2. There seems to be serious complications to testing frameworks-specific code - there're no tests for framework-specific strategies so far, and adding a test for django strategy required adding Django, specifying settings and so on - and eventually blowed up entire test suite. Hence tests are not included so far, but I would be glad to add them, if some architectural guidance is given.", "created_at": "2015-09-21T13:28:03Z"}, {"body": "It seems a bug. I don't know what happen.\r\n\r\nYou can see more detail here http://stackoverflow.com/questions/32659923/i-get-a-response-error-when-trying-to-make-a-request-to-my-tastypie-rest-api-usi", "created_at": "2015-09-18T19:54:04Z"}, {"body": "Added `sig` parameter to API call so that this library still works when one enables *Enforce signed requests* setting in Instagram backend.", "created_at": "2015-09-18T09:20:06Z"}, {"body": "I'm using django 1.8.3 and python 3.4.0 \r\nWhile i'm trying to log user via Linkedin i'm getting typeError.\r\n\r\nThis is the error:\r\n\r\nb'oauth_token=78--b7b9a054-0fa8-4cdd-b139-df0385644516&oauth_token_secret=f56841a4-9da5-4707-8f2d-858835ac51ea&oauth_callback_confirmed=true&xoauth_request_auth_url=https%3A%2F%2Fapi.linkedin.com%2Fuas%2Foauth%2Fauthorize&oauth_expires_in=599' is not JSON serializable\r\n\r\nand the traceback:\r\nEnvironment:\r\n\r\n\r\nRequest Method: GET\r\nRequest URL: http://localhost:8070/pysocial/login/linkedin/\r\n\r\nDjango Version: 1.8.3\r\nPython Version: 3.4.0\r\nInstalled Applications:\r\n['django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.messages',\r\n 'django.contrib.admin',\r\n 'django.contrib.admindocs',\r\n 'django.contrib.staticfiles',\r\n 'django.contrib.humanize',\r\n 'athena.instatour',\r\n 'tinymce',\r\n 'athena.multiuploader',\r\n 'social.apps.django_app.default']\r\nInstalled Middleware:\r\n('django.middleware.common.CommonMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'athena.instatour.middleware.HttpCodeMiddleware')\r\n\r\n\r\nTraceback:\r\nFile \"/home/dev/athena-venv/lib/python3.4/site-packages/django/core/handlers/base.py\" in get_response\r\n  223.                 response = middleware_method(request, response)\r\nFile \"/home/dev/athena-venv/lib/python3.4/site-packages/django/contrib/sessions/middleware.py\" in process_response\r\n  50.                         request.session.save()\r\nFile \"/home/dev/athena-venv/lib/python3.4/site-packages/django/contrib/sessions/backends/db.py\" in save\r\n  56.             return self.create()\r\nFile \"/home/dev/athena-venv/lib/python3.4/site-packages/django/contrib/sessions/backends/db.py\" in create\r\n  41.                 self.save(must_create=True)\r\nFile \"/home/dev/athena-venv/lib/python3.4/site-packages/django/contrib/sessions/backends/db.py\" in save\r\n  59.             session_data=self.encode(self._get_session(no_load=must_create)),\r\nFile \"/home/dev/athena-venv/lib/python3.4/site-packages/django/contrib/sessions/backends/base.py\" in encode\r\n  88.         serialized = self.serializer().dumps(session_dict)\r\nFile \"/home/dev/athena-venv/lib/python3.4/site-packages/django/core/signing.py\" in dumps\r\n  90.         return json.dumps(obj, separators=(',', ':')).encode('latin-1')\r\nFile \"/usr/lib/python3.4/json/__init__.py\" in dumps\r\n  237.         **kw).encode(obj)\r\nFile \"/usr/lib/python3.4/json/encoder.py\" in encode\r\n  192.         chunks = self.iterencode(o, _one_shot=True)\r\nFile \"/usr/lib/python3.4/json/encoder.py\" in iterencode\r\n  250.         return _iterencode(o, 0)\r\nFile \"/usr/lib/python3.4/json/encoder.py\" in default\r\n  173.         raise TypeError(repr(o) + \" is not JSON serializable\")\r\n\r\nException Type: TypeError at /pysocial/login/linkedin/\r\nException Value: b'oauth_token=78--b7b9a054-0fa8-4cdd-b139-df0385644516&oauth_token_secret=f56841a4-9da5-4707-8f2d-858835ac51ea&oauth_callback_confirmed=true&xoauth_request_auth_url=https%3A%2F%2Fapi.linkedin.com%2Fuas%2Foauth%2Fauthorize&oauth_expires_in=599' is not JSON serializable\r\n![screenshot from 2015-09-17 15 51 46](https://cloud.githubusercontent.com/assets/1856343/9930881/8f37279c-5d54-11e5-8e5f-a7de4138433d.png)\r\n", "created_at": "2015-09-17T10:25:24Z"}, {"body": "\u200bHi,\r\n\r\nThank you for the great library!\r\n\r\nI'm having trouble following the example Signup by OAuth access_token\u200b at: \r\nhttp://psa.matiasaguirre.net/docs/use_cases.html#signup-by-oauth-access-token\r\n\r\nShould the authentication be complete after register_by_access_token\u200b returns?\r\n\r\nSpecifically, the @psa decorator is called with the social.complete url, is that url ever reached?  Does it need to be?  Should the register_by_access_token return a redirect to social.complete?\r\n\r\nI'm having telling if the authentication API (facebook) is not working, or if I'm not using PSA correctly.\r\n\r\nThank you so much :)\r\n\r\n~Victor", "created_at": "2015-09-17T06:22:53Z"}, {"body": "Sometime vk_api function returns None (when vk.com is down for example) but user_data expects dict and fails.", "created_at": "2015-09-15T08:04:43Z"}, {"body": "When I am trying to migrate on a django 1.8 project, it fails on migration 0002 with the following message.\r\n\r\ndjango.db.utils.ProgrammingError: constraint \"user_id_refs_id_e6cbdf29\" of relation \"social_auth_usersocialauth\" does not exist", "created_at": "2015-09-14T08:31:52Z"}, {"body": "Is anyone working on WeChat support?", "created_at": "2015-09-11T15:00:40Z"}, {"body": "I would like to ask you if you have the intention to support oauth2 authentication for fitbit.\r\n\r\nBest regards,\r\nDavid", "created_at": "2015-09-09T16:39:43Z"}, {"body": "The docs say, in [Username generation](https://python-social-auth.readthedocs.org/en/latest/configuration/settings.html#username-generation), that the regex for CLEAN_USERNAME is `r'[^\\w.@+-_]+'`, whereas the code has (in `social.storage.base`)\r\n\r\n```python\r\nCLEAN_USERNAME_REGEX = re.compile(r'[^\\w.@+_-]+', re.UNICODE)\r\n```\r\n\r\nThe documented regex creates an interesting range, viz. '+-_'. The actual Python text puts '-' at the end, which is good; also, it has the `re.UNICODE` option, which, I think, is worth mentioning in the docs, as it provides guidance when thinking about locales for `\\w`.", "created_at": "2015-09-09T10:40:48Z"}, {"body": "", "created_at": "2015-09-09T09:02:32Z"}, {"body": "Hi!\r\n\r\nI'm trying to run the flask_me_example but i'm getting the following error when I'm accessing Google Oauth2 or Facebook:\r\n\r\nThe example in django is working fine...\r\n\r\nAny clue? \r\n\r\nThe Traceback is here:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1836, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1820, in wsgi_app\r\n    response = self.make_response(self.handle_exception(e))\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1403, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1817, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1477, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1381, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1475, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1461, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/apps/flask_app/utils.py\", line 46, in wrapper\r\n    return func(backend, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/apps/flask_app/routes.py\", line 23, in complete\r\n    *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/actions.py\", line 43, in do_complete\r\n    user = backend.complete(user=user, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/backends/base.py\", line 41, in complete\r\n    return self.auth_complete(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/utils.py\", line 229, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/backends/facebook.py\", line 87, in auth_complete\r\n    return self.do_auth(access_token, response, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/backends/facebook.py\", line 119, in do_auth\r\n    return self.strategy.authenticate(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/strategies/base.py\", line 148, in authenticate\r\n    return backend.authenticate(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/backends/base.py\", line 82, in authenticate\r\n    return self.pipeline(pipeline, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/backends/base.py\", line 85, in pipeline\r\n    out = self.run_pipeline(pipeline, pipeline_index, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/backends/base.py\", line 112, in run_pipeline\r\n    result = func(*args, **out) or {}\r\n  File \"/usr/local/lib/python2.7/site-packages/social/pipeline/social_auth.py\", line 20, in social_user\r\n    social = backend.strategy.storage.user.get_social_auth(provider, uid)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/storage/sqlalchemy_orm.py\", line 134, in get_social_auth\r\n    return cls._query().filter_by(provider=provider,\r\n  File \"/usr/local/lib/python2.7/site-packages/social/storage/sqlalchemy_orm.py\", line 36, in _query\r\n    return cls._session().query(cls)\r\n  File \"/usr/local/lib/python2.7/site-packages/social/apps/flask_app/default/models.py\", line 27, in _session\r\n    return cls.app_session\r\nAttributeError: type object 'UserSocialAuth' has no attribute 'app_session'", "created_at": "2015-09-09T01:14:04Z"}, {"body": "", "created_at": "2015-09-07T09:24:56Z"}, {"body": "justgiving.com is one of the UK's largest charity fundraising platforms. They are quickly expanding their API and will shortly be releasing their OAuth integration that i've already been using with the python-social-auth app.\n", "created_at": "2015-09-03T10:53:51Z"}, {"body": "I am seeking some help getting a custom oAuth client and server configuration working.  I've hit a wall I can't get around.  The error message leads me nowhere. There doesn't seem to be a backend for \"django oAuth toolkit\" in python-social-auth.  Here are the deets... \u200b\n\nI am new to using django-oauth-toolkit and walking through part 1 of the tutorial.\n\nI have a client setup via pythons-social-auth that I'm calling \"myoauth\".I've set this up inside the same project as \ndjango-oauth-toolkit for testing.\n\nHere is the backend:\n\n```\nclass MyOAuthOAuth2(BaseOAuth2):\n    name = 'myoauth'\n    AUTHORIZATION_URL   = 'http://127.0.0.1:8000/o/authorize'\n    ACCESS_TOKEN_URL    = 'http://127.0.0.1:8000/o/token'\n    ACCESS_TOKEN_METHOD = 'POST'\n```\n\nWhen I get to the Authorize the Application step, when I click Authorize., I get an 500 error.\n\nThe Error I get is here:\n\nHTTPError at /social-auth/complete/myoauth/\n500 Server Error: INTERNAL SERVER ERROR\nRequest Method:     GET\nRequest URL:    http://127.0.0.1:8000/social-auth/complete/myoauth/?redirect_state=EWbb3Hg0IoLDcnxyKLUjIZCasMcFKQiV&state=EWbb3Hg0IoLDcnxyKLUjIZCasMcFKQiV&code=S2KIFQP6mYgkZKntcMA4DfZ6qaLsFR\nDjango Version:     1.8.4\nException Type:     HTTPError\nException Value:    \n\n500 Server Error: INTERNAL SERVER ERROR\n\nException Location:     /home/alan/.virtualenvs/eapi/local/lib/python2.7/site-packages/requests/models.py in raise_for_status, line 851\nPython Executable:  /home/alan/.virtualenvs/eapi/bin/python\nPython Version:     2.7.6\n\nMy runserver output is here....\n\n[01/Sep/2015 18:05:11] \"GET /o/authorize/?state=EWbb3Hg0IoLDcnxyKLUjIZCasMcFKQiV&redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fsocial-auth%2Fcomplete%2Fmyoauth%2F%3Fredirect_state%3DEWbb3Hg0IoLDcnxyKLUjIZCasMcFKQiV&response_type=code&client_id=BTzds04ociL9ROHofgXHBQuiJesP5TN4KsXKIS3r HTTP/1.1\" 200 3130\n[01/Sep/2015 18:05:22] \"POST /o/authorize/?state=EWbb3Hg0IoLDcnxyKLUjIZCasMcFKQiV&redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fsocial-auth%2Fcomplete%2Fmyoauth%2F%3Fredirect_state%3DEWbb3Hg0IoLDcnxyKLUjIZCasMcFKQiV&response_type=code&client_id=BTzds04ociL9ROHofgXHBQuiJesP5TN4KsXKIS3r HTTP/1.1\" 302 0\n[01/Sep/2015 18:05:22] \"POST /o/token HTTP/1.1\" 500 79551\n[01/Sep/2015 18:05:22] \"GET /social-auth/complete/myoauth/?redirect_state=EWbb3Hg0IoLDcnxyKLUjIZCasMcFKQiV&state=EWbb3Hg0IoLDcnxyKLUjIZCasMcFKQiV&code=S2KIFQP6mYgkZKntcMA4DfZ6qaLsFR HTTP/1.1\" 500 141042\n\nAre there any examples using python-social-auth with django-oauth-toolkit?  Does anyone know what might be causing this error?\n\nAll the Best,\n\nAlan\n", "created_at": "2015-09-02T17:09:17Z"}, {"body": "Getting error:\n\n> Django Version:    1.8.2\n> Exception Type:    HTTPError\n> Exception Value:   \n> \n> 400 Client Error: Bad Request\n> \n> Exception Location:    /usr/local/lib/python2.7/dist-packages/requests/models.py in raise_for_status, line 851\n\nI'm getting the correct backend (facebook) and then calling:\n\n`backend.do_auth(token, user=user)`\n\nit always throws that error...\n\nusing: python-social-auth==0.2.12\n\nI have a custom User model (although I'm not exactly sure if this ties into the issue), I've looked through the source code but can't pinpoint exact issue.\n\nI'm also using Django Rest Framework with a custom endpoint.\n\nBefore it hits the requests module at \n`return self.get_json(self.USER_DATA_URL, params=params)`\n\nparams is {'access_token': u'XXXXXXXXXXXXXX, 'appsecret_proof': 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'}\n\nAny response appreciated.\n", "created_at": "2015-09-02T01:48:27Z"}, {"body": "To use Shopify's `Redirection URL` settings, redirect state should not be appended.\n", "created_at": "2015-09-01T16:54:03Z"}, {"body": "I am trying to implement login with facebook in my django project but it gives an attribute error 'NoneType' object has no attribute 'rsplit' in django social auth package.\n\n In my settings.py file i have included following related to social auth : \n\nAUTHENTICATION_BACKENDS = (\n    'social.backends.facebook.FacebookOAuth2',\n    'django.contrib.auth.backends.ModelBackend',\n)\nMIDDLEWARE_CLASSES = (\nsocial.apps.django_app.middleware.SocialAuthExceptionMiddleware',\n) \n\nTEMPLATE_CONTEXT_PROCESSORS = (\n'social.apps.django_app.context_processors.backends', 'social.apps.django_app.context_processors.login_redirect',\n)\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.mail.mail_validation',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\nSOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = True\nSOCIAL_AUTH_FACEBOOK_EXTRA_DATA = [\n    ('id', 'id'),\n    ('first_name', 'first_name'),\n    ('last_name', 'last_name'),\n    ('email', 'email'),\n]\n\nSOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\n    'fields': 'id,email', # needed starting from protocol v2.4\n}\n", "created_at": "2015-09-01T07:50:06Z"}, {"body": "when i run the code it gives this error:\n\n  File \"facebook.py\", line 11, in <module>\n    from social.utils import parse_qs, constant_time_compare, handle_http_errors\nImportError: No module named social.utils\n", "created_at": "2015-08-30T22:29:12Z"}, {"body": "Hi, I'm starting a new project using Python Social Auth and Django. I'm able to generate the link to authenticate on Facebook, which is http://127.0.0.1:8000/login/facebook/?next=/events/, but clicking on it I get the following exception:\n\n```\nTraceback:\nFile \"/home/paolo/devel/projects/project/socialauth/lib/python3.4/site-packages/django/core/handlers/base.py\" in get_response\n  132.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/home/paolo/devel/projects/project/socialauth/lib/python3.4/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n  57.         response = view_func(request, *args, **kwargs)\nFile \"/home/paolo/devel/projects/project/socialauth/lib/python3.4/site-packages/social/apps/django_app/utils.py\" in wrapper\n  48.                                                backend, uri)\nFile \"/home/paolo/devel/projects/project/socialauth/lib/python3.4/site-packages/social/apps/django_app/utils.py\" in load_backend\n  29.     Backend = get_backend(BACKENDS, name)\nFile \"/home/paolo/devel/projects/project/socialauth/lib/python3.4/site-packages/social/backends/utils.py\" in get_backend\n  51.         load_backends(backends, force_load=True)\nFile \"/home/paolo/devel/projects/project/socialauth/lib/python3.4/site-packages/social/backends/utils.py\" in load_backends\n  33.             backend = module_member(auth_backend)\nFile \"/home/paolo/devel/projects/project/socialauth/lib/python3.4/site-packages/social/utils.py\" in module_member\n  57.     return getattr(module, member)\n\nException Type: AttributeError at /login/facebook/\nException Value: 'module' object has no attribute 'FacebookOauth2'\n```\n\nAny clue why? I get the issue in [this sample project](https://github.com/paolodina/psa-sample-project).\n", "created_at": "2015-08-29T03:15:51Z"}, {"body": "The \"getSupport()\" button in the README links to http://codersclan.net/forum/index.php?repo_id=8, but this redirects to https://www.codersclan.net/?repo_id=8 (the CodersClan homepage).\n\nThis is confusing for people looking for a support discussion group who instead find [a website where they are expected to pay for coding \"tasks\"](https://www.codersclan.net/faq/#when-to-pay).\n\nI can submit a pull request either removing the button or updating the language in the README to make things more clear, but I am not certain what you would prefer.\n", "created_at": "2015-08-27T20:59:21Z"}, {"body": "", "created_at": "2015-08-24T14:27:59Z"}, {"body": "I'm making a new backend for python-social-auth which is not based on oauth. Is there a built in way to create and store nonce? Current docs don't cover this topic. \n", "created_at": "2015-08-23T21:49:23Z"}, {"body": "This has been working for a long time, but on Aug 20 Google oauth2 stopped working (no change to our server). \n\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nstack trace:\n\n```\n  File \"/home/appazur/.virtualenvs/ftserver/lib/python2.7/site-packages/social/backends/oauth.py\", line 358, in request_access_token\n    return self.get_json(*args, **kwargs)\n  File \"/home/appazur/.virtualenvs/ftserver/lib/python2.7/site-packages/social/backends/base.py\", line 225, in get_json\n    return self.request(url, *args, **kwargs).json()\n  File \"/home/appazur/.virtualenvs/ftserver/lib/python2.7/site-packages/requests/models.py\", line 819, in json\n    return json.loads(self.text, **kwargs)\n  File \"/home/appazur/.virtualenvs/ftserver/lib/python2.7/site-packages/simplejson/__init__.py\", line 505, in loads\n    return _default_decoder.decode(s)\n  File \"/home/appazur/.virtualenvs/ftserver/lib/python2.7/site-packages/simplejson/decoder.py\", line 370, in decode\n```\n\nParameters:\n\n```\nurl \n'https://accounts.google.com/o/oauth2/token'\nself    \n<funtimes.user.backends.GoogleOAuth2 object at 0xa8a3a57ce10>\nargs    \n()\nkwargs  \n{'data': {'client_id': u'....apps.googleusercontent.com',\n          'client_secret': u'...',\n          'code': u'4/f-iMWT8_jVrRTs7ew1wAsB7m5e9gfWRNI_Ih4w4w...',\n          'grant_type': 'authorization_code',\n          'redirect_uri': 'https://...appazur.com/social/complete/google-oauth2/'},\n 'headers': {'Accept': 'application/json',\n             'Content-Type': 'application/x-www-form-urlencoded'},\n 'method': 'POST'}\n/home/appazur/.virtualenvs/ftserver/lib/python2.7/site-packages/requests/models.py in json\n                    return json.loads(self.text, **kwargs)\n```\n", "created_at": "2015-08-21T19:41:59Z"}, {"body": "Updated FB docs to reflect changes in getting fields form public profile or email\n", "created_at": "2015-08-20T11:14:35Z"}, {"body": "I'm getting this error once in awhile and usually restarting server will work.\n\nAny idea what's wrong?\n\n```\n[20/Aug/2015 17:05:25] ERROR [django.request:256] Internal Server Error: /complete/google-oauth2/\nTraceback (most recent call last):\n  File \"/home/u/venv/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 132, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/home/u/venv/local/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n  File \"/home/u/venv/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"/home/u/venv/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 51, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"/home/u/venv/local/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 28, in complete\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\n  File \"/home/u/venv/local/lib/python2.7/site-packages/social/actions.py\", line 43, in do_complete\n    user = backend.complete(user=user, *args, **kwargs)\n  File \"/home/u/venv/local/lib/python2.7/site-packages/social/backends/base.py\", line 41, in complete\n    return self.auth_complete(*args, **kwargs)\n  File \"/home/u/venv/local/lib/python2.7/site-packages/social/utils.py\", line 229, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/u/venv/local/lib/python2.7/site-packages/social/backends/oauth.py\", line 385, in auth_complete\n    print(dict(response))\nIOError: [Errno 5] Input/output error\n```\n", "created_at": "2015-08-20T10:47:09Z"}, {"body": "I am having trouble using python social auth with access tokens\n\n> http://psa.matiasaguirre.net/docs/use_cases.html#signup-by-oauth-access-token\n\nUsing tokens to signup, now to associate user with the current token like we do \n\n> https://github.com/omab/python-social-auth/blob/master/social/pipeline/social_auth.py#L33\n\nit associates the social_user_data to current user in session, using same if we can associate user with the provided token \n", "created_at": "2015-08-20T10:46:17Z"}, {"body": "If there is `social.apps.django_app.context_processors.backends` and `django-debug-toolbar` in a django-project then I get a lot (280) of SQL like `SELECT \"social_auth_usersocialauth\".\"id\", \"social_auth_usersocialauth\".\"user_id\", \"social_auth_usersocialauth\".\"provider\", \"social_auth_usersocialauth\".\"uid\", \"social_auth_usersocialauth\".\"extra_data\" FROM \"social_auth_usersocialauth\" WHERE \"social_auth_usersocialauth\".\"user_id\" = 1`\n\nIs it ok?\n", "created_at": "2015-08-19T23:36:05Z"}, {"body": "I am trying the first step to get the request token from twitter.\n\nWhen i use curl with my key/secret, I get back the request token form twitter.\n\nBut with the PSA code, I throws the above error. I traced it and it looks like the auth kwargs is a OAuth1 object:\n\n{'headers': {}, 'params': {}, 'timeout': None, 'auth': &lt;requests_oauthlib.oauth1_auth.OAuth1 object at 0x10df68190&gt;}\n\nThis is in social/backends/base.py when it is making this call:\n\nresponse = request(method, url, _args, *_kwargs)\n\nhas anyone else encountered this?\n", "created_at": "2015-08-19T04:22:47Z"}, {"body": "Just like in title.\n", "created_at": "2015-08-18T13:15:41Z"}, {"body": "I get this exception while going to `http://localhost:6543/complete/google-oauth2` which is url generated by `request.route_url('social.auth', backend='google-oauth2'))`. I have this project set up in vagrant environment, the same project works if I set it up on my host (not in vagrant). Authentication is done the same like in example directory of `python-social-auth` for pyramid.\n\nWhat might caused this? Maybe it has something to do with port forwarding? Does `python-social-auth` tries to communicate with google on some other port than project is run?\n", "created_at": "2015-08-18T09:22:25Z"}, {"body": "Ability to apply Pyramid Authentication Policies #321\n", "created_at": "2015-08-14T22:20:39Z"}, {"body": "Correct two minor errors in docs.\n", "created_at": "2015-08-14T10:45:01Z"}, {"body": "Now I try to setup python-social-app\n\nIn facebook login after the username/password redirect to error page I don't know why this happen...\n\nIn my setting I have 'social.backends.facebook.FacebookOAuth2' and I correctly set SOCIAL_AUTH_FACEBOOK_KEY and Secret so Really where to look the error.?\n\nThe thing is i didn't cancel anything ...!\n\n``` Environment:\nRequest Method: GET\nRequest URL: http://website.com:8000/complete/facebook/?redirect_state=IuQDEiyX2bbS8Uhk7MR3hpRFLNZlW2Y5&code=AQDH5kqBibfy9bi21M9tTieujRAqvJVYdAb2UPFvfH6DVXoCWrrtamRA99Ze5-6cC6qHPiNq-a3XbGh2Gg4pbdFfM4OTpCEpWkPID6SZrHfAoEan8Q68cV17LDgsryX_M45QoXd0knpbE0x-QwAPwdoFmKQGHLw7xomCHeN5pCtrWhtoYQIrsFE1UQZZaxt4qtLzAmfmCRjDO7Et_S75fngLiomM0PfevTChLbHJHMYaqy6DBkgGZqZK-bXrqLaNFnBEoZ3M956DwCg4ZtTnvxulR4sXH9ZV3IoxVhL0JxMVsGnT2H_0wdKujIDPKcdPKZc&state=IuQDEiyX2bbS8Uhk7MR3hpRFLNZlW2Y5\n\nDjango Version: 1.8.3\nPython Version: 2.7.6\nInstalled Applications:\n('django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'frontend',\n 'social.apps.django_app.default')\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n 'django.middleware.security.SecurityMiddleware')\n\n\nTraceback:\nFile \"/Users/simon/Freelancer/env/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  132.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/Users/simon/Freelancer/env/lib/python2.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n  57.         response = view_func(request, *args, **kwargs)\nFile \"/Users/simon/Freelancer/env/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n  58.         return view_func(*args, **kwargs)\nFile \"/Users/simon/Freelancer/env/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  51.             return func(request, backend, *args, **kwargs)\nFile \"/Users/simon/Freelancer/env/lib/python2.7/site-packages/social/apps/django_app/views.py\" in complete\n  28.                        redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/Users/simon/Freelancer/env/lib/python2.7/site-packages/social/actions.py\" in do_complete\n  43.         user = backend.complete(user=user, *args, **kwargs)\nFile \"/Users/simon/Freelancer/env/lib/python2.7/site-packages/social/backends/base.py\" in complete\n  41.         return self.auth_complete(*args, **kwargs)\nFile \"/Users/simon/Freelancer/env/lib/python2.7/site-packages/social/utils.py\" in wrapper\n  232.                 raise AuthCanceled(args[0])\n\nException Type: AuthCanceled at /complete/facebook/\nException Value: Authentication process canceled\n```\n\nAsked similer question in StackOverFlow too [How to solve Authentication process canceled error?](http://stackoverflow.com/questions/31958246/how-to-solve-authentication-process-canceled-error?noredirect=1#comment51827045_31958246)\n", "created_at": "2015-08-12T16:05:31Z"}, {"body": "", "created_at": "2015-08-12T14:00:20Z"}, {"body": "- Backend UberOAuth2 added\n- Tests for UberOAuth2 backend added\n- Docs for backend added\n- References to backend docs added in intro.rst and backends/index.rst\n", "created_at": "2015-08-10T05:52:35Z"}, {"body": "I am getting an error stacktrace related to the FORM_HTML settings var not being set.  I can't find anything using search on the docs for 1) what this var is or should be, 2) \"legacy\", as a means of getting insight about this backend.  What is this variable, and what is a sane default for it?\n\nFor context, I am using steam auth and email auth.\n\n```\nInternal Server Error: /login/email\nTraceback (most recent call last):\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 132, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n  File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 54, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 19, in auth\n    return do_auth(request.backend, redirect_name=REDIRECT_FIELD_NAME)\n  File \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 28, in do_auth\n    return backend.start()\n  File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/base.py\", line 37, in start\n    return self.strategy.html(self.auth_html())\n  File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/legacy.py\", line 14, in auth_html\n    return self.strategy.render_html(tpl=self.setting('FORM_HTML'))\n  File \"/app/.heroku/python/lib/python2.7/site-packages/social/strategies/django_strategy.py\", line 69, in render_html\n    template = loader.get_template_from_string(html)\nAttributeError: 'module' object has no attribute 'get_template_from_string'\n```\n", "created_at": "2015-08-09T14:26:39Z"}, {"body": "", "created_at": "2015-08-05T11:46:34Z"}, {"body": "I can't authenticate myself to the Spotify API. I've got an **Authentication process canceled** exception.\n\nAuthCanceled at /complete/spotify/\n\nWhen I look at the bottom of the problem:\n\n``` python\ndef handle_http_errors(func):\n    @functools.wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            return func(*args, **kwargs)\n        except requests.HTTPError as err:\n            print(err.response.text)\n            if err.response.status_code == 400:\n                raise AuthCanceled(args[0])\n            elif err.response.status_code == 503:\n                raise AuthUnreachableProvider(args[0])\n            else:\n                raise\n    return wrapper\n```\n\ngive me:\n\n``` bash\n{\"error\":\"invalid_client\"}\n```\n\nwith no further details :(\n", "created_at": "2015-08-03T12:07:27Z"}, {"body": "I am using python social auth with django app. In email validation, the link received on the mail works fine in the same browser from which authentication was initiated but it show Missing needed parameter state in different browser.Its because the other browser doesn't have session for partial pipeline. I tried this https://gist.github.com/SaneMethod/b30156a3705ce9e944cd#file-django-python-social-auth-monkey-py for partial_pipeline_data but it didn't work. How to resume the pipeline in other browser after retrieving the session from django-session table or any other suggestions ?\n", "created_at": "2015-08-02T11:12:51Z"}, {"body": "I apologize if I missed this somewhere in the docs or code - but does there currently exist a way to tell if the user that is returned through do_auth is an existing or new user? I currently use do_auth to generate a token using DRF and would like to return 201 if they are new. I could set up a signal for any server side code but it would be nice to let the client know as well. \n\nThanks!\n", "created_at": "2015-08-01T17:07:59Z"}, {"body": "", "created_at": "2015-07-31T16:54:19Z"}, {"body": "The details of this PR are laid out in #698.  The two things this PR does:\n1. Create an abstract class for the django `UserSocialAuth` model so it can be extended\n2. Adds an object manager to the `UserSocialAuth` class which is the \"django way\" of performing actions that the class method `get_social_auth(cls, provider, uid)` is trying to do.  (`UserSocialAuth.get_social_auth(...)` should now be deprecated in favor of `UserSocialAuth.objects.get_social_auth(...)`)\n\nFixes #698\n", "created_at": "2015-07-29T16:51:31Z"}, {"body": "The request here is to make an **abstract** version of django's `UserSocialAuth` model so it can be extended:\n- https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/models.py\n\nThe current model is great, but when I encounter things like facebook access tokens that expire, I need to store the datetime that the tokens expire so I can query them and extend them.  I don't want to store this in the `extra_data` field because it's stored as a text field and is not queryable.  This would allow me to leverage the existing model and just add the extra fields that are needed.\n\nThe change for this is super trivial:  \n\n``` python\nclass AbstractUserSocialAuth(models.Model, DjangoUserMixin):\n    user = models.ForeignKey(USER_MODEL, related_name='social_auth')\n    provider = models.CharField(max_length=32)\n    uid = models.CharField(max_length=UID_LENGTH)\n    extra_data = JSONField()\n\n    def __str__(self):\n        return str(self.user)\n\n    class Meta:\n        abstract = True\n\n    ...\n    The rest of the current UserSocialAuth model\n    ...\n\nclass UserSocialAuth(AbstractUserSocialAuth):\n\n    class Meta:\n        unique_together = ('provider', 'uid')\n        db_table = 'social_auth_usersocialauth'\n```\n\nThe change is passive for others and lets people leverage the existing work done for the UserSocialAuth model.\n\nThen people can easily create their own versions of the `UserSocialAuth` model:\n\n``` python\nclass MyUserSocialAuth(AbstractUserSocialAuth):\n    token_expires = models.DateTimeField(...)\n    last_modified_dttm = models.DateTimeField(...)\n\n    class Meta:\n        unique_together = ('provider', 'uid')\n```\n\n@omab, thoughts?\n", "created_at": "2015-07-29T15:30:12Z"}, {"body": "Hello, [the scopes used foor Google auth are deprecated](https://developers.google.com/+/web/api/rest/oauth). You need to replace it with a shorter alias.\n\n| Deprecated | Current |\n| :-- | :-- |\n| `https://www.googleapis.com/auth/userinfo.profile` | `profile` |\n| `https://www.googleapis.com/auth/userinfo.email` | `email` |\n\nThis is not a problem for the moment, I have spotted it while opening another issue for zestedesavoir/zds-site#2941.\n", "created_at": "2015-07-28T14:46:12Z"}, {"body": "fix use of login_required decorator; doesn't work if wrapping a func already wrapped with app.route\n", "created_at": "2015-07-25T12:14:12Z"}, {"body": "Hello, I'm a developer of open-edx. I'm trying to add third party auth for my website. When I add qq-auth to my project, I have some problems. Where can I set the redirect_url? Do I have to set redirect url in my project files?\n", "created_at": "2015-07-25T01:27:53Z"}, {"body": "I found it hard to figure out how to get the correct URL for the LinkedIn OAuth2 backend. I couldn't find it mentioned anywhere in the documentation but found my answer on this Stackoverflow question http://stackoverflow.com/questions/25732954/python-social-auth-backend-not-found-for-linkedin-oauth2. A comment also mentions you can find the correct name by looking at the backend class's `name` attribute but I find that not to be the best user experience for developers using this package.\n\nWould you accept a pull request with added examples for how to generate the URL for the different authentication backends?\n", "created_at": "2015-07-24T11:09:17Z"}, {"body": "Previously the implementation of OpenIDConnect depended on statically provided keys. This worked when it could only do HMAC signature verification (\"HS256\"), but was not feasible for RSA based verification (\"RS256\"), since the keys should be fetched from the provider.\n\nI added automatic configuration for OpenIDConnect to simplify creation of backends, and resolving of the keys. I had to switch to pyjwkest for signature verification, since pyjwt makes it really hard to do pass the keys.\n\nPyJWT seems to be only used in Azure AD (which actually seems to be OpenIDConnect, so it might be simplified by just deriving from it and configuring the OIDC_ENDPOINT, I don't have an Azure account to test with though) and in ExactTarget. Maybe we can at some point remove the dependency in favor of PyJWKEST?\n\nTogether with https://github.com/omab/python-social-auth/pull/687 this PR fixes the issues with GoogleOpenIdConnectAuth, as described in https://github.com/omab/python-social-auth/issues/477 and https://github.com/omab/python-social-auth/issues/644.\n", "created_at": "2015-07-22T15:32:01Z"}, {"body": "Hello everyone.\nWhile I was building my REST API on DRF I faced problem with retrieving details from facebook profile, or more precisely email address. I'm getting a NonType object. \nI've specified the scope ( SOCIAL_AUTH_FACEBOOK_SCOPE = ['email'] in my settings.py ), checked documentation and tried everything it told.\nHere is the traceback: http://dpaste.com/1C80SDG\nThank you.\n", "created_at": "2015-07-22T15:15:41Z"}, {"body": "Hi, i have a error : \n# python facebook.py\n\n<addr>\nTraceback (most recent call last):\n  File \"facebook.py\", line 11, in <module>\n    from social.utils import parse_qs, constant_time_compare, handle_http_errors\n  File \"/usr/local/lib/python2.7/dist-packages/python_social_auth-0.2.12-py2.7.egg/social/utils.py\", line 9, in <module>\n    import requests\n  File \"/usr/local/lib/python2.7/dist-packages/requests/**init**.py\", line 58, in <module>\n    from . import utils\n  File \"/usr/local/lib/python2.7/dist-packages/requests/utils.py\", line 25, in <module>\n    from .compat import parse_http_list as _parse_list_header\n  File \"/usr/local/lib/python2.7/dist-packages/requests/compat.py\", line 7, in <module>\n    from .packages import chardet\n  File \"/usr/local/lib/python2.7/dist-packages/requests/packages/__init__.py\", line 3, in <module>\n    from . import urllib3\n  File \"/usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/**init**.py\", line 16, in <module>\n    from .connectionpool import (\n  File \"/usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/connectionpool.py\", line 39, in <module>\n    from .request import RequestMethods\n  File \"/usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/request.py\", line 12, in <module>\n    from .filepost import encode_multipart_formdata\n  File \"/usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/filepost.py\", line 15, in <module>\n    from .fields import RequestField\n  File \"/usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/fields.py\", line 7, in <module>\n    import email.utils\n  File \"/root/python-social-auth/social/backends/email.py\", line 5, in <module>\n    from social.backends.legacy import LegacyAuth\n  File \"/usr/local/lib/python2.7/dist-packages/python_social_auth-0.2.12-py2.7.egg/social/backends/legacy.py\", line 1, in <module>\n    from social.backends.base import BaseAuth\n  File \"/usr/local/lib/python2.7/dist-packages/python_social_auth-0.2.12-py2.7.egg/social/backends/base.py\", line 1, in <module>\n    from requests import request, ConnectionError\nImportError: cannot import name request\n</addr>\n\n<addr>\nRequirement already satisfied (use --upgrade to upgrade): python-openid in /usr/local/lib/python3.2/dist-packages\nRequirement already satisfied (use --upgrade to upgrade): requests-oauthlib in /usr/local/lib/python3.2/dist-packages\nRequirement already satisfied (use --upgrade to upgrade): sqlalchemy in /usr/local/lib/python3.2/dist-packages\nRequirement already satisfied (use --upgrade to upgrade): six in /usr/local/lib/python3.2/dist-packages\nRequirement already satisfied (use --upgrade to upgrade): requests in /usr/local/lib/python3.2/dist-packages\nRequirement already satisfied (use --upgrade to upgrade): oauthlib>=0.6.2 in /usr/local/lib/python3.2/dist-packages (from requests-oauthlib)</addr>\n", "created_at": "2015-07-22T10:25:32Z"}, {"body": "removed @app.teardown_request since it is called before @app.teardown_appcontext and clears current session.\n\nWith @app.teardown_request session is removed just before session.commit and logged in user can not be saved on db.\n\nAdded session.rollback in case of error and session remove to remove thread local session storage.\n", "created_at": "2015-07-21T21:42:13Z"}, {"body": "", "created_at": "2015-07-21T16:03:00Z"}, {"body": "Attempting to retrieve the access token when auth_complete is called results in a 401 returned by the reddit servers. The reddit backend creates an invalid header due to byte strings being unsupported with `.format()`. Here's an example of the resulting header:\n\n```\n{'Authorization': \"Basic b'BASE64-AUTH-STRING'\"}\n```\n\nThe replacement I have working is:\n\n``` python\n\ndef auth_headers(self):\n    return {\n        'Authorization': b'Basic ' + base64.urlsafe_b64encode(\n            ('{0}:{1}'.format(*self.get_key_and_secret()).encode())\n        )\n    }\n```\n", "created_at": "2015-07-19T21:36:59Z"}, {"body": "The token should contain the nonce from the authentication request, not from the token request. I'm not sure how this could have worked, but https://github.com/omab/python-social-auth/issues/477 and https://github.com/omab/python-social-auth/issues/644 seem related.\n", "created_at": "2015-07-19T20:58:16Z"}, {"body": "Add support for goclio's european servers. goclio.eu is pratically the same as goclio.com, but it has a different app registry, so you have different (key, secret) pairs for each domain and different domains on the API calls.\n", "created_at": "2015-07-19T19:04:27Z"}, {"body": "Right now when you use .content, the token is bytes, not text, and so you run into an error when saving it to the session. Similar error in issue #139.\n", "created_at": "2015-07-16T18:02:34Z"}, {"body": "Django 1.8 increases default max_length of EmailField from 75 to 254. Since max_length is not currently specified, but the initial migration contains the 1.8 default of 254, Django 1.7 will think there's a migration to create, decreasing the max_length to 75. This can be fixed by explicitly setting the max_length to 254.\n", "created_at": "2015-07-16T13:28:04Z"}, {"body": "Turn it up~!.\nThx great library XD.\n", "created_at": "2015-07-16T02:49:33Z"}, {"body": "I'm migrating to django 1.8 and I took this change to port from django-social-auth to python-social-auth. \n\nHowever I'm having problems with python-social-auth's migrations. It seems its initial migration does not match with the latest `models.py` in django-social-auth. The difference is, python-social-auth adds a new model `Code`. Which means:\n- if I fake the initial migration, migrating 0003 will not work \n  \n  ```\n  django.db.utils.ProgrammingError: relation \"social_auth_code\" does not exist`\n  ```\n- if I don't fake the initial migration, I immediately get an error \n  \n  ```\n  django.db.utils.ProgrammingError: relation \"social_auth_association\" already exists`\n  ```\n\nAny suggestion on how to solve this problem?\nThanks\n", "created_at": "2015-07-15T17:11:47Z"}, {"body": "It looks like somehow the the Clef backend diverged from the the Clef API. This PR adds a fix for that divergence.\n\nThank you for all of your hard work maintaining this library :)\n", "created_at": "2015-07-14T23:46:28Z"}, {"body": "I set up a flask_me_exmaple and used both OpenID and OAuth2. In both cases the attempt to log in results in the following error (OpenID version):\n127.0.0.1 - - [13/Jul/2015 22:22:45] \"GET /login/google/ HTTP/1.1\" 500 -\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1836, in **call**\n    return self.wsgi_app(environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1820, in wsgi_app\n    response = self.make_response(self.handle_exception(e))\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1403, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1817, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1477, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1381, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1475, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1461, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/flask_app/utils.py\", line 46, in wrapper\n    return func(backend, _args, *_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/flask_app/routes.py\", line 14, in auth\n    return do_auth(g.backend)\n  File \"/usr/local/lib/python2.7/dist-packages/social/actions.py\", line 28, in do_auth\n    return backend.start()\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/base.py\", line 35, in start\n    if self.uses_redirect():\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/open_id.py\", line 239, in uses_redirect\n    return self.openid_request().shouldSendRedirect()\n  File \"/usr/local/lib/python2.7/dist-packages/social/backends/open_id.py\", line 245, in openid_request\n    params))\n  File \"/usr/local/lib/python2.7/dist-packages/openid/consumer/consumer.py\", line 353, in begin\n    return self.beginWithoutDiscovery(service, anonymous)\n  File \"/usr/local/lib/python2.7/dist-packages/openid/consumer/consumer.py\", line 376, in beginWithoutDiscovery\n    auth_req = self.consumer.begin(service)\n  File \"/usr/local/lib/python2.7/dist-packages/openid/consumer/consumer.py\", line 598, in begin\n    assoc = self._getAssociation(service_endpoint)\n  File \"/usr/local/lib/python2.7/dist-packages/openid/consumer/consumer.py\", line 1158, in _getAssociation\n    assoc = self.store.getAssociation(endpoint.server_url)\n  File \"/usr/local/lib/python2.7/dist-packages/social/store.py\", line 43, in getAssociation\n    for assoc_id, association in self.assoc.oids(server_url, handle):\n  File \"/usr/local/lib/python2.7/dist-packages/social/storage/base.py\", line 199, in oids\n    for assoc in cls.get(*_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/social/storage/sqlalchemy_orm.py\", line 201, in get\n    return cls._query().filter_by(_args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/social/storage/sqlalchemy_orm.py\", line 36, in _query\n    return cls._session().query(cls)\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/flask_app/default/models.py\", line 27, in _session\n    return cls.app_session\nAttributeError: type object 'Association' has no attribute 'app_session'\n\nI cannot find where the app_session was supposed to be set, but I am confused by the use of SQLAlchemy code. Does the example fail to configure the storage backend correctly?\n\nIdeas? \n", "created_at": "2015-07-14T16:12:16Z"}, {"body": "Hi,\n\nIt seams http://psa.matiasaguirre.net/docs/configuration/django.html should state:\n./manage.py migrate\nInstead of \n./manage.py makemigrations \nThe former produces 'no change detected message' (django 1.8)\n\nBest regards,\nFabrice.\n", "created_at": "2015-07-14T09:57:15Z"}, {"body": "To close: https://github.com/omab/python-social-auth/issues/677\n", "created_at": "2015-07-13T00:18:02Z"}, {"body": "As a user I want to have possibility to authenticate my users with Meetup.com.\n", "created_at": "2015-07-13T00:16:31Z"}, {"body": "OAuth2 backend for echosing api:\nhttps://secure.echosign.com/public/docs/restapi/v3#!/\n", "created_at": "2015-07-10T17:54:01Z"}, {"body": "Facebook updates it API recently,\nit seems that the way to get extra scope is not working now.\ne.g. setting SOCIAL_AUTH_FACEBOOK_SCOPE = ['email'] \ndoes not return the email.\n\nhere's the link to graph API v2.4\nhttps://developers.facebook.com/blog/post/2015/07/08/graph-api-v2.4/?ref=hp\n", "created_at": "2015-07-10T11:54:47Z"}, {"body": "When reversing URLs, tornado doesn't interpret the regex optional symbol '?'. This causes the redirect_uri to be https://example.com/complete/mybackend/? with the question mark appended. Some providers will simply append to this uri, causing URLs like https://example.com/complete/mybackend/??code=.... with two question marks. This makes the interpretation of the query string fail.\n\nThe provider in this case is [django-oidc-provider](https://github.com/juanifioren/django-oidc-provider). Arguably that library should be smarter in constructing the redirection, but removing the question mark from the uri solves these kind of issues.\n\nAlternatively we could strip the question mark from the uri in the tornado strategy in [here](https://github.com/omab/python-social-auth/blob/470a597f7d5dbb189b72e25cdc0fc2f360435d39/social/strategies/tornado_strategy.py#L61-L64), but this seemed simpler.\n", "created_at": "2015-07-10T09:19:43Z"}, {"body": "The behavior change documented in https://github.com/omab/python-social-auth/issues/276 may not be what users expect, especially those migrating from django social auth. This PR better documents the new user redirect behavior.\n", "created_at": "2015-07-09T20:49:03Z"}, {"body": "@omab \nFix in this PR is changing `current_value` checking to allow to change empty and protected user fields.\nIssue described in [ISSUE#671](https://github.com/omab/python-social-auth/issues/671).\nPlz review this PR.\nThanks.\n", "created_at": "2015-07-09T10:12:53Z"}, {"body": "If user entry have empty field such as `email` - `getattr(user, name, None)` give as `u''` (tested on Django 1.7.8).\nAnd expression `current_value is None` will always return False if user field is empty. So we never can change empty and protected user fields.\n", "created_at": "2015-07-09T10:07:11Z"}, {"body": "In https://github.com/omab/python-social-auth/blob/master/social/backends/facebook.py#L177-L196 the code confuses `str` with `bytes` many times, requiring several fixes to work with Python3.\n", "created_at": "2015-07-06T18:16:42Z"}, {"body": "The codebase is having some canvas app support (apparently inherited from django-social-auth), but it doesnt seem to be usable anymore. Or at least I am misunderstanding how it should be done :)\n\nWith regular oauth login buttons, button is redirecting to `/login/<backend>`, which usually redirects to oauth provider page, then return to `/complete/<backend>` and then redirects to `/` or whatever is configured.\n\nWith FB Canvas apps it looks like PSA is requiring `/login/facebook-app` and `/complete/facebook-app` to be called in proper moments, but FB dashboard is allowing to set only single canvas URL. So, if I understand correctly, I have following options:\n1. Set canvas url to `/login/facebook-app`, and provide html template like the one in docs, with some redirect URI. But:\n   1. if the redirect URI is my canvas URL, I'm getting infinite login loop\n   2. I'm not sure if I can redirect to some URL other than my canvas URL (not checked yet), and trick FB to load that in its canvas iframe (after all I'm overriding window.top). Maybe yes.\n   3. Regardless, even if the above will work, I will have extra 2 redirects for users who are already authenticated and just want to re-visit my app. Not cool.\n2. Set canvas_url to `/complete/facebook-app`:\n   1. this works well if user already allowed to share his info with the app, so `complete` might create user record and use it\n   2. but of course will work only once, and of course there is no place where user can share profile data with the app in the first place, since in this scenario nobody displays permission dialog\n   3. I can try to write my own backend (basically copied from FacebookAppOAuth2) and inside having some smarter `complete` which optionally tries to redirect to login, if necessary. Yet, after short code inspection it seems that it will be extremely hacky at best.\n3. Provide my own `/login/fb` kind of view, which can check whether we need to ask for permission or not, and then call login or complete from social auth. Yet, that is extremely tricky, since we have POST data which basically means that we cannot redirect, or we lose the data. So, apparently importing the view methods from PSA django app and calling them directly would be the way...\n4. Something else?\n\nFB Canvas app and its associated POST is done in such way that if user is already authenticated, it allows app to continue with zero redirects. Just the response to initial POST will contain HTML for the specific user. I hope that with PSA it is possible to reach the same situation, with no redirects. If user had not shared personal info with the app yet, single redirect to permission dialog and back is unavoidable. In this case, however, PSA requires third redirect after `/complete/..`, it would be great to be able to avoid it as well.\n\nNow, am I missing something obvious? Is there a way to get current code cooperate properly with canvas app? Or I'm first user in years who is trying to do so, only to discover that the code is badly outdated? Any hints appreciated ;)\n", "created_at": "2015-07-06T18:15:03Z"}, {"body": "Error `module object has no attribute 'get_template_from_string'` occurs in [`render_html` in `DjangoTemplateStrategy`](https://github.com/omab/python-social-auth/blob/master/social/strategies/django_strategy.py#L21) and [`render_template` in `DjangoStrategy`](https://github.com/omab/python-social-auth/blob/master/social/strategies/django_strategy.py#L89), because `get_template_from_string` was removed in Django 1.8.\n\nDjango docs [recommend](https://docs.djangoproject.com/en/1.8/ref/templates/upgrading/#get-template-from-string) changing `get_template_from_string` calls to other alternatives:\n\n> Private API get_template_from_string(template_code) was removed in Django 1.8 because it had no way to choose an engine to compile the template.\n> \n> Three alternatives are available.\n> \n> If you control the project\u2019s setting, you can use one of the configured engines:\n> \n> ```\n> from django.template import engines\n> \n> template = engines['django'].from_string(template_code)\n> ```\n> \n> This returns a backend-dependent Template object.\n> \n> For trivial templates that don\u2019t need context processors nor anything else, you can create a bare-bones engine and use its from_string() method:\n> \n> ```\n> from django.template import Engine\n> \n> template = Engine().from_string(template_code)\n> ```\n> \n> This returns a django.template.Template because Engine is part of the Django template language\u2019s APIs. The multiple template engines machinery isn\u2019t involved here.\n> \n> Finally, if you have access to the current context, you can use the same trick as above:\n> \n> ```\n> template = context.template.engine.from_string(template_code)\n> ```\n", "created_at": "2015-07-05T11:02:36Z"}, {"body": "The strategy is expected to store lists and other structures in session, but tornado's cookies only store bytes. This fixes that by encoding it to json.\n", "created_at": "2015-07-03T14:49:39Z"}, {"body": "Is there a particular reason expires data is not stored for linkedin?\nThe linkedin doc states it's returned as \"expires_in\" https://developer.linkedin.com/docs/oauth2 when exchanging the auth code for a request token.\n", "created_at": "2015-07-03T14:18:50Z"}, {"body": "Is there a chance that Django Rest Framework will get support.\nFor me https://gist.github.com/f3r3nc/3b6ac37c681b49d75159#file-django_strategy-py does the trick but probably needs some more serious work.\n", "created_at": "2015-07-03T10:14:36Z"}, {"body": "According to https://developers.google.com/identity/sign-in/web/server-side-flow a code can be sent to the server to retrieve the access_token along with the refresh token.\n\nGoolePlusAuth.auth_complete_params (https://github.com/omab/python-social-auth/blob/master/social/backends/google.py#L132) however requires access_token to be present in order to make add postmessage as the redirect_uri.\n\nThis results in a failed call.\n\nI am not sure how auth_complete is supposed to work but this works for me?\nhttps://gist.github.com/f3r3nc/3b6ac37c681b49d75159#file-google-py\n", "created_at": "2015-07-03T10:12:08Z"}, {"body": "I am getting \"cannot import name SHA384\" error when I am trying to use facebook (OAuth2), google (OAuth2) and twitter (OAuth) backends. My configuration looks like this:\n\nsettings.py:\n\n```\nAUTHENTICATION_BACKENDS = (\n    'social.backends.google.GoogleOAuth2',\n    'social.backends.facebook.Facebook2OAuth2',\n    'social.backends.twitter.TwitterOAuth',\n    'django.contrib.auth.backends.ModelBackend',\n)\n\nSOCIAL_AUTH_URL_NAMESPACE = 'social'\nSOCIAL_AUTH_ADMIN_USER_SEARCH_FIELDS = ['username', 'first_name', 'email']\n\nSOCIAL_AUTH_FACEBOOK_KEY = 'xxx'\nSOCIAL_AUTH_FACEBOOK_SECRET = 'yyy'\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email', ]\n\nSOCIAL_AUTH_GOOGLE_OAUTH2_KEY = 'zzz'\nSOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'aaa'\nSOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['https://www.googleapis.com/auth/plus.me',\n                                   'https://www.googleapis.com/auth/userinfo.email',\n                                   'https://www.googleapis.com/auth/userinfo.profile', ]\n\nSOCIAL_AUTH_TWITTER_KEY = 'bbb'\nSOCIAL_AUTH_TWITTER_SECRET = 'ccc'\n```\n\nurls:\n\n```\nurl(r'^social/', include('social.apps.django_app.urls', namespace='social')),\n```\n\nAnd when I access URL /social/login/facebook/ and get following result:\n\n```\nRequest Method: GET\nRequest URL:    http://django-skeleton.bekonline.webfactional.com/social/login/facebook/\nDjango Version: 1.7.8\nException Type: ImportError\nException Value:    \ncannot import name SHA384\nException Location: /home/bekonline/lib/python2.7/python_social_auth-0.2.11-py2.7.egg/social/backends/open_id.py in <module>, line 4\nPython Executable:  /usr/local/bin/python\nPython Version: 2.7.9\nPython Path:    \n['/home/bekonline/webapps/django_skeleton/lib/python2.7/Django-1.7.8-py2.7.egg',\n '/home/bekonline/webapps/django_skeleton',\n '/home/bekonline/webapps/django_skeleton/project',\n '/home/bekonline/webapps/django_skeleton/project/app',\n '/home/bekonline/webapps/django_skeleton/lib/python2.7',\n '/usr/local/lib/python2.7/site-packages/Crypto',\n '/home/bekonline/lib/python2.7/setuptools-2.2-py2.7.egg',\n '/home/bekonline/lib/python2.7/loremipsum-1.0.2-py2.7.egg',\n '/home/bekonline/lib/python2.7/distribute-0.7.3-py2.7.egg',\n '/home/bekonline/lib/python2.7/jsonpickle-0.6.1-py2.7.egg',\n '/home/bekonline/lib/python2.7/Pillow-2.3.0-py2.7-linux-x86_64.egg',\n '/home/bekonline/lib/python2.7/django_tinymce-1.5.2-py2.7.egg',\n '/home/bekonline/lib/python2.7/slugify-0.0.1-py2.7.egg',\n '/home/bekonline/lib/python2.7/django_reversion-1.8.4-py2.7.egg',\n '/home/bekonline/lib/python2.7/django_grappelli-2.6.1-py2.7.egg',\n '/home/bekonline/lib/python2.7/pip-1.5.6-py2.7.egg',\n '/home/bekonline/lib/python2.7/django_ckeditor_updated-4.4.4-py2.7.egg',\n '/home/bekonline/lib/python2.7/django_suit-0.2.11-py2.7.egg',\n '/home/bekonline/lib/python2.7/django_import_export-0.2.5-py2.7.egg',\n '/home/bekonline/lib/python2.7/diff_match_patch-20121119-py2.7.egg',\n '/home/bekonline/lib/python2.7/tablib-0.10.0-py2.7.egg',\n '/home/bekonline/lib/python2.7/pytz-2014.10-py2.7.egg',\n '/home/bekonline/lib/python2.7/django_htmlmin-0.7.0-py2.7.egg',\n '/home/bekonline/lib/python2.7/html5lib-1.0b3-py2.7.egg',\n '/home/bekonline/lib/python2.7/beautifulsoup4-4.3.2-py2.7.egg',\n '/home/bekonline/lib/python2.7/argparse-1.3.0-py2.7.egg',\n '/home/bekonline/lib/python2.7/six-1.9.0-py2.7.egg',\n '/home/bekonline/lib/python2.7/django_debreach-1.1.0-py2.7.egg',\n '/home/bekonline/lib/python2.7/djangorestframework-3.0.3-py2.7.egg',\n '/home/bekonline/lib/python2.7/Markdown-2.5.2-py2.7.egg',\n '/home/bekonline/lib/python2.7/markdown2-2.3.0-py2.7.egg',\n '/home/bekonline/lib/python2.7/easy_thumbnails-2.2-py2.7.egg',\n '/home/bekonline/lib/python2.7/python_slugify-0.1.0-py2.7.egg',\n '/home/bekonline/lib/python2.7/Unidecode-0.04.17-py2.7.egg',\n '/home/bekonline/lib/python2.7/django_compressor-1.4-py2.7.egg',\n '/home/bekonline/lib/python2.7/django_appconf-0.6-py2.7.egg',\n '/home/bekonline/lib/python2.7/django_filter-0.10.0-py2.7.egg',\n '/home/bekonline/lib/python2.7/django_debug_toolbar-1.3.2-py2.7.egg',\n '/home/bekonline/lib/python2.7/sqlparse-0.1.15-py2.7.egg',\n '/home/bekonline/lib/python2.7/django_debug_toolbar_template_timings-0.6.4-py2.7.egg',\n '/home/bekonline/lib/python2.7/python_social_auth-0.2.11-py2.7.egg',\n '/home/bekonline/lib/python2.7/requests-2.7.0-py2.7.egg',\n '/home/bekonline/lib/python2.7/jwt-0.3.2-py2.7.egg',\n '/home/bekonline/lib/python2.7/PyJWT-1.3.0-py2.7.egg',\n '/home/bekonline/lib/python2.7/requests_oauthlib-0.5.0-py2.7.egg',\n '/home/bekonline/lib/python2.7/oauthlib-0.7.2-py2.7.egg',\n '/home/bekonline/lib/python2.7/python_openid-2.2.5-py2.7.egg',\n '/home/bekonline/lib/python2.7/ecdsa-0.13-py2.7.egg',\n '/home/bekonline/lib/python2.7/pyOpenSSL-0.15.1-py2.7.egg',\n '/home/bekonline/lib/python2.7/cryptography-0.9.1-py2.7-linux-x86_64.egg',\n '/home/bekonline/lib/python2.7/cffi-1.1.2-py2.7-linux-x86_64.egg',\n '/home/bekonline/lib/python2.7/ipaddress-1.0.7-py2.7.egg',\n '/home/bekonline/lib/python2.7/enum34-1.0.4-py2.7.egg',\n '/home/bekonline/lib/python2.7/pyasn1-0.1.8-py2.7.egg',\n '/home/bekonline/lib/python2.7/idna-2.0-py2.7.egg',\n '/home/bekonline/lib/python2.7/pycparser-2.14-py2.7.egg',\n '/home/bekonline/lib/python2.7',\n '/home/bekonline/lib/python2.7/Django-1.7.3-py2.7.egg',\n '/home/bekonline/lib/python2.7/hashlib-20081119-py2.7-linux-x86_64.egg',\n '/usr/local/lib/python27.zip',\n '/usr/local/lib/python2.7',\n '/usr/local/lib/python2.7/plat-linux2',\n '/usr/local/lib/python2.7/lib-tk',\n '/usr/local/lib/python2.7/lib-old',\n '/usr/local/lib/python2.7/lib-dynload',\n '/usr/local/lib/python2.7/site-packages',\n '/usr/local/lib/python2.7/site-packages/PIL']\nServer time:    Tue, 30 Jun 2015 14:40:26 +0500\n```\n\nI have checked OpenSSL installation, it is installed. Below you can find all installed packages:\n\n```\npytz\ndjango==1.7.8\njsonpickle\npillow\ndjango-suit\ndjango-ipware\ndjango-filter\ndjango-htmlmin\ndjango-select2\ndjango-debreach\ndjango-debug-toolbar\ndjango-debug-toolbar-template-timings\ndjango-ckeditor-updated\ndjango_compressor\ndjangorestframework\neasy-thumbnails\npython-slugify\nsix\npyopensll\npycrypto\necdsa\noauthlib\nrequests\nrequests-oauthlib\nPyJWT\npython-openid\npython-social-auth\n```\n", "created_at": "2015-06-30T09:55:08Z"}, {"body": "I just extended the Github module, so the functions used for Github Enterprise are exactly the same as the Github ones.\nI've tested it against a trial version of Github Enterprise I have running and it works fine.\nThe tests work fine too as it's an identical copy of the Github v3 API.\n\nAdded docs as well.\n\nHad to add `DEFAULT_SCOPE = ['read:org']` as it couldn't figure out organisation membership on Github Enterprise (normal Github works just fine without it - as long as you publicise your membership)\n", "created_at": "2015-06-29T09:12:02Z"}, {"body": "The default implementation of `create_user` pipeline method is reading settings via strategy not backend. (https://github.com/omab/python-social-auth/blob/b53e4dd48116e255f0a1e145f4e9d2bd21cd3722/social/pipeline/user.py#L63) \nThis makes it impossible to give backend specific settings. Is this behavior intentional?\n", "created_at": "2015-06-29T07:48:56Z"}, {"body": "I just extended the Github module, so the functions used for Github Enterprise are exactly the same as the Github ones.\nI've tested it against a trial version of Github Enterprise I have running and it works fine.\nThe tests work fine too as it's an identical copy of the Github v3 API.\n\nAdded docs as well\n", "created_at": "2015-06-28T21:58:58Z"}, {"body": "I didn't find any documentantion or use case anywhere so I had to ask it here.\n\nI am using python-social-auth with django and everytime an user do a login in the app, it creates a new account, which is great.\n\nBut I want this use case:\n\n```\nThe user logs in with a social backend (i.e. Facebook)\nThe user goes to his/her edit profile page I had created\nIn that page he/she finds buttons to assocciate or connect additional accounts to the current django user account (i.e. a Twitter or Google button) so next time he wants to login, could use the Twitter account instead the Facebook (which was the first).\n```\n\nHow which is the best way to develop these connect buttons funcionality? I think it will end up by adding a new object to UserSocialAuth model, but how I contact the backend and get the keys using the PSA engine?\n\nThanks\n", "created_at": "2015-06-25T23:31:37Z"}, {"body": "", "created_at": "2015-06-25T07:08:35Z"}, {"body": "The SAML backend can now use the latest official release of python-saml, rather than a fork, since the release now includes the required changes. Version 2.1.3 is largely the same as the commit hash previously specified, with one notable difference being that the \"NameIDFormats\" setting change that I had proposed was rejected in favor of [a simpler fix](https://github.com/onelogin/python-saml/commit/3a5847be93fd7e3af695d791989825cc6c118808) that should meet the same goals.\n\nSo, this PR:\n- Uses the official release of python-saml instead of the fork\n- Removes the now-unsupported `NameIDFormats` setting, which was unlikely to be needed by most people anyways. Those who do need to override the `NameIDFormat` can configure it using the `SOCIAL_AUTH_SAML_SP_EXTRA` dict, but that is unlikely to be a common requirement.\n- Updates the documentation accordingly\n", "created_at": "2015-06-25T01:38:57Z"}, {"body": "I noticed that commit 76a27b2 made some of my commit logs show up in old versions, because the commits were authored some time ago. None of the SAML commits were present in any releases before 0.2.11. This PR fixes the changelog so that nobody will be confused :)\n", "created_at": "2015-06-25T01:32:51Z"}, {"body": "In https://github.com/omab/python-social-auth/blob/master/social/backends/google.py#L12-L17, the default option is to use the Google+ email as a way to uniquely identify the user. However, the new default scopes only include 'https://www.googleapis.com/auth/plus.login'. So Google returns an empty email and (at least in Django), we create a model UserSocialAuth(provider='google-plus', uid=''). Since there is a unique index on those two, every single user going forward is associated with that user.\n\nI do not suggest making USE_UNIQUE_USER_ID=True a default because that would cause backwards compatibility problems with existing installations (unless a migration is provided to pull the user id from extra_data). Instead, I suggest adding 'email' in the default scope.\n", "created_at": "2015-06-22T19:55:22Z"}, {"body": "The current azuread-oauth2 speicfies a default scope of `['openid', 'profile', 'user_impersonation']`. This is significantly more than many apps require, and places unnecessary limitations on the use (since when configuring scope, the configured scope is added to the default scope rather than replace it).\n\n~~As a specific issue: If you go to authenticate with Azure and enter a `@live.com` email, microsoft will redirect you to the live.com authentication page, but since that does not support these scopes, you will get an obscure error message and the user will never be returned to your site. However, if you do not ask for them, the user is redirected back and (with some hacking) if you enable the Live backend you can even log them in.~~ (there's more to that than I thought, forget this example)\n", "created_at": "2015-06-22T12:03:03Z"}, {"body": "Bitbucket launched OAuth2 support a few weeks back. This PR adds an OAuth2 backend to python-social-auth and updates the documentation accordingly.\n\nThis PR is inclusive of #652. The diff will probably be a little bit clearer once it is merged in. \n", "created_at": "2015-06-21T20:10:10Z"}, {"body": "Bitbucket has had a v2.0 version of their REST API out for some time. This PR updates the Bitbucket backend to use the v2.0 REST API for user and e-mail resources.\n\nIn addition, this PR follows the [Bitbucket API documentation guidance](https://confluence.atlassian.com/display/BITBUCKET/Use+the+Bitbucket+REST+APIs#UsetheBitbucketRESTAPIs-uuid-mainUniversallyUniqueIdentifier%28UUID%29) that user UUIDs should be used as account identifiers instead of the username since usernames can change.\n", "created_at": "2015-06-21T14:04:20Z"}, {"body": "Does python-social-auth support Google's newer 'g-signin2' flow, rather than the older 'g-signin' approach? (Alternatively put, gapi.auth2 vs the older gapi.auth). See https://developers.google.com/identity/sign-in/web/ .\n\nAll the examples in the repo seem to based on g-signin, and use access_token and code vs the newer 'id_token'.\n\nAlso see http://codingwithgerwin.blogspot.co.at/2015/04/google-sign-in-20-server-side.html for an overview of 'Google Sign-In 2.0'.\n", "created_at": "2015-06-20T23:48:08Z"}, {"body": "I don't see login with spotify listed in the readme. Does this package support login with spotify? Are there future plans to support login with spotify?\n", "created_at": "2015-06-18T22:51:02Z"}, {"body": "", "created_at": "2015-06-17T12:55:32Z"}, {"body": "**Package Versions**\ndjango: 1.6.8\nsocial: 0.1.26\n\n```\nStacktrace (most recent call last):\n\n  File \"django/core/handlers/base.py\", line 112, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"django/views/decorators/csrf.py\", line 57, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"social/apps/django_app/utils.py\", line 45, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"social/apps/django_app/views.py\", line 21, in complete\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\n  File \"social/actions.py\", line 44, in do_complete\n    *args, **kwargs)\n  File \"social/strategies/base.py\", line 71, in complete\n    return self.backend.auth_complete(*args, **kwargs)\n  File \"social/backends/facebook.py\", line 69, in auth_complete\n    'code': self.data['code']\n  File \"social/backends/base.py\", line 212, in get_querystring\n    return parse_qs(self.request(url, *args, **kwargs).text)\n  File \"social/backends/base.py\", line 205, in request\n    response.raise_for_status()\n  File \"requests/models.py\", line 795, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n```\n\n**Variables**\n\nIn `social/strategies/base.py, line 71, in complete`:\n\n```\n'args'\n'kwargs'    'request'    <WSGIRequest at 0x140466860910864>\n            'user'       <SimpleLazyObject: <User: SomeUser>>\n'self'      <social.strategies.django_strategy.DjangoStrategy object at 0x7fc0fddc24d0>\n```\n\nIn `social/backends/facebook.py, line 69, auth_complete`:\n\n```\n'args'\n'key'       ********\n'kwargs'    'request'    <WSGIRequest at 0x140466860910864>\n            'user'       <SimpleLazyObject: <User: SomeUser>>\n'secret'    ********\n'self'      <social.backends.facebook.FacebookOAuth2 object at 0x7fc0fddc27d0>\n'state'     u'gHj0lULwmT52WoDhhAYW2MQKb73w4HdL'\n'url'       'https://graph.facebook.com/oauth/access_token'\n```\n\nIn `social/backends/base.py, line 212, get_querystring`:\n\n```\n'args'\n'kwargs'    'params'    'client_id'        ********\n                        'client_secret'    ********\n                        'code'             u'AQBGrKEWzD-...'\n                        'redirect_uri'     'http://www.myapp.com/social/complete/facebook?redirect_state=gHj0lULwmT52WoDhhAYW2MQKb73w4HdL'\n'self'      <social.backends.facebook.FacebookOAuth2 object at 0x7fc0fddc27d0>\n'url'       'https://graph.facebook.com/oauth/access_token'\n```\n\nIn `social/backends/base.py, line 205, request`:\n\n```\n'args'\n'kwargs'    'params'    'client_id'        ********\n                        'client_secret'    ********\n                        'code'             u'AQBGrKEWzD-...'\n                        'redirect_uri'     'http://www.myapp.com/social/complete/facebook?redirect_state=gHj0lULwmT52WoDhhAYW2MQKb73w4HdL'\n'method'    'GET'\n'response'  <Response [400]>\n'self'      <social.backends.facebook.FacebookOAuth2 object at 0x7fc0fddc27d0>\n'url'       'https://graph.facebook.com/oauth/access_token'\n```\n\n**User**\n\n```\nID:                  13309\nUsername:            SomeUser\nIs Authenticated:    True\n```\n\nI've read issue #207 but this is happening in a live site (so it is not using `localhost`), so that doesn't resolve the problem.\n\nI checked the code in the latest version of `social/backends/facebook.py` and the access token URL is different (it's now `'https://graph.facebook.com/v2.3/oauth/access_token'` in version `0.2.10`). If I upgrade to version `0.2.10` from `0.1.26`, will this issue be resolved? \n", "created_at": "2015-06-17T02:42:48Z"}, {"body": "Hello,\n\nI was following the examples, at the register_by_access_token method (I use django as API for an Angular app).\n\nIn the example, the line:\n\n```\nuser = request.backend.do_auth(access_token)\n```\n\nWas not working with twitter with the oauth_token received by twitter, to get it work I have to create the following access_token:\n\n```\naccess_token = {\n                  'oauth_token': auth[1],\n                  'oauth_token_secret': auth[2]\n            }\n```\n\nWhere auth[1] and [2] are the values that twitter returned.\n\nIts weird because I didn't found this documented anywhere, I just found that people who missed SOCIAL_AUTH_TWITTER_KEY and SOCIAL_AUTH_TWITTER_SECRET get it working. \n\nfyi: I use it with django rest framework\n", "created_at": "2015-06-16T16:33:15Z"}, {"body": "Request Method: GET\nRequest URL:    http://127.0.0.1:8000/complete/facebook/?redirect_state=AtY4qsW9RJpNlJS9b0tiLri7NhHi5Kum&code=AQCZhSjAxWGJSLXgH3HyAEWk3UVQ4R3m3lQ9YkFuSe_jaYgYct60qQtzUWAPWVHh0l1Oc2MNQsMGvziqs35OPlPGIuRA5IvNPw82ROzMv-feE30GWWojCkhFXN4YFNqOFwTan9-yWmEcPIA2ku0jziDNniDR8PXHlANcrRlmcwK9Zw_uOKyc9P43kOJodHHGapJ-TiakzS5RsKbDHuMt0Ac7TfD1p4mnf6fu4T3uXMdrsCw-IjtfCgU-4aPWND_4goniq0O4XTBMbC_VUlRc_XSemPemjPbIoAhrztVmWXUnY5hdHQ1HhK-tucfPET2FG4k997z57YUmsyo9LW2qX6lK8IuKx86CwkZXgeKC-7hj0w&state=AtY4qsW9RJpNlJS9b0tiLri7NhHi5Kum\nDjango Version: 1.8.1\nException Type: TypeError\nException Value:    expected string or buffer\nPython Version: 3.4.0\n", "created_at": "2015-06-15T23:32:48Z"}, {"body": "Hi, \n\nI have been working on integrating my angularjs mobile website with django backend. \n\nI am able to send the token properly to python social auth and I am able to authenticate the user and I am getting the user model from the code\n\nBut I am not able to perform a _do_login, I have found that this is because of some code improvements in the plugin and I do not know the new implementations of the newer version. Please help me out with this. I am using 0.2.2 of psa and django 1.7.4\n\nHere is the code for my views.py. \n\n```\n@psa()\ndef auth_by_token(request, backend):\n    backend = request.backend\n    user=request.user\n    user = backend.do_auth(\n        access_token=request.DATA.get('access_token'),\n        user=user.is_authenticated() and user or None\n        )\n    if user and user.is_active:\n        return user # Return anything that makes sense here\n    else:\n        return None\n\n\n\n@csrf_exempt\n@api_view(['POST'])\n@permission_classes((AllowAny,))\ndef social_register(request):\n    auth_token = request.DATA.get('access_token', None)\n    backend = request.DATA.get('backend', None)\n    if auth_token and backend:\n        try:\n            user = auth_by_token(request, backend)\n        except Exception, err:\n            return Response(str(err), status=400)\n        if user:\n            # TO FIX STRATEGY LOGIC.\n            strategy = load_strategy(request=request, backend=backend)\n            _do_login(strategy, user)\n            return Response( \"User logged in\", status=status.HTTP_200_OK )\n        else:\n            return Response(\"Bad Credentials\", status=403)\n    else:\n        return Response(\"Bad request\", status=400)\n\n```\n", "created_at": "2015-06-13T19:14:39Z"}, {"body": "I saw #477 and #520 but I was not able to use Google OpenID Connect support. Is anyone at this moment?\n\nWhen I tried yesterday, there seemed several weird problems found that are hard for me to fix or workaround.\n\n1: nonce is being rejected by server\n\nAs @eshellman says at #477, AuthCanceled will be thrown, probably because Google's server sends HTTP 400. I inserted some debug statements and found JSON message from Google.\n\n```\n{\n  \"error\" : \"invalid_request\",\n  \"error_description\" : \"Parameter not allowed for this message type: nonce\"\n}\n```\n\nOpenIdConnectAuth class inserts the \"nonce\" parameter every time (auth_complete_params()), while I'm not sure if it is legitimate for the spec.\n\nMaybe GoogleOpenIdConnect needs to revert the behavior. Possibly I'm just wrong with how to use python-social-auth.\n\n```\n    def auth_complete_params(self, state=None):\n        params = super(OpenIdConnectAuth, self).auth_complete_params(state)\n        # Add a nonce to the request so that to help counter CSRF\n        params['nonce'] = self.get_and_store_nonce(\n            self.ACCESS_TOKEN_URL, state\n        )\n        return params\n```\n\n2: RS256 is required while open_id.py is assuming HS256\n\nopen_id.py is assuming RS256 while the server is forcing HS256? It looks even after nonce is deleted (for debugging), jwt_decode() now fails itself.\n\nThis topic will be related to this issue too: https://github.com/omab/python-social-auth/issues/641\n\n3: Lack of documentation.\n\nRight now only the (possibly) useful information will be https://github.com/omab/python-social-auth/pull/520 \nNo documentation seems in http://django-social-auth.readthedocs.org/en/latest/backends/google.html (at least right now) It does not mention \"OpenID Connect\" at all.\n\nIt will be very helpful if there are some explanations about how to get it work.\n\nThanks!\n", "created_at": "2015-06-13T00:48:48Z"}, {"body": "I am trying to add instagram login. I first had problems with the REDIRECT_URI giving me a REDIRECT URI whenever I tried to press on the log in via instagram link. \n\n```\n{\n    \"code\": 400,\n    \"error_type\": \"OAuthException\",\n    \"error_message\": \"Redirect URI does not match registered redirect URI\"\n}\n```\n\nI read around Stackoverflow and needed to add http://localhost:8000/complete/instagram as a redirect uri in my settings an on Instagram redirect URI developer page. So I tried going to the link via my browser to check if it's working or not and when I try to go on it it gives me the following error\n\n```\nAuthMissingParameter at /complete/instagram/\n\nMissing needed parameter state\n\nRequest Method:     GET\nRequest URL:    http://localhost:8000/complete/instagram/\nDjango Version:     1.8.2\nException Type:     AuthMissingParameter\nException Value:    \n\nMissing needed parameter state\n```\n", "created_at": "2015-06-13T00:34:24Z"}, {"body": "I'm dealing with the refresh_token using box.net as backend. As I've seen in the documentation the necessary piece of code would be something like this:\n\n``` python\nfrom social.apps.django_app.utils import load_strategy\n\nstrategy = load_strategy(backend='box')\nuser = User.objects.get(pk=foo)\nsocial = user.social_auth.filter(provider='box')[0]\nsocial.refresh_token(strategy=strategy)\n```\n\nWhich returns me an error message: load_strategy() got an unexpected keyword argument 'backend'\n\nOtherwise, if I put this block instead, it apparently works fine:\n\n``` python\nfrom social.apps.django_app.utils import load_strategy\n\nstrategy = load_strategy(request)     \nsocial_user = request.user.social_auth.filter(provider='box',).first()\nsocial_user.refresh_token(strategy=strategy)\n```\n\nBut I don't really know if this is a good solution.....any suggestion?\n", "created_at": "2015-06-12T07:37:53Z"}, {"body": "https://github.com/omab/python-social-auth/blob/master/social/backends/open_id.py#L334\n\nThat value is hard-coded to HS256 which is not the only possible option. It should be a trivial matter to allow a user-configurable value there (in my case RS256).\n", "created_at": "2015-06-10T23:15:24Z"}, {"body": "Excluding `egg-info` in `MANIFEST.in` breaks buildout installation with the following error message:\n\n```\nNo eggs found in /tmp/easy_install-I43eXo/python-social-auth-0.2.10/egg-dist-tmp-R1VwTo (setup script problem?)\n```\n\nRemoving the exclude directive fixes the problem. \n", "created_at": "2015-06-09T09:41:08Z"}, {"body": "Occasionally I get the error: Server Error 500: Internal Server Error, without further explanation.\n_(Using python-social-auth==0.2.6)_\n\n**Django Version:** 1.7.7\n**Exception Type:** HTTPError\n**Exception Value:**    500 Server Error: Internal Server Error\n**Exception Location:** /data/web/mysite.com/virtualenv/local/lib/python2.7/dist-packages/requests/models.py in raise_for_status, line 834\n**Python Executable:**  /usr/local/bin/uwsgi\n**Python Version:** 2.7.9\n## traceback\n\n_/data/web/mysite.com/virtualenv/local/lib/python2.7/dist-packages/django/core/handlers/base.py in get_response_\n\n```\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n```\n### Local Vars\n\n| Variable | Value |\n| --- | --- |\n| e | HTTPError('500 Server Error: Internal Server Error',) |\n| callback_args | () |\n| resolver_match | ResolverMatch(func=< function complete at 0x7fb1007d6578>, args=(), kwargs={'backend': u'facebook'}, url_name='complete', app_name='None', namespace='social') |\n| middleware_method | < bound method SocialAuthExceptionMiddleware.process_exception of < social.apps.django_app.middleware.SocialAuthExceptionMiddleware object at 0x7fb1013e5a90>> |\n| self | < django.core.handlers.wsgi.WSGIHandler object at 0x7fb103069050> |\n| request | \"<WSGIRequest\\npath:/complete/facebook,\\nGET:<QueryDict: {u'state': [u'294NFN5ZV37b9RcvnUeBUWq8e46iLjMc'], u'code': [u'AQDugVJPK8MPEwzVDk4eYxJkKl-qxu_gRYterRQjbng_CoPNR4vfq5a9ry-gDo_7LwbFiwDSkFc635MV5PeOiasAhORgiUYDiZ7AUcq7oMsQh96CdAWuVMkhd_hKsTlX52RfmiDgmh7Bpj1-Q0t3KIbhYHFlVnmkWivX95PpkBXPBOl3ebzdab-KTDaV83V1R-FgVPR4RCSNjkD5fU6HMXqydDkQffRvUsIc-tLZCUKxXWxKsvq6Ea2g91X_oW_3HYD2L8BJ6nmK3l1NnmLjtPY_OFVAk6qEER0Ko5OzWf3QUj8A92MDkM6KxO7egNY8Vc8'], u'redirect_state': [u'294NFN5ZV37b9RcvnUeBUWq8e46iLjMc']}>,\\nPOST:<QueryDict: {}>,\\nCOOKIES:{'csrftoken': 'f3HrigECHvFPTob4yeO4jBqegfVtkfvb',\\n 'sessionid': '8ikdo3fn54f4kmhov4kecbfq4j8vpx8n'},\\nMETA:{'CONTENT_LENGTH': '',\\n 'CONTENT_TYPE': '',\\n u'CSRF_COOKIE': u'f3HrigECHvFPTob4yeO4jBqegfVtkfvb',\\n 'DOCUMENT_ROOT': '/data/web/mysite.com/www',\\n 'HTTP_ACCEPT': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,_/_;q=0.8',\\n 'HTTP_ACCEPT_ENCODING': 'gzip',\\n 'HTTP_ACCEPT_LANGUAGE': 'es-ES,es;q=0.8',\\n 'HTTP_COOKIE': 'csrftoken=f3HrigECHvFPTob4yeO4jBqegfVtkfvb; sessionid=8ikdo3fn54f4kmhov4kecbfq4j8vpx8n',\\n 'HTTP_HOST': 'www.mysite.com',\\n 'HTTP_REFERER': 'https://www.facebook.com/v2.3/dialog/oauth?scope=email&state=294NFN5ZV37b9RcvnUeBUWq8e46iLjMc&redirect_uri=https%3A%2F%2Fwww.mysite.com%2Fcomplete%2Ffacebook%3Fredirect_state%3D294NFN5ZV37b9RcvnUeBUWq8e46iLjMc&client_id=1448952605425580',\\n 'HTTP_USER_AGENT': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.81 Safari/537.36',\\n 'HTTP_X_FORWARDED_FOR': 'SOME.IP.ADD.SS, 127.0.0.1',\\n 'HTTP_X_FORWARDED_PROTO': 'https', \\n'HTTP_X_REAL_IP': 'SOME.IP.ADD.SS',\\n 'HTTP_X_SOURCE_IP': '127.0.0.1',\\n 'HTTP_X_VARNISH': '415941402',\\n 'PATH_INFO': u'/complete/facebook',\\n 'QUERY_STRING': 'redirect_state=294NFN5ZV37b9RcvnUeBUWq8e46iLjMc&code=AQDugVJPK8MPEwzVDk4eYxJkKl-qxu_gRYterRQjbng_CoPNR4vfq5a9ry-gDo_7LwbFiwDSkFc635MV5PeOiasAhORgiUYDiZ7AUcq7oMsQh96CdAWuVMkhd_hKsTlX52RfmiDgmh7Bpj1-Q0t3KIbhYHFlVnmkWivX95PpkBXPBOl3ebzdab-KTDaV83V1R-FgVPR4RCSNjkD5fU6HMXqydDkQffRvUsIc-tLZCUKxXWxKsvq6Ea2g91X_oW_3HYD2L8BJ6nmK3l1NnmLjtPY_OFVAk6qEER0Ko5OzWf3QUj8A92MDkM6KxO7egNY8Vc8&state=294NFN5ZV37b9RcvnUeBUWq8e46iLjMc',\\n 'REMOTE_ADDR': '127.0.0.1',\\n 'REMOTE_PORT': '',\\n 'REQUEST_METHOD': 'GET',\\n 'REQUEST_URI': '/complete/facebook?redirect_state=294NFN5ZV37b9RcvnUeBUWq8e46iLjMc&code=AQDugVJPK8MPEwzVDk4eYxJkKl-qxu_gRYterRQjbng_CoPNR4vfq5a9ry-gDo_7LwbFiwDSkFc635MV5PeOiasAhORgiUYDiZ7AUcq7oMsQh96CdAWuVMkhd_hKsTlX52RfmiDgmh7Bpj1-Q0t3KIbhYHFlVnmkWivX95PpkBXPBOl3ebzdab-KTDaV83V1R-FgVPR4RCSNjkD5fU6HMXqydDkQffRvUsIc-tLZCUKxXWxKsvq6Ea2g91X_oW_3HYD2L8BJ6nmK3l1NnmLjtPY_OFVAk6qEER0Ko5OzWf3QUj8A92MDkM6KxO7egNY8Vc8&state=294NFN5ZV37b9RcvnUeBUWq8e46iLjMc',\\n u'SCRIPT_NAME': u'',\\n 'SERVER_NAME': 'www.mysite.com',\\n 'SERVER_PORT': '80',\\n 'SERVER_PROTOCOL': 'HTTP/1.0',\\n 'UWSGI_SCHEME': 'https',\\n 'uwsgi.node': 'ip-10-0-0-184',\\n 'uwsgi.version': '2.0.10',\\n 'wsgi.errors': <open file 'wsgi_errors', mode 'w' at 0x7fb1014b79c0>,\\n 'wsgi.file_wrapper': <built-in function uwsgi_sendfile>,\\n 'wsgi.input': <uwsgi._Input object at 0x7fb1006f3390>,\\n 'wsgi.multiprocess': True,\\n 'wsgi.multithread': False,\\n 'wsgi.run_once': False,\\n 'wsgi.url_scheme': 'https',\\n 'wsgi.version': (1, 0)}>\" |\n| callback | < function complete at 0x7fb1007d6578> |\n| wrapped_callback | < function complete at 0x7fb1007d6578> |\n| resolver | < RegexURLResolver 'mysite.urls' (None:None) ^/> |\n| callback_kwargs | {'backend': u'facebook'} |\n| response | None |\n| urlconf | 'mysite.urls' |\n\nCan sombody help me? What is causing this error?\n", "created_at": "2015-06-08T16:07:59Z"}, {"body": "Using `python setup.py develop` on a project.\n\neg:\n\n``` bash\ngit clone https://github.com/ninuxorg/nodeshot.git\ncd nodeshot\nmkvirtualenv nodeshot\npython setup.py develop\n```\n\nreturns:\n\n```\nNo eggs found in /.../python-social-auth-0.2.10/egg-dist-tmp-VceTwJ (setup script problem?)\nerror: Could not find required distribution python-social-auth==0.2.10\n```\n\nAnyone else getting this?\n", "created_at": "2015-06-06T18:32:33Z"}, {"body": "This question may just be a function of my inexperience:  The request to Spotify's '/authorize' endpoint seems to work - the user is presented with a modal explaining the scopes of the access for which the app would be authorized. But, then when the app's redirect uri is requested ('/completed/spotify/') this exception is raised:\n\n<code>\nAuthMissingParameter at /complete/spotify/\nMissing needed parameter state\nRequest Method: GET\nRequest URL:    http://127.0.0.1:8000/complete/spotify/\nDjango Version: 1.8.2\nException Type: AuthMissingParameter\nException Value:  \nMissing needed parameter state\nException Location: /Users/brandon/Envs/group_playlist_generator/lib/python2.7/site-packages/social/backends/oauth.py in validate_state, line 86\nPython Executable:  /Users/brandon/Envs/group_playlist_generator/bin/python\nPython Version: 2.7.9\nPython Path:  \n['/Users/brandon/dev/group_playlist_generator',\n '/Users/brandon/Envs/group_playlist_generator/lib/python27.zip',\n '/Users/brandon/Envs/group_playlist_generator/lib/python2.7',\n '/Users/brandon/Envs/group_playlist_generator/lib/python2.7/plat-darwin',\n '/Users/brandon/Envs/group_playlist_generator/lib/python2.7/plat-mac',\n '/Users/brandon/Envs/group_playlist_generator/lib/python2.7/plat-mac/lib-scriptpackages',\n '/Users/brandon/Envs/group_playlist_generator/lib/python2.7/lib-tk',\n '/Users/brandon/Envs/group_playlist_generator/lib/python2.7/lib-old',\n '/Users/brandon/Envs/group_playlist_generator/lib/python2.7/lib-dynload',\n '/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7',\n '/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin',\n '/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk',\n '/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac',\n '/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages',\n '/Users/brandon/Envs/group_playlist_generator/lib/python2.7/site-packages']\n</code>\n\n I read through relevant parts of PSA's source code but I do not understand how this 'state' parameter gets passed around between Spotify and the app. I see this param added to the original request to Spotify but I am not sure how to ensure it gets passed back to the redirect URI and/or if there are other considerations regarding 'state' such as storing it somewhere. Any advice is welcome.\n", "created_at": "2015-06-04T01:25:48Z"}, {"body": "I wonder if social-auth could support Atlassian crowd? or if this is not in its charter?\n", "created_at": "2015-06-03T15:49:33Z"}, {"body": "Fixes #623, all tests pass in tox.\n", "created_at": "2015-06-01T11:11:00Z"}, {"body": "I'm using Flask-SQLAlchemy, Python-Social-Auth and Py.test.  \n\nWhen I run the tests I get a InvalidRequestError with the message: `Implicitly combining column social_auth_usersocialauth.uid with column social_auth_usersocialauth.uid under attribute 'uid'.  Please configure one or more attributes for these same-named columns explicitly.`\n\nI setup a test repo to replicate the issue: https://github.com/benregn/flask-python-social-auth\n\nExample of a traceback:\n\n```\n    @pytest.yield_fixture(scope='function')\n    def app():\n        \"\"\"Flask app fixture.\"\"\"\n>       _app = create_app(TestConfig)\n\ntests/conftest.py:14:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nflask_social_auth/app.py:22: in create_app\n    register_extensions(app)\nflask_social_auth/app.py:36: in register_extensions\n    init_social(app, db.session)\n../../.virtualenvs/flask-social-auth/lib/python3.4/site-packages/social/apps/flask_app/default/models.py:72: in init_social\n    UserSocialAuth.uid = Column(String(UID_LENGTH))\n../../.virtualenvs/flask-social-auth/lib/python3.4/site-packages/sqlalchemy/ext/declarative/api.py:59: in __setattr__\n    _add_attribute(cls, key, value)\n../../.virtualenvs/flask-social-auth/lib/python3.4/site-packages/sqlalchemy/ext/declarative/base.py:608: in _add_attribute\n    cls.__mapper__.add_property(key, value)\n../../.virtualenvs/flask-social-auth/lib/python3.4/site-packages/sqlalchemy/orm/mapper.py:1736: in add_property\n    self._configure_property(key, prop, init=self.configured)\n../../.virtualenvs/flask-social-auth/lib/python3.4/site-packages/sqlalchemy/orm/mapper.py:1525: in _configure_property\n    prop = self._property_from_column(key, prop)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Mapper at 0x10d295358; UserSocialAuth>, key = 'uid', prop = <ColumnProperty at 0x10d2e5af0; uid>\n\n    def _property_from_column(self, key, prop):\n        \"\"\"generate/update a :class:`.ColumnProprerty` given a\n            :class:`.Column` object. \"\"\"\n\n        # we were passed a Column or a list of Columns;\n        # generate a properties.ColumnProperty\n        columns = util.to_list(prop)\n        column = columns[0]\n        if not expression._is_column(column):\n            raise sa_exc.ArgumentError(\n                \"%s=%r is not an instance of MapperProperty or Column\"\n                % (key, prop))\n\n        prop = self._props.get(key, None)\n\n        if isinstance(prop, properties.ColumnProperty):\n            if (\n                not self._inherits_equated_pairs or\n                (prop.columns[0], column) not in self._inherits_equated_pairs\n            ) and \\\n                    not prop.columns[0].shares_lineage(column) and \\\n                    prop.columns[0] is not self.version_id_col and \\\n                    column is not self.version_id_col:\n                warn_only = prop.parent is not self\n                msg = (\"Implicitly combining column %s with column \"\n                       \"%s under attribute '%s'.  Please configure one \"\n                       \"or more attributes for these same-named columns \"\n                       \"explicitly.\" % (prop.columns[-1], column, key))\n                if warn_only:\n                    util.warn(msg)\n                else:\n>                   raise sa_exc.InvalidRequestError(msg)\nE                   sqlalchemy.exc.InvalidRequestError: Implicitly combining column social_auth_usersocialauth.uid with column social_auth_usersocialauth.uid under attribute 'uid'.  Please configure one or more attributes for these same-named columns explicitly.\n```\n\nI have been trying to solve this but to no avail.  I'm not particularly experienced with SQLAlchemy, might be the reason for my inability to solve this. \n", "created_at": "2015-05-31T15:03:29Z"}, {"body": "$ python manage.py runserver\nTraceback (most recent call last):\n  File \"manage.py\", line 26, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/core/management/**init**.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/core/management/**init**.py\", line 312, in execute\n    django.setup()\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/**init**.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/django/apps/config.py\", line 198, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/importlib/**init**.py\", line 109, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 2254, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 2226, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/social/apps/django_app/default/models.py\", line 9, in <module>\n    from social.storage.django_orm import DjangoUserMixin, \\\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/social/storage/django_orm.py\", line 5, in <module>\n    from social.storage.base import UserMixin, AssociationMixin, NonceMixin, \\\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/social/storage/base.py\", line 12, in <module>\n    from openid.association import Association as OpenIdAssociation\n  File \"/Users/kyle/projects/speakers/env/lib/python3.4/site-packages/openid/__init__.py\", line 52, in <module>\n    if len(version_info) != 3:\nTypeError: object of type 'map' has no len()\n\nPython 3.4\nPSA 0.2.10\n", "created_at": "2015-05-27T16:13:10Z"}, {"body": "This adds Azure Active Directory support (OAuth2) protocol to python-social-auth. This PR also contains the unit test cases and docs for this support.\n", "created_at": "2015-05-26T18:08:43Z"}, {"body": "Hi,\n\nI am using custom user model and keep getting the following error:\n\n```\nDjango Version: 1.8.2\nException Type: ValueError\nException Value:    \nCannot assign \"'38ce3451a9d68210ad038b09fb29b0df7b58e46a'\": \"UserSocialAuth.user\" must be a \"MyUser\" instance.\nException Location: C:\\Users\\Ohm\\Desktop\\app_virt\\lib\\site-packages\\django\\db\\models\\fields\\related.py in __set__, line 627\nPython Executable:  C:\\Users\\Ohm\\Desktop\\app_virt\\Scripts\\python.exe\nPython Version: 2.7.9\n```\n\nMy setttings in `settings.py` are:\n\n```\nAUTH_USER_MODEL = 'authentication.MyUser'\n\nSOCIAL_AUTH_USER_MODEL = AUTH_USER_MODEL\n```\n\nCould somebody spot the issue? Thank you.\n", "created_at": "2015-05-26T12:19:17Z"}, {"body": "Hi,\n\nThis adds a basic backend for authentication with Microsoft Azure's Active Directory service, which is itself the engine behind Office365 authentication.\n\n(would it be ok to add a reference to https://github.com/SlateScience/ to the \"thanks\" file?)\n\nThanks,\nShai, for SlateScience.\n", "created_at": "2015-05-25T12:03:38Z"}, {"body": "This PR adds support for Azure Active Directory (OAuth2 protocol) to python-social-auth. Some test cases and documentation are also included, but if anything is missing or incorrect, please let us know.\n", "created_at": "2015-05-23T17:59:01Z"}, {"body": "Hi, \n\nI have this library successfully integrated in our project, using Facebook, Google, Outlook, Yahoo! and Linkedin as backends. But since some weeks, I receive the following exception when trying to register via Yahoo! :\n\n```\n*raise DatabaseError(\"Save with update_fields did not affect any rows.\")*\n*DatabaseError: Save with update_fields did not affect any rows.*\n```\n\nIt seems that Django is trying to insert a user and in the same second is trying login a user (and updating its last_login field), so we face this race condition.\n\nThis error is documented in another authentication library as a bug, and another user marked it also as a bug in PSA -> https://github.com/pennersr/django-allauth/issues/576\n", "created_at": "2015-05-21T07:57:10Z"}, {"body": "Is it possible to use python_social_auth package without using any framework?\n", "created_at": "2015-05-20T19:37:18Z"}, {"body": "", "created_at": "2015-05-20T08:52:27Z"}, {"body": "According to\nhttps://wiki.fitbit.com/display/API/OAuth+1.0a+Authentication#OAuth1.0aAuthentication-Notes,\nthe base url for the oauth authroization page is\nhttps://www.fitbit.com, not https://api.fitbit.com. Soon they will\nredirect authorize requests to [api](api.fitbit.com) to [www](www.fitbit.com),\nwhich will increase page load time for end users\n", "created_at": "2015-05-20T01:52:10Z"}, {"body": "I'm adding python-social-auth to an existing django 1.8 app with a vanilla user model.  But when I do the initial migration I get a foreign key constraint error during the initial migration when it tries to add the foreign key to the auth.User table.  here's the details:\n\nThe generated SQL:\n\n```\nBEGIN;\nCREATE TABLE `social_auth_association` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `server_url` varchar(255) NOT NULL, `handle` varchar(255) NOT NULL, `secret` varchar(255) NOT NULL, `issued` integer NOT NULL, `lifetime` integer NOT NULL, `assoc_type` varchar(64) NOT NULL);\nCREATE TABLE `social_auth_code` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `email` varchar(75) NOT NULL, `code` varchar(32) NOT NULL, `verified` bool NOT NULL);\nCREATE TABLE `social_auth_nonce` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `server_url` varchar(255) NOT NULL, `timestamp` integer NOT NULL, `salt` varchar(65) NOT NULL);\nCREATE TABLE `social_auth_usersocialauth` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `provider` varchar(32) NOT NULL, `uid` varchar(255) NOT NULL, `extra_data` longtext NOT NULL, `user_id` integer NOT NULL);\nALTER TABLE `social_auth_usersocialauth` ADD CONSTRAINT `social_auth_usersocialauth_provider_2f763109e2c4a1fb_uniq` UNIQUE (`provider`, `uid`);\nALTER TABLE `social_auth_code` ADD CONSTRAINT `social_auth_code_email_75f27066d057e3b6_uniq` UNIQUE (`email`, `code`);\nALTER TABLE `social_auth_nonce` ADD CONSTRAINT `social_auth_nonce_server_url_36601f978463b4_uniq` UNIQUE (`server_url`, `timestamp`, `salt`);\nCREATE INDEX `social_auth_code_c1336794` ON `social_auth_code` (`code`);\nALTER TABLE `social_auth_usersocialauth` ADD CONSTRAINT `social_auth_usersociala_user_id_193b2d80880502b2_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`);\nCREATE INDEX `social_auth_usersocialauth_e8701ad4` ON `social_auth_usersocialauth` (`user_id`);\n\nCOMMIT;\n```\n\nThe output from the failed migration:\n\n```\nOperations to perform:\n  Target specific migration: 0001_initial, from default\nRunning migrations:\n  Rendering model states... DONE\n  Applying default.0001_initial...Traceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/core/management/__init__.py\", line 330, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/core/management/base.py\", line 390, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/core/management/base.py\", line 441, in execute\n    output = self.handle(*args, **options)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/core/management/commands/migrate.py\", line 221, in handle\n    executor.migrate(targets, plan, fake=fake, fake_initial=fake_initial)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 110, in migrate\n    self.apply_migration(states[migration], migration, fake=fake, fake_initial=fake_initial)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 147, in apply_migration\n    state = migration.apply(state, schema_editor)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/db/backends/base/schema.py\", line 91, in __exit__\n    self.execute(sql)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/db/backends/base/schema.py\", line 111, in execute\n    cursor.execute(sql, params)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return super(CursorDebugWrapper, self).execute(sql, params)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/db/utils.py\", line 97, in __exit__\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/django/db/backends/mysql/base.py\", line 124, in execute\n    return self.cursor.execute(query, args)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/MySQLdb/cursors.py\", line 205, in execute\n    self.errorhandler(self, exc, value)\n  File \"/Users/waters/Development/smcov/env/lib/python2.7/site-packages/MySQLdb/connections.py\", line 36, in defaulterrorhandler\n    raise errorclass, errorvalue\ndjango.db.utils.IntegrityError: (1215, 'Cannot add foreign key constraint')\n```\n\nI'm not sure if I'm doing something wrong or if it's a bug.  Any help is appreciated.\n", "created_at": "2015-05-19T02:19:57Z"}, {"body": "I tried to install Mailman 3 and its companions (Hyperkitty, Postorius) on a\nUbuntu 14.04.2 LTS using the mailman-bundler. I followed the docs:\nhttp://mailman-bundler.readthedocs.org/en/latest/\n\nIt fails while trying to install 'python-social-aut':\n\n(venv)mailman@jiffy02:~/mailman-bundler$ buildout\nGetting distribution for 'python-social-auth>=0.2.3'.\nNo eggs found in\n/tmp/easy_install-LK6bYy/python-social-auth-0.2.9/egg-dist-tmp-FzLeGP (setup\nscript problem?)\nWhile:\n  Installing mailman-web.\n  Getting distribution for 'python-social-auth>=0.2.3'.\nError: Couldn't install: python-social-auth 0.2.9\n\nI checked with the folks from mailman3 and they told me to file a bug here.\n", "created_at": "2015-05-18T12:41:40Z"}, {"body": "Hi,\n\nDjango 1.8 changed the default `max_length` for `EmailField` to 254. In response, python-social-auth added migration 0003_alter_email_max_length, which sets its own email field's length to 254. However, the email field itself does not have an explicit max_length specified, so on Django 1.7 (where the default `max_length` is still 75) Django issues this message (when running `migrate` and there are no other migrations to run):\n\n```\n  Your models have changes that are not yet reflected in a migration, and so won't be applied.\n  Run 'manage.py makemigrations' to make new migrations, and then re-run 'manage.py migrate' to apply them.\n```\n\nOf course, if you follow that advice, you get an automatic migration.\n\nProper fix, probably, is setting the `Code.email`'s length to 75 explicitly as long as Django 1.7 is supported (254 is also an option, but may be a problem if the value is then copied into other, default-lengthed, email fields).\n", "created_at": "2015-05-18T10:25:33Z"}, {"body": "Weixin is Tencent's icq, in China there are million's people use it.\n", "created_at": "2015-05-17T07:44:24Z"}, {"body": "`examples/django_example/requirements.txt` say django>=1.4, but `example/app/models.py` import line `from django.contrib.auth.models import AbstractUser` need django>=1.5\n", "created_at": "2015-05-17T04:35:23Z"}, {"body": "", "created_at": "2015-05-16T18:56:19Z"}, {"body": "VKontakte KEY_ID may be 'id' or 'user_id'\n\nbut def get_user_id(self, details, response) try to get response['uid']\nhttps://github.com/omab/python-social-auth/blob/master/social/backends/vk.py#L88\n\nKeyError: 'uid' raised.\n", "created_at": "2015-05-14T07:29:50Z"}, {"body": "Hi!\nHave error:\n\n```\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/usr/lib/python2.7/dist-packages/django/core/management/__init__.py\", line 399, in execute_from_command_line\n    utility.execute()\n  File \"/usr/lib/python2.7/dist-packages/django/core/management/__init__.py\", line 392, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/usr/lib/python2.7/dist-packages/django/core/management/base.py\", line 242, in run_from_argv\n    self.execute(*args, **options.__dict__)\n  File \"/usr/lib/python2.7/dist-packages/django/core/management/base.py\", line 280, in execute\n    translation.activate('en-us')\n  File \"/usr/lib/python2.7/dist-packages/django/utils/translation/__init__.py\", line 130, in activate\n    return _trans.activate(language)\n  File \"/usr/lib/python2.7/dist-packages/django/utils/translation/trans_real.py\", line 188, in activate\n    _active.value = translation(language)\n  File \"/usr/lib/python2.7/dist-packages/django/utils/translation/trans_real.py\", line 177, in translation\n    default_translation = _fetch(settings.LANGUAGE_CODE)\n  File \"/usr/lib/python2.7/dist-packages/django/utils/translation/trans_real.py\", line 159, in _fetch\n    app = import_module(appname)\n  File \"/usr/lib/python2.7/dist-packages/django/utils/importlib.py\", line 40, in import_module\n    __import__(name)\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/__init__.py\", line 17, in <module>\n    from social.strategies.utils import set_current_strategy_getter\n  File \"/usr/local/lib/python2.7/dist-packages/social/strategies/utils.py\", line 1, in <module>\n    from social.utils import module_member\n  File \"/usr/local/lib/python2.7/dist-packages/social/utils.py\", line 13, in <module>\n    from requests.packages.urllib3.poolmanager import PoolManager\nImportError: No module named packages.urllib3.poolmanager\n```\n", "created_at": "2015-05-12T19:44:10Z"}, {"body": "This is a SAML2 backend for python-social-auth. See discussion in the feature request issue #388\n\n**Multiple SAML Provider (IdP) Support**\nUnlike all of the other backends, this one can be configured to work with many identity providers (IdPs). For example, a University that belongs to a Shibboleth federation may support authentication via ~100 partner universities, making it impractical to include a separate `.py` file and backend class for each IdP.\n\nInstead, the IdP configuration is done via the new `SOCIAL_AUTH_SAML_ENABLED_IDPS` setting.\n\nIt should also work perfectly well with a single provider, and can be subclassed, e.g. for customization or if we wanted to add a separate class for something like OneLogin.\n\n**Dependency: python-saml**\nThis new backend depends on a patched version of https://github.com/onelogin/python-saml . The patches are currently undergoing review in [four separate PRs](https://github.com/onelogin/python-saml/pulls?q=is%3Apr+author%3Abradenmacdonald). One significant issue is that python-saml is currently compatible with python 2.7 only, but that will be changing in the near future (see discussion in #388).\n\nThis PR does add python-saml to the test requirement so that Travis CI can cover the new backend, but it does not add any new dependencies for just general use of python-social-auth, as I don't want users to have to install python-saml if they're not going to use this backend.\n\n**Notes**\n- It probably makes sense to wait until the patches to python-saml are merged before merging this, but I'm submitting this PR now to get feedback about the approach and put the code out there.\n- I have mostly been testing this with [TestShib](https://www.testshib.org/) so far, and I used a real SSO session recorded from TestShib to mock responses for one of the tests.\n---\n\nThis is a contribution from [edX](https://github.com/edx), developed by [OpenCraft](https://github.com/open-craft/) as part of bringing integrated SAML support to the edX platform, via a new python-social-auth SAML backend.\n", "created_at": "2015-05-12T05:55:51Z"}, {"body": "It appears that the session information is not attached to the request by the time the pipeline is executed despite the fact that the middleware order has session middleware first.\n\nThis is a problem in that some custom pipelines need that information to operate correctly.\n", "created_at": "2015-05-11T20:10:58Z"}, {"body": "Python 3.4\n", "created_at": "2015-05-11T05:20:10Z"}, {"body": "The changelog should give a short summary of what has happened feature-wise and bug-wise between versions, to assist upgrading. The current changelog is way too verbose and makes it way too tedious to figure out whether it's safe to upgrade or not. I was just wondering what major changes had occured between 0.1.24 and the latest version, that necessitated reading through 1071 lines of changelog, or ~300 commit messages, most of which doesn't contain any valuable information.\n\nI get that it's a bit more work to actually write a proper changelog between releases, but it increases the usability of the library very much. \n\nThank you for an otherwise excellent library!\n", "created_at": "2015-05-10T23:04:44Z"}, {"body": "This patch allow to call the redirection url (LOGIN_REDIRECT_URL) with parameters that can be for example computed in the pipeline.\nAllowed parameters are defined in the settings file with LOGIN_REDIRECT_URL_PARAMETER = ['param1', 'param2']\n", "created_at": "2015-05-09T08:40:27Z"}, {"body": "Hello, \n\nHere is my dependencies : \n\n```\nweb.py==0.37\nsqlalchemy==1.0.1\npython-social-auth==0.2.7\njinja2==2.7.3\n```\n\nI just implement the example provided in the source for a web.py integration and test it with a Facebook oauth2 provider that's work before with a builtin connector.\n\nHere is the main part code of main.py :\n\n```\nweb.config[setting_name('USER_MODEL')] = 'model.People'\n\nimport model \n\nweb.config[setting_name('LOGIN_REDIRECT_URL')] = '/done/'\nweb.config[setting_name('NEW_ASSOCIATION_REDIRECT_URL')] = '/done/'\n\nweb.config[setting_name('FACEBOOK_KEY')] = 'XXXXX'\nweb.config[setting_name('FACEBOOK_SECRET')] = 'XXXXX'\nweb.config[setting_name('FACEBOOK_SCOPE')] = ['public_profile','email','user_friends','user_about_me','user_hometown','user_location']\nweb.config[setting_name('AUTHENTICATION_BACKENDS')] = (\n    'social.backends.facebook.Facebook2OAuth2',\n)\nurls = (\n    '^/$', 'main',\n    '^/done/$', 'done',\n    '', social_app.app_social\n)\n\nengine = create_engine(SQL_URI, echo=DEBUG_MODE, encoding='utf-8')\n\nrender = render_jinja('social_auth_templates/')\n\n\nclass main(object):\n    def GET(self):\n        return render.home()\n\n\nclass done(social_app.BaseViewClass):\n    def GET(self):\n        user = self.get_current_user()\n        return render.done(user=user, backends=backends(user))\n\n\ndef load_sqla(handler):\n    web.ctx.orm = scoped_session(sessionmaker(bind=engine))\n    try:\n        return handler()\n    except web.HTTPError:\n        web.ctx.orm.commit()\n        raise\n    except:\n        web.ctx.orm.rollback()\n        raise\n    finally:\n        web.ctx.orm.commit()\n        # web.ctx.orm.expunge_all()\n\n\nSession = sessionmaker(bind=engine)\nSession.configure(bind=engine)\n\napp = web.application(urls, locals())\napp.add_processor(load_sqla)\n\nweb.web_session = web.session.Session(app, web.session.DiskStore('/tmp/sessions'))\nweb.db_session = Session()\n\n```\n\nWhen I click on the Facebook link, the redirections works to my website, but I've got the Exception bellow : \n\n```\n127.0.0.1:56288 - - [09/May/2015 10:22:04] \"HTTP/1.1 GET /login/facebook/\" - 303 See Other\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/web.py-0.37-py2.7.egg/web/application.py\", line 239, in process\n    return self.handle()\n  File \"/Library/Python/2.7/site-packages/web.py-0.37-py2.7.egg/web/application.py\", line 230, in handle\n    return self._delegate(fn, self.fvars, args)\n  File \"/Library/Python/2.7/site-packages/web.py-0.37-py2.7.egg/web/application.py\", line 420, in _delegate\n    return handle_class(cls)\n  File \"/Library/Python/2.7/site-packages/web.py-0.37-py2.7.egg/web/application.py\", line 396, in handle_class\n    return tocall(*args)\n  File \"/Library/Python/2.7/site-packages/python_social_auth-0.2.7-py2.7.egg/social/apps/webpy_app/app.py\", line 52, in GET\n    return self._complete(backend, *args, **kwargs)\n  File \"/Library/Python/2.7/site-packages/python_social_auth-0.2.7-py2.7.egg/social/apps/webpy_app/utils.py\", line 43, in wrapper\n    return func(self, backend, *args, **kwargs)\n  File \"/Library/Python/2.7/site-packages/python_social_auth-0.2.7-py2.7.egg/social/apps/webpy_app/app.py\", line 62, in _complete\n    user=self.get_current_user(), *args, **kwargs\n  File \"/Library/Python/2.7/site-packages/python_social_auth-0.2.7-py2.7.egg/social/actions.py\", line 43, in do_complete\n    user = backend.complete(user=user, *args, **kwargs)\n  File \"/Library/Python/2.7/site-packages/python_social_auth-0.2.7-py2.7.egg/social/backends/base.py\", line 40, in complete\n    return self.auth_complete(*args, **kwargs)\n  File \"/Library/Python/2.7/site-packages/python_social_auth-0.2.7-py2.7.egg/social/utils.py\", line 202, in wrapper\n    return func(*args, **kwargs)\n  File \"/Library/Python/2.7/site-packages/python_social_auth-0.2.7-py2.7.egg/social/backends/facebook.py\", line 71, in auth_complete\n    state = self.validate_state()\n  File \"/Library/Python/2.7/site-packages/python_social_auth-0.2.7-py2.7.egg/social/backends/oauth.py\", line 88, in validate_state\n    raise AuthStateMissing(self, 'state')\nAuthStateMissing: Session value state missing.\n```\n\nI found in other issues that this error is due to a lack of session persistence of the state, actually when I unpick the data store in file session this property is not set.\n\nWhat did I miss ? \n", "created_at": "2015-05-09T08:31:40Z"}, {"body": "Hey so I'm using your excellent project with the use case described here:\n\nhttp://psa.matiasaguirre.net/docs/use_cases.html#signup-by-oauth-access-token\n\nDuring the execution of the pipeline I have access to the `new_association` kwarg, is there any way I can access that when using the above use case, that is, in the view? I'd like to be able to tell the client that this is a new user. Thanks for your help!\n", "created_at": "2015-05-08T21:08:26Z"}, {"body": "I got wrong resolved urls while using python social auth - they are without trailing slash in the end. I got realized, that it has already been fixed in master branch with `SOCIAL_AUTH_TRAILING_SLASH` parameter, but last stable version on pypi is broken. When those fixes would be on pypi?\n", "created_at": "2015-05-06T07:12:36Z"}, {"body": "Hi! I have updated to last version of python-social-auth (0.2.7) and I found that the previosly existing migration `0002_auto_20141123_1349` is not exists (seems it is replaced by `0002_add_related_name`).\n\nBut on my applications using python-social-auth have the previous migration already applied, that causes this situation:\n\n```\n$ python manage.py migrate -l\n[...]\ndefault\n [X] 0001_initial\n [ ] 0002_add_related_name\n [X] 0002_auto_20141123_1349\n[...]\n```\n\n```\n$ python manage.py migrate\nCommandError: Conflicting migrations detected (0002_auto_20141123_1349, 0002_add_related_name in default).\nTo fix them run 'python manage.py makemigrations --merge'\n```\n\nIndependently of the automatic recommendation of django for fix this issue, it seems a very wrong approach renaming or replacing migrations when you software is used by other people :(\n\nWhat is the recommended way to handle this situation? \n", "created_at": "2015-05-03T13:33:22Z"}, {"body": "Following [instructions about Google refresh_token](http://psa.matiasaguirre.net/docs/backends/google.html#refresh-tokens), I have this in my django app settings.py:\n\nSOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['https://www.googleapis.com/auth/calendar']\nSOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_ARGUMENTS = {'access_type': 'offline'}\nSOCIAL_AUTH_GOOGLE_PLUS_AUTH_EXTRA_ARGUMENTS = {'access_type': 'offline'}\n\nBut I'm not getting a refresh_token in the _User social auth_ table, only token_type, access_token, expires. Any tip ?\n\nI'm not using Google+, but just put the extra line to follow your documentation.\n", "created_at": "2015-05-02T09:37:10Z"}, {"body": "Simple documentation only patch.\n", "created_at": "2015-05-02T08:54:11Z"}, {"body": "I'm trying to get the current user object in my templates after successfully logging in with Twitter but it's not working. \n\nHere's what I'm trying to do in my templates:\n\nWelcome, {{ request.user.first_name }}\n\nI already have the \"django.core.context_processors.request\" on TEMPLATE_CONTEXT_PROCESSORS. I have already tested with no success putting it before and after:\n 'social.apps.django_app.context_processors.backends',\n 'social.apps.django_app.context_processors.login_redirect',\n\nAm I doing something wrong?\n", "created_at": "2015-05-01T14:34:58Z"}, {"body": "Hi!, i have two diferent user types in my app and i want to create the user profile in a custom pipeline or overriding user_details for example, but i need to know what type of user is login, how can i archive this? \nThanks!\n", "created_at": "2015-05-01T13:10:37Z"}, {"body": "Today I have received an email from the support team of \"Login with Amazon\" with the warning about that on May 25 any request to the service have to use TLS instead of SSL.\nIs python-social-auth ready for this?\nI'm using django-social-auth v0.7.28 and I'd like to know if I have to do something to be compatible with this Amazon update.\n\nThanks!\n", "created_at": "2015-04-30T17:04:28Z"}, {"body": "By default the library creates a **django.contrib.auth.models.User** instance for every new user logged over the social flows, so what i need to do is to get this **User** and set some specific roles.\n\nI was reading about the _pipelines_ and i think it's the way to achieve it, but i'am lost on how exactly because the **user** object passed through the args is not from the **auth.models** ! So how can i reach the **User** from the **auth.models** to change/add the roles?\n", "created_at": "2015-04-27T15:03:13Z"}, {"body": "With the new django-version python-social-auth should release its latest version with apps.py and also please change the name 'social' to some things else. Social is too common name and people might have an app installed with that name in their project.  \n", "created_at": "2015-04-27T05:33:54Z"}, {"body": "", "created_at": "2015-04-26T15:32:36Z"}, {"body": "Support for Login with ChangeTip, including docs.\n\nhttps://www.changetip.com/api\n", "created_at": "2015-04-20T18:27:45Z"}, {"body": "Authentication failed: Can't connect to HTTPS URL because the SSL module is not available.\n", "created_at": "2015-04-20T01:14:19Z"}, {"body": "After providing a login details to https://steamcommunity.com/openid/login I am greeted with the above error\nand \n\n[17/Apr/2015 15:37:31]\"GET /complete/steam?janrain_nonce=2015-04-17T15%3A37%3A24ZpHoSMm&openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&openid.mode=id_res&openid.op_endpoint=https%3A%2F%2Fsteamcommunity.com%2Fopenid%2Flogin&openid.claimed_id=http%3A%2F%2Fsteamcommunity.com%2Fopenid%2Fid%2F76561197987677089&openid.identity=http%3A%2F%2Fsteamcommunity.com%2Fopenid%2Fid%2F76561197987677089&openid.return_to=http%3A%2F%2F127.0.0.1%3A8000%2Fcomplete%2Fsteam%3Fjanrain_nonce%3D2015-04-17T15%253A37%253A24ZpHoSMm&openid.response_nonce=2015-04-17T15%3A37%3A29ZB8CUkdFNEUevNTWgl0J1wky5uXs%3D&openid.assoc_handle=1234567890&openid.signed=signed%2Cop_endpoint%2Cclaimed_id%2Cidentity%2Creturn_to%2Cresponse_nonce%2Cassoc_handle&openid.sig=2TwpLLGnlytadWvwpeWBbIXOqNM%3D HTTP/1.1\" 500 175831\n", "created_at": "2015-04-17T15:53:02Z"}, {"body": "Hi, I'm trying to authenticate in my web server from a SPA application using google+. I only have one problem when the user is authenticated. I don't get the extra data in social_auth_usersocialauth table, I mean I'm getting in the extra_data field\n\n``` javascript\n{\"code\": null, \"access_token\": \"\", \"expires\": null, \"user_id\": \"10181231375248323\"}.\n```\n\nthe way i'm doing it is the next. \n#### In my SPA i'm doing\n\n``` javascript\n gapi.auth.signIn({\n      \"clientid\" : \"872066331548-m61m12384ii2gs5b82tbb2qlipesum6ee.apps.googleusercontent.com\",\n      \"cookiepolicy\" : \"single_host_origin\",\n      \"callback\" : this.statusChangeCallback,\n      \"scope\": \"https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/plus.profile.emails.read\"\n    }); \n```\n#### In my web server\n\nthe endpoint receive the access_token in the request that was giving by spa and do authentication\n\n``` python\napi_view(['GET'])\n@permission_classes((permissions.AllowAny, ))\n@psa('social:complete')\ndef register_by_access_token(request, backend):\n\n    token = request.GET.get('access_token')\n    user = request.backend.do_auth(access_token=token, backend=backend)\n    if user:\n        login(request, user)\n        serialize = UserSerializer(user, context={'request': request})\n\n        return Response(serialize.data)\n    else:\n        return Response('ERROR')\n```\n#### and the settings are\n\n``` python\n\nAUTHENTICATION_BACKENDS = (\n\n    'social.backends.facebook.FacebookAppOAuth2',\n    'social.backends.facebook.FacebookOAuth2',\n    'social.backends.google.GooglePlusAuth'\n    'django.contrib.auth.backends.ModelBackend',\n)\nSOCIAL_AUTH_GOOGLE_PLUS_KEY = '872066331548-###################.apps.googleusercontent.com'\nSOCIAL_AUTH_GOOGLE_PLUS_SECRET = '######################'\n\nSOCIAL_AUTH_GOOGLE_PLUS_AUTH_EXTRA_ARGUMENTS = {\n      'access_type': 'offline',\n      'approval_prompt': 'auto'\n}\nSOCIAL_AUTH_GOOGLE_PLUS_SCOPE = [\n    'https://www.googleapis.com/auth/plus.login',\n    'https://www.googleapis.com/auth/plus.emails.read'\n]\nSOCIAL_AUTH_GOOGLE_PLUS_USE_UNIQUE_USER_ID = True\n\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    # 'social.pipeline.mail.mail_validation',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n\n    'social.pipeline.debug.debug'\n)\n```\n\nWhat i'm doing wrong??  i'm using the similar code to authenticate with facebook and the extra_data is completed. Some help is welcome. Thanks\n", "created_at": "2015-04-17T01:46:12Z"}, {"body": "After call clean function, the final_username maybe empty and  `storage.user.user_exists(username=final_username)` will return `False`, then the loop would be skipped.  \nFinally, the username would be the unclean name.\n", "created_at": "2015-04-16T09:50:06Z"}, {"body": "In https://github.com/omab/python-social-auth/blob/master/social/storage/base.py,  the `CLEAN_USERNAME_REGEX` maybe error.  \n\n```\nCLEAN_USERNAME_REGEX = re.compile(r'[^\\w.@+-_]+', re.UNICODE)\n```\n\nThe `-` in `[]` means range of characters, if we want to match literal `-`, we can escape it or put it in the end.\n\nThe correct expression is\n\n```\nCLEAN_USERNAME_REGEX = re.compile(r'[^\\w.@+_-]+', re.UNICODE)\n```\n\nor\n\n`CLEAN_USERNAME_REGEX = re.compile(r'[^\\w.@+\\-_]+', re.UNICODE)`\n\nref: https://docs.python.org/3.4/library/re.html#regular-expression-syntax\n", "created_at": "2015-04-16T09:16:20Z"}, {"body": "Django 1.8 starts to set max length of EmailField to 254.\n", "created_at": "2015-04-16T03:43:58Z"}, {"body": "I'm using **python 3.4**, **django 1.8** and when I try and connect via facebook I receive the following error (this was previously working for me until doing one of the recent upgrades):\n\n```\nFile \"/python3.4/site-packages/django/core/handlers/base.py\" in get_response\n  132.         response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/python3.4/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n  57.         response = view_func(request, *args, **kwargs)\nFile \"/python3.4/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n  58.         return view_func(*args, **kwargs)\nFile \"/python3.4/site-packages/social/apps/django_app/utils.py\" in wrapper\n  52.         return func(request, backend, *args, **kwargs)\nFile \"/python3.4/site-packages/social/apps/django_app/views.py\" in complete\n  28.         redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/python3.4/site-packages/social/actions.py\" in do_complete\n  40.         user = backend.complete(user=user, *args, **kwargs)\nFile \"/python3.4/site-packages/social/backends/base.py\" in complete\n  40.         return self.auth_complete(*args, **kwargs)\nFile \"/python3.4/site-packages/social/utils.py\" in wrapper\n  202.         return func(*args, **kwargs)\nFile \"/python3.4/site-packages/social/backends/facebook.py\" in auth_complete\n  78.          'code': self.data['code']\nFile \"/python3.4/site-packages/social/backends/base.py\" in get_json\n  229.         return self.request(url, *args, **kwargs).json()\nFile \"/python3.4/site-packages/requests/models.py\" in json\n  802.         return json.loads(self.text, **kwargs)\nFile \"/python3.4/site-packages/simplejson/__init__.py\" in loads\n  505.         return _default_decoder.decode(s)\nFile \"/python3.4/site-packages/simplejson/decoder.py\" in decode\n  370.         obj, end = self.raw_decode(s)\nFile \"/python3.4/site-packages/simplejson/decoder.py\" in raw_decode\n  400.         return self.scan_once(s, idx=_w(s, idx).end())\n\nException Type: JSONDecodeError at /complete/facebook\nException Value: Expecting value: line 1 column 1 (char 0)\n```\n\nFacebook correctly sends back the access token and expires time:\n\n```\naccess_token=some_correct_access_token&expires=5125437\n```\n\nHowever, once it hits the complete url, the error above appears.  I can't get beyond the following line in the `auth_complete` method:\n- https://github.com/omab/python-social-auth/blob/master/social/backends/facebook.py#L74\n\nThoughts?\n", "created_at": "2015-04-15T15:53:34Z"}, {"body": "This commit https://github.com/omab/python-social-auth/commit/f57e0caf4ec06f3b9a2367d9ff3897e2a3a71608 made trailing slashes optional.\nThe side effect of that is that the redirect_uri is created without a trailing slash.\nWith this change the standard Django APPEND_SLASH is checked when generating the redirect url.\n", "created_at": "2015-04-15T11:19:14Z"}, {"body": "Hello,\n\nthe latest packages uploaded to pypi.org as of 2015-04-13 is missing requirements.txt from the 'social/tests' directory which for some versions of pip means a failed package build.\n\nSorry if this isn't the most appropriate place to bring this up but the support link on the package page went nowhere useful.\n\nThanks for such a useful lib :)\n", "created_at": "2015-04-14T07:58:23Z"}, {"body": "I'm new to python social auth and am using django 1.6.6 and python social auth to provide login function.\n\nI use CustomUser to save the twitter user information and set\n\n> SOCIAL_AUTH_USER_MODEL = 'webservice.CustomUser'\n\nIt works fine when I login my website via twitter account,and I check the database,it saves the user information to both\n\n> default.user social auth Table\n\nand\n\n> webservice.CustomUser Table\n\nbut when I deploy it with apache, I cannot login with twitter account and it stays at the login page and then returns a error\n\n> AuthFailed at /login/twitter/\n> \n> Authentication failed: ('Connection aborted.', error(110, 'Connection timed out'))\n> \n> Request Method: GET\n> \n> Request URL: www.demodemo.com/login/twitter/?next=/ Django Version: 1.6.6\n> \n> Exception Type: AuthFailed\n> \n> Exception Value:\n> \n> Authentication failed: ('Connection aborted.', error(110, 'Connection timed out'))\n> \n> Exception Location: /usr/local/lib/python2.7/site-packages/social/backends/base.py in request, line 223\n> \n> Python Executable: /usr/bin/python\n> \n> Python Version: 2.7.8\n\nI did configure the .conf file well and when I test it locally I found that though I can login with twitter account successfully when I check the \"Network\" in the browser I still find a request hasn't been handled properly\n\n> http://test3.com:8000/complete/twitter/?redirect_state=eGnxBZnn1l4TTk5jUlqBy0BPZCZmL9sJ&oauth_token=una3ULjfWwDByegbn4qoKsxpHRCyGDdM&oauth_verifier=6SXp7uLxj7QhD29GP7LkuQt71xKmXZ4n\n> \n> status 302\n\nWhen I click the link the following error is returned\n\nactually I try to set the\n\n> MIDDLEWARE_CLASSES = (\n> 'myapp.middleware.SocialAuthExceptionMiddleware',\n> )\n> DEBUG = False\n\nbut I can ignore the error locally but when I deploy it with apache, it still doesn't work.\n\nAnyone know why those happened and how to solve this? Did I forget some configuration or do i need to add extra code to handle that?\n\n> AuthTokenError at /complete/twitter/\n> \n> Token error: Missing unauthorized token\n> \n> Request Method: GET\n> \n> Request URL: http://test3.com:8000/complete/twitter/?redirect_state=XoB4wH5a6EyJYTxywGYyYgMufR4W2pX8&oauth_token=dixi6oAsfMCBUGqP4KApQHe22h5vVBLz&oauth_verifier=0KSFg7WRocPpGNR3iwODA1pAwQZ88vbn\n> \n> Django Version: 1.6.6\n> \n> Exception Type: AuthTokenError\n> \n> Exception Value:\n> \n> Token error: Missing unauthorized token\n> \n> Exception Location: /usr/local/lib/python2.7/dist-packages/social/backends/oauth.py in get_unauthorized_token, line 202\n> \n> Python Executable: /usr/bin/python\n> \n> Python Version: 2.7.6\n> Environment:\n> \n> Request Method: GET\n> Request URL:  test3.com:8000/complete/twitter/?redirect_state=XoB4wH5a6EyJYTxywGYyYgMufR4W2pX8&oauth_token=dixi6oAsfMCBUGqP4KApQHe22h5vVBLz&oauth_verifier=0KSFg7WRocPpGNR3iwODA1pAwQZ88vbn\n> \n> Django Version: 1.6.6\n> Python Version: 2.7.6\n> Installed Applications:\n> ('twython',\n> 'djcelery',\n> 'rest_framework',\n> 'corsheaders',\n> 'oauth2_provider',\n> 'webservice',\n> 'suit',\n> 'south',\n> 'social.apps.django_app.default',\n> 'django.contrib.admin',\n> 'django.contrib.auth',\n> 'django.contrib.contenttypes',\n> 'django.contrib.sessions',\n> 'django.contrib.messages',\n> 'django.contrib.staticfiles')\n> Installed Middleware:\n> ('django.contrib.sessions.middleware.SessionMiddleware',\n> 'corsheaders.middleware.CorsMiddleware',\n> 'django.middleware.common.CommonMiddleware',\n> 'django.middleware.csrf.CsrfViewMiddleware',\n> 'django.contrib.auth.middleware.AuthenticationMiddleware',\n> 'django.contrib.messages.middleware.MessageMiddleware',\n> 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n> 'social.apps.django_app.middleware.SocialAuthExceptionMiddleware')\n> \n> Traceback:\n> File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\" in get_response\n> 1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n>    File \"/usr/local/lib/python2.7/dist-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n> 2.         response = view_func(request, _args, *_kwargs)\n>    File \"/usr/local/lib/python2.7/dist-packages/django/views/decorators/csrf.py\" in wrapped_view\n>    1.         return view_func(_args, *_kwargs)\n>       File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/utils.py\" in wrapper\n> 3.             return func(request, backend, _args, *_kwargs)\n>    File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/views.py\" in complete\n> 4.                        redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n>    File \"/usr/local/lib/python2.7/dist-packages/social/actions.py\" in do_complete\n> 5.         user = backend.complete(user=user, _args, *_kwargs)\n>    File \"/usr/local/lib/python2.7/dist-packages/social/backends/base.py\" in complete\n> 6.         return self.auth_complete(_args, *_kwargs)\n>    File \"/usr/local/lib/python2.7/dist-packages/social/backends/oauth.py\" in auth_complete\n> 7.         token = self.get_unauthorized_token()\n>    File \"/usr/local/lib/python2.7/dist-packages/social/backends/oauth.py\" in get_unauthorized_token\n> 8.             raise AuthTokenError(self, 'Missing unauthorized token')\n> \n> Exception Type: AuthTokenError at /complete/twitter/\n> Exception Value: Token error: Missing unauthorized token\n", "created_at": "2015-04-13T09:40:07Z"}, {"body": "So I updated my PSA since I was told we had made adjustments in relation to just some warnings coming around the bend with django 1.9 and then this happened so I wanted to drop it here in case it was of value. It appears something else has gone wrong:\n\n(athletesunited)JJs-MacBook-Pro:athletesunited JJZ$ python manage.py runserver localhost:8000\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/importlib/_bootstrap.py:321: RemovedInDjango19Warning: The utilities in django.db.models.loading are deprecated in favor of the new application loading system.\n  return f(_args, *_kwds)\n\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/django/core/management/**init**.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/django/core/management/**init**.py\", line 312, in execute\n    django.setup()\n  File \"/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/django/**init**.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/django/apps/config.py\", line 198, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/importlib/**init**.py\", line 109, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 2254, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 2226, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  File \"/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/social/apps/django_app/default/models.py\", line 9, in <module>\n    from social.storage.django_orm import DjangoUserMixin, \\\n  File \"/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/social/storage/django_orm.py\", line 5, in <module>\n    from social.storage.base import UserMixin, AssociationMixin, NonceMixin, \\\n  File \"/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/social/storage/base.py\", line 12, in <module>\n    from openid.association import Association as OpenIdAssociation\n  File \"/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/openid/__init__.py\", line 52, in <module>\n    if len(version_info) != 3:\nTypeError: object of type 'map' has no len()\n", "created_at": "2015-04-12T04:49:42Z"}, {"body": "In my project using Reddit OAuth2, I noticed that `user.email` was being set to an empty string every time a user logged in, after previously logging out or having their session expire. I'm not sure if this is the best fix, but it worked for me.\n", "created_at": "2015-04-11T10:32:50Z"}, {"body": "Hi \n\nI'm trying to implement custom email validation at the end of the pipeline with Django 1.7.4, using the same logic as for regular non-social user registrations:\n- Set user.is_active to false\n- Generate and send an email with an activation link\n- Redirect to success page where the user is logged in but not active, so the context can display the user email that has been captured.\n\nAt the end of the pipeline I have a validate partial function that does this:\n\n```\n@partial\ndef validate(strategy, details, user=None, is_new=False, *args, **kwargs):\nif user and is_new:\n\n    user.is_active = False\n    user.save()\n\n    username = user.username\n    email = user.email\n    salt = hashlib.sha1(str(random.random()).encode('utf-8')).hexdigest()[:5]            \n    activation_key = hashlib.sha1(str(salt + email).encode('utf-8')).hexdigest()            \n    key_expires = datetime.datetime.today() + datetime.timedelta(2)\n\n    new_profile = UserProfile(user=user, activation_key=activation_key, key_expires=key_expires)\n    new_profile.save()\n\n    email_subject = 'Account confirmation'\n    email_body = \"Hey %s, thanks for signing up. To activate your account, click this link within 48 hours %s%s\" % (username, site(strategy.request)['site_root'], reverse('users:confirm', args=[activation_key]))\n    send_mail(email_subject, email_body, settings.DEFAULT_FROM_EMAIL, [email], fail_silently=False)\n    return\n\nreturn\n```\n\nAnd in settings I have this:\n\n```\nSOCIAL_AUTH_INACTIVE_USER_LOGIN = True\nINACTIVE_USER_URL = '/signup/success/'\n```\n\nThe `INACTIVE_USER_URL` is being picked up, but the user is not logged in.\n\nAny idea why this wouldn't work as expected?\n\nThanks!\n\nRussell.\n", "created_at": "2015-04-10T16:43:45Z"}, {"body": "djangopackages.com still referes to the old project (django-social-auth)\n\nPlease update this page:\n\nhttps://www.djangopackages.com/grids/g/authentication/\n", "created_at": "2015-04-08T20:29:10Z"}, {"body": "I have upgraded my Django from 1.7 to 1.8 recently and I am getting some warnings regarding social auth.  I have gone through you issue list and found that you are saying that it is solved in #551 .So I have upgraded my Python social auth to latest one but warnings still remain as it is .\n\n```\n/home/path_to_project/lib/python3.4/site-packages/social/apps/django_app/default/models.py:29: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.UserSocialAuth doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class UserSocialAuth(models.Model, DjangoUserMixin):\n\n/home/path_to_project/lib/python3.4/site-packages/social/apps/django_app/default/models.py:67: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Nonce doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Nonce(models.Model, DjangoNonceMixin):\n\n/home/path_to_project/lib/python3.4/site-packages/social/apps/django_app/default/models.py:78: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Association doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Association(models.Model, DjangoAssociationMixin):\n\n/home/path_to_project/python3.4/site-packages/social/apps/django_app/default/models.py:91: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Code doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Code(models.Model, DjangoCodeMixin):\n\n```\n\n**Python social auth version**  -> python-social-auth==0.2.3\n", "created_at": "2015-04-08T10:05:07Z"}, {"body": "This will require to additionally install `wheel` and `twine` locally.\n", "created_at": "2015-04-06T16:55:45Z"}, {"body": "We used to be on Django-Social-Auth. Now we're trying to upgrade to Django 1.7 but are having problems with authenticating via GitHub. Error when returned back from GitHub upon successful authentication:\n\n```\nInternal Server Error: /auth/complete/github/ Traceback (most recent call last):\n\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 111, in get_response\n  response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 52, in _wrapped_view_func\n  response = view_func(request, *args, **kwargs)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view\n  return view_func(*args, **kwargs)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 52, in wrapper\n  return func(request, backend, *args, **kwargs)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 28, in complete\n  redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 40, in do_complete\n  user = backend.complete(user=user, *args, **kwargs)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/base.py\", line 40, in complete\n  return self.auth_complete(*args, **kwargs)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 379, in auth_complete\n  *args, **kwargs)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 387, in do_auth\n  return self.strategy.authenticate(*args, **kwargs)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/strategies/django_strategy.py\", line 71, in authenticate\n  return authenticate(*args, **kwargs)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/contrib/auth/__init__.py\", line 60, in authenticate\n  user = backend.authenticate(**credentials)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/base.py\", line 81, in authenticate\n  return self.pipeline(pipeline, *args, **kwargs)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/base.py\", line 84, in pipeline\n  out = self.run_pipeline(pipeline, pipeline_index, *args, **kwargs)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/base.py\", line 111, in run_pipeline\n  result = func(*args, **out) or {}\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/pipeline/social_auth.py\", line 86, in load_extra_data\n  extra_data = backend.extra_data(user, uid, response, details)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 43, in extra_data\n  data = super(OAuthAuth, self).extra_data(user, uid, response, details)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/base.py\", line 121, in extra_data\n  for entry in (self.EXTRA_DATA or []) + self.setting('EXTRA_DATA', []):\nTypeError: can only concatenate list (not \u201cbool\u201d) to list\n\nRequest repr(): <WSGIRequest path:/auth/complete/github/, GET:<QueryDict: {u'state': [u'fnyGJDktGigeUQqlSllTiLNUFr8jKUnW'], u'code': [u'dc690debe86c559bca72'], u'redirect_state': [u'fnyGJDktGigeUQqlSllTiLNUFr8jKUnW']}>, POST:<QueryDict: {}>, COOKIES:{'csrftoken': \u20186OHfGCD1zx2TWi2sV1ONte3af0kkCYi5\u2019,\n\n 'sessionid': 'thw20t3gsi335k38zd9pk243r28n2t6d'},\nMETA:{u'CSRF_COOKIE': u'6OHfGCD1zx2TWi2sV1ONte3af0kkCYi5',\n\n'HTTP_ACCEPT': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\n'HTTP_ACCEPT_ENCODING': 'gzip, deflate, sdch',\n'HTTP_ACCEPT_LANGUAGE': 'en-US,en;q=0.8',\n'HTTP_CONNECTION': 'close',\n'HTTP_CONNECT_TIME': '0',\n'HTTP_COOKIE': 'csrftoken=6OHfGCD1zx2TWi2sV1ONte3af0kkCYi5; sessionid=thw20t3gsi335k38zd9pk243r28n2t6d',\n'HTTP_HOST': 'www.djangopackages.com',\n'HTTP_REFERER': 'https://www.djangopackages.com/',\n'HTTP_TOTAL_ROUTE_TIME': '0',\n'HTTP_USER_AGENT': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.118 Safari/537.36',\n'HTTP_VIA': '1.1 vegur',\n'HTTP_X_FORWARDED_FOR': '45.50.46.168',\n'HTTP_X_FORWARDED_PORT': '443',\n'HTTP_X_FORWARDED_PROTO': 'https',\n'HTTP_X_REQUEST_ID': 'db9da29e-5404-4ff1-956d-63e81e20e201',\n'HTTP_X_REQUEST_START': '1428290505490',\n'PATH_INFO': u'/auth/complete/github/',\n'QUERY_STRING': 'code=dc690debe86c559bca72&redirect_state=fnyGJDktGigeUQqlSllTiLNUFr8jKUnW&state=fnyGJDktGigeUQqlSllTiLNUFr8jKUnW',\n'RAW_URI': '/auth/complete/github/?code=dc690debe86c559bca72&redirect_state=fnyGJDktGigeUQqlSllTiLNUFr8jKUnW&state=fnyGJDktGigeUQqlSllTiLNUFr8jKUnW',\n'REMOTE_ADDR': '45.50.46.168',\n'REMOTE_PORT': '80',\n'REQUEST_METHOD': 'GET',\n'SCRIPT_NAME': u'',\n'SERVER_NAME': 'www.djangopackages.com',\n'SERVER_PORT': '80',\n'SERVER_PROTOCOL': 'HTTP/1.1',\n'SERVER_SOFTWARE': 'gunicorn/0.14.2',\n'appenlight.client': <appenlight_client.client.Client object at 0x3c8a390>,\n'appenlight.post_vars': <QueryDict: {}>,\n'appenlight.request_id': '44348eb6-edfa-4be8-8021-c0d04dd4b127',\n'appenlight.view_name': 'django_app/views:complete.GET',\n'gunicorn.socket': <socket._socketobject object at 0x3c77130>,\n'webob._parsed_cookies': ({u'csrftoken': u'6OHfGCD1zx2TWi2sV1ONte3af0kkCYi5',\n                           u'sessionid': u'thw20t3gsi335k38zd9pk243r28n2t6d'},\n                          'csrftoken=6OHfGCD1zx2TWi2sV1ONte3af0kkCYi5; sessionid=thw20t3gsi335k38zd9pk243r28n2t6d'),\n'webob._parsed_query_vars': (GET([(u'code', u'dc690debe86c559bca72'), (u'redirect_state', u'fnyGJDktGigeUQqlSllTiLNUFr8jKUnW'), (u'state', u'fnyGJDktGigeUQqlSllTiLNUFr8jKUnW')]),\n                             'code=dc690debe86c559bca72&redirect_state=fnyGJDktGigeUQqlSllTiLNUFr8jKUnW&state=fnyGJDktGigeUQqlSllTiLNUFr8jKUnW'),\n'wsgi.errors': <open file '<stderr>', mode 'w' at 0x7f486d8db1e0>,\n'wsgi.file_wrapper': <class gunicorn.http.wsgi.FileWrapper at 0x2819808>,\n'wsgi.input': <gunicorn.http.body.Body object at 0x3c81190>,\n'wsgi.multiprocess': True,\n'wsgi.multithread': False,\n'wsgi.run_once': False,\n'wsgi.url_scheme': 'http',\n'wsgi.version': (1, 0)}>\n```\n\nConfiguration is at: https://github.com/pydanny/djangopackages/blob/fa7dd2f08f0fcc8d99ed2c3273828e9f57069823/settings/base.py#L224-242\n", "created_at": "2015-04-06T03:27:13Z"}, {"body": "I just thought I should leave some warnings I got from Django because of moving to 1.8:\n\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/social/apps/django_app/default/models.py:29: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.UserSocialAuth doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class UserSocialAuth(models.Model, DjangoUserMixin):\n\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/social/apps/django_app/default/models.py:67: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Nonce doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Nonce(models.Model, DjangoNonceMixin):\n\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/social/apps/django_app/default/models.py:78: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Association doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Association(models.Model, DjangoAssociationMixin):\n\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/social/apps/django_app/default/models.py:91: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Code doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Code(models.Model, DjangoCodeMixin):\n\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/importlib/_bootstrap.py:321: RemovedInDjango19Warning: django.utils.importlib will be removed in Django 1.9.\n  return f(_args, *_kwds)\n\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/importlib/_bootstrap.py:321: RemovedInDjango19Warning: The django.forms.util module has been renamed. Use django.forms.utils instead.\n  return f(_args, *_kwds)\n\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/importlib/_bootstrap.py:321: RemovedInDjango19Warning: django.contrib.contenttypes.generic is deprecated and will be removed in Django 1.9. Its contents have been moved to the fields, forms, and admin submodules of django.contrib.contenttypes.\n  return f(_args, *_kwds)\n\n/Users/JJZ/Dropbox/AU/AUrepo/athletesunited/athletesunited/comments/models.py:19: RemovedInDjango19Warning: Model class athletesunited.comments.models.Comment doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Comment(models.Model):\n\n/Users/JJZ/Dropbox/AU/AUrepo/athletesunited/athletesunited/comments/models.py:134: RemovedInDjango19Warning: Model class athletesunited.comments.models.CommentFlag doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class CommentFlag(models.Model):\n\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/importlib/_bootstrap.py:321: RemovedInDjango19Warning: The utilities in django.db.models.loading are deprecated in favor of the new application loading system.\n  return f(_args, *_kwds)\n\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/social/apps/django_app/default/models.py:29: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.UserSocialAuth doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class UserSocialAuth(models.Model, DjangoUserMixin):\n\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/social/apps/django_app/default/models.py:67: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Nonce doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Nonce(models.Model, DjangoNonceMixin):\n\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/social/apps/django_app/default/models.py:78: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Association doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Association(models.Model, DjangoAssociationMixin):\n\n/Users/JJZ/.virtualenvs/athletesunited/lib/python3.4/site-packages/social/apps/django_app/default/models.py:91: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Code doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Code(models.Model, DjangoCodeMixin):\n\nI assume contributers are already aware because it's just a natural shift to Django 1.8 that caused these Django 1.9 warnings.\n\nThanks for your consideration.\n\nJJ\n", "created_at": "2015-04-06T00:29:05Z"}, {"body": "- Allow inactive users to login, this is controlled by the\n  `SOCIAL_AUTH_INACTIVE_USER_LOGIN` setting.\n\nI want to be able to allow inactive users to be logged in.  I have written a middleware that redirects these users to a reactivation page that currently requires the user to be logged in to work. \n\nI modified the `social.actions.do_complete` method so it would login inactive users depending on the setting `SOCIAL_AUTH_INACTIVE_USER_LOGIN`, which defaults to `False`. \n", "created_at": "2015-04-03T19:28:03Z"}, {"body": "", "created_at": "2015-04-03T16:53:56Z"}, {"body": "The tarball uploaded to PyPI via the setup.py sdist command is missing some of the content in the repo because there's no `MANIFEST.in` file. This content includes the `docs` and `examples` subfolders, the `LICENSE` and `Changelog` files and the `requirement-*.txt` files.\nHere's the `MANIFEST.in` file that you can add to include them:\n\n```\ninclude *.txt Changelog LICENSE Makefile\ninclude docs/conf.py\nrecursive-include docs *.rst\ngraft examples\n```\n\nThis will make packager's life much easier as the tarball will contain all we need.\n", "created_at": "2015-04-03T16:05:07Z"}, {"body": "The documentation [recommends](http://psa.matiasaguirre.net/docs/pipeline.html#email-validation) creating a completion URL for email validation with\n\n``` python\nfrom flask import url_for\nurl = url_for('social.complete', backend=strategy.backend_name,\n              _external=True) + '?verification_code=' + code\n```\n\nbut you get a vague exception if the link isn't clicked within the same session.  Adding an email query parameter fixes this.  My working code looks like\n\n``` python\nfrom flask import url_for\nurl = url_for('social.complete', backend=strategy.backend_name,\n              verification_code=code.code, email=code.email,\n              _external=True)\n```\n", "created_at": "2015-04-03T13:37:08Z"}, {"body": "I've got a problem with twitter.\n\nFor some reason it's response doesn't contain email address ({\"email\": \"\"}), so this is making mongoengine validation for EmailField sick.\n\nQuick solution to this would be changing EmailField in demo app to StringField.\n", "created_at": "2015-04-03T00:07:39Z"}, {"body": "I am using Custom user model for usig email authentication.My model looks like : \n\n```\nclass User(AbstractBaseUser, PermissionsMixin):\n    pk_user = UUIDField(auto=True, primary_key=True, serialize=True, hyphenate=True)\n    email = models.EmailField(_('email address'), max_length=254, unique=True)\n    first_name = models.CharField(_('first name'), max_length=30, blank=True)\n    last_name = models.CharField(_('last name'), max_length=30, blank=True)\n    is_staff = models.BooleanField(_('staff status'), default=False,\n        help_text=_('Designates whether the user can log into this admin '\n                    'site.'))\n    is_active = models.BooleanField(_('active'), default=True,\n        help_text=_('Designates whether this user should be treated as '\n                    'active. Unselect this instead of deleting accounts.'))\n    date_joined = models.DateTimeField(_('date joined'), default=timezone.now)\n\n    objects = CustomUserManager()\n\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = []\n\n```\n\nNow If I am using facebook then I am getting `'username' is an invalid keyword argument for this function` error and for twitter `email must be set` error .\n\nThese error comes because I have removed usern ame field and email field is required . \n\nI have defined extra settings to overcome above issues but nothing works : \n\n```\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\nSOCIAL_AUTH_USER_MODEL = 'accounts.User'\nSOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = True\n```\n", "created_at": "2015-04-02T13:41:55Z"}, {"body": "Currently you get this very cryptic traceback:\n\n```\nTraceback (most recent call last):\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 111, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/django/views/generic/base.py\", line 69, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/rest_framework/views.py\", line 452, in dispatch\n    response = self.handle_exception(exc)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/rest_framework/views.py\", line 449, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/rest_framework/decorators.py\", line 50, in handler\n    return func(*args, **kwargs)\n  File \"/apps/api/code/api/latest/views.py\", line 1225, in api_social_auth\n    user = request.backend.do_auth(token, details=details, request=request)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/social/backends/oauth.py\", line 192, in do_auth\n    data = self.user_data(access_token)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/social/backends/twitter.py\", line 37, in user_data\n    auth=self.oauth_auth(access_token)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/social/backends/base.py\", line 228, in get_json\n    return self.request(url, *args, **kwargs).json()\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/social/backends/base.py\", line 221, in request\n    response = request(method, url, *args, **kwargs)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/requests/api.py\", line 50, in request\n    response = session.request(method=method, url=url, **kwargs)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/requests/sessions.py\", line 450, in request\n    prep = self.prepare_request(req)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/requests/sessions.py\", line 381, in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/requests/models.py\", line 308, in prepare\n    self.prepare_auth(auth, url)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/requests/models.py\", line 495, in prepare_auth\n    r = auth(self)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/requests_oauthlib/oauth1_auth.py\", line 87, in __call__\n    unicode(r.url), unicode(r.method), None, r.headers)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/oauthlib/oauth1/rfc5849/__init__.py\", line 293, in sign\n    request.oauth_params.append(('oauth_signature', self.get_oauth_signature(request)))\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/oauthlib/oauth1/rfc5849/__init__.py\", line 128, in get_oauth_signature\n    uri, headers, body = self._render(request)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/oauthlib/oauth1/rfc5849/__init__.py\", line 199, in _render\n    headers = parameters.prepare_headers(request.oauth_params, request.headers, realm=realm)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/oauthlib/oauth1/rfc5849/utils.py\", line 31, in wrapper\n    return target(params, *args, **kwargs)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/oauthlib/oauth1/rfc5849/parameters.py\", line 57, in prepare_headers\n    escaped_value = utils.escape(value)\n  File \"/apps/api/venv/local/lib/python2.7/site-packages/oauthlib/oauth1/rfc5849/utils.py\", line 56, in escape\n    'Got %s of type %s.' % (u, type(u)))\nValueError: Only unicode objects are escapable. Got None of type <type 'NoneType'>.\n```\n", "created_at": "2015-04-01T15:07:33Z"}, {"body": "", "created_at": "2015-04-01T14:16:58Z"}, {"body": "With a very fresh python-social-auth==0.2.3:\n\n```\n>>> import social.storage.sqlalchemy_orm\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/dmaze/Python/vpy/lib/python2.7/site-packages/social/storage/sqlalchemy_orm.py\", line 6, in <module>\n    import transaction\nImportError: No module named transaction\n```\n\nSimply deleting the \"import transaction\" line from sqlalchemy_orm.py seems to make things work fine; it doesn't seem to correspond to a PyPI package that I know of.\n", "created_at": "2015-03-31T20:20:16Z"}, {"body": "Do you think it will be possible to create a new version available soon ?\n\nThanks @omab \n", "created_at": "2015-03-31T16:06:05Z"}, {"body": "", "created_at": "2015-03-30T14:50:14Z"}, {"body": "Currently you can't disconnect strava from the site. This sets the deauthorize url and sets approriate data for revoking token on strava site.\n", "created_at": "2015-03-29T19:24:43Z"}, {"body": "Many SO questions assume `disconnect` is `logout`\n\nThere's no mention of logout in the doc, and I think it's common usage scenario to log out a user (for the social login) without disconnecting a user.\n\nIt would be good to show how to do the logout in the usage doc and clarify that disconnect is not logout.\n", "created_at": "2015-03-29T10:22:21Z"}, {"body": "The ID is a side product, a comment. The username is the real identifier.\n", "created_at": "2015-03-27T00:58:29Z"}, {"body": "I am using python social auth with django 1.7 and google oauth2.\n\nAfter redirect from google page I have got:\n\nEnvironment:\n\nRequest Method: GET\nRequest URL: http://vbox.net:8000/complete/google-oauth2/?state=QiVp18K58so5FVVBLb8WQnhaALal5fzy&code=4/qR3l5BH4rYNyNt-GtYx6mXl3yPo2XuLaTkHjdkFRjJg.Eh6ySpu7l_IRYFZr95uygvWJ8l2rmAI&authuser=0&num_sessions=1&prompt=consent&session_state=059c1e5d0ac0aa05eebe37df60091e8a6592a99e..d6e5\n\nDjango Version: 1.7.5\nPython Version: 2.7.6\nInstalled Applications:\n('django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'bootstrap3',\n 'tinymce',\n 'urlbreadcrumbs',\n 'social.apps.django_app.default',\n 'core',\n 'details',\n 'keywords',\n 'logins')\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware')\n\nTraceback:\nFile \"/home/olexandr/.virtualenvs/cup/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n   File \"/home/olexandr/.virtualenvs/cup/local/lib/python2.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n2.         response = view_func(request, _args, *_kwargs)\n   File \"/home/olexandr/.virtualenvs/cup/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n3.         return view_func(_args, *_kwargs)\n   File \"/home/olexandr/.virtualenvs/cup/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n4.             return func(request, backend, _args, *_kwargs)\n   File \"/home/olexandr/.virtualenvs/cup/local/lib/python2.7/site-packages/social/apps/django_app/views.py\" in complete\n5.                        redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n   File \"/home/olexandr/.virtualenvs/cup/local/lib/python2.7/site-packages/social/actions.py\" in do_complete\n6.         user = backend.complete(user=user, _args, *_kwargs)\n   File \"/home/olexandr/.virtualenvs/cup/local/lib/python2.7/site-packages/social/backends/base.py\" in complete\n7.         return self.auth_complete(_args, *_kwargs)\n   File \"/home/olexandr/.virtualenvs/cup/local/lib/python2.7/site-packages/social/backends/oauth.py\" in auth_complete\n8.                 method=self.ACCESS_TOKEN_METHOD\n   File \"/home/olexandr/.virtualenvs/cup/local/lib/python2.7/site-packages/social/backends/oauth.py\" in request_access_token\n9.         return self.get_json(_args, *_kwargs)\n   File \"/home/olexandr/.virtualenvs/cup/local/lib/python2.7/site-packages/social/backends/base.py\" in get_json\n10.         return self.request(url, _args, *_kwargs).json()\n    File \"/home/olexandr/.virtualenvs/cup/local/lib/python2.7/site-packages/social/backends/base.py\" in request\n11.             raise AuthFailed(self, str(err))\n\nException Type: AuthFailed at /complete/google-oauth2/\nException Value: Authentication failed: [Errno 1] _ssl.c:510: error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed\n", "created_at": "2015-03-26T10:58:46Z"}, {"body": "Using LinkedIn OAuth2 I'm trying to have users redirected to ?next=/my/redirect/path?code=abcd\n\nIs this possible? I don't see anything about a redirect pipeline to get fields stored in sessions and add them to the redirect. I've tried urlencode on my next but that doesn't work.\n", "created_at": "2015-03-25T23:57:01Z"}, {"body": "", "created_at": "2015-03-25T19:51:10Z"}, {"body": "fix issue #483\n", "created_at": "2015-03-25T11:37:00Z"}, {"body": "Hi All\n\nI'm having a problem that when I login occationally the pipeline will attempt to create a new user even though I've already got a previously created and authenticated user stored.\n\nIs there some steps I'm missing when doing this?\n\nHere is my pipeline:\n\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n    'custom_user.twitter_pipeline.get_auths',\n)\n\nthe last stage is only to get the oauth_secret etc for posting to twitter etc.\n\nThanks in advance!\n", "created_at": "2015-03-25T09:21:34Z"}, {"body": "Without saving the user_id we can't do any further requests.\n", "created_at": "2015-03-24T15:28:31Z"}, {"body": "", "created_at": "2015-03-23T19:24:42Z"}, {"body": "", "created_at": "2015-03-23T15:26:38Z"}, {"body": "The Django app is missing a migration due to Django 1.7 treating _any_ changes to the model as migrations.\n\nRef #516 \n", "created_at": "2015-03-21T15:18:46Z"}, {"body": "Yesterday we released PyJWT [v1.0.0](https://github.com/jpadilla/pyjwt/releases/tag/1.0.0) which fixes some reported security vulnerabilities. Although this project doesn't seem to be affected, it would still be good idea to require PyJWT>=1.0.0,<2.0.0 instead.\n", "created_at": "2015-03-19T23:50:27Z"}, {"body": "Fixes #555\n", "created_at": "2015-03-19T19:07:14Z"}, {"body": "Sometimes you don't want to have any user fields automatically populated, and want to handle all of that explicitly, and the obvious way to achieve that is to disable the pipeline step that fills `details` with info from the social account.\n\nThe trouble is that currently the second default pipeline step expects a details argument that the previous pipeline step is supposed to supply.\n\nHow about feeding in a default empty details argument to the first pipeline step so that every pipeline step can expect it to be there?\n", "created_at": "2015-03-19T18:50:06Z"}, {"body": "", "created_at": "2015-03-19T17:43:06Z"}, {"body": " I'm trying to implement Steam login into my project, and I get the error `get() returned more than one UserSocialAuth -- it returned 2!` when I try to do `user.social_auth.get(provider='steam')`. This seems to happen when someone has the same username\u2014the rows in social_auth_usersocialauth are associated to the same auth.User. Attached an image to show what I mean:\n![screen shot 2015-03-18 at 8 01 37 pm](https://cloud.githubusercontent.com/assets/10459349/6708411/f5a54cf0-cdaa-11e4-93f5-dc3774e8809b.png)\n\nAs a side note, is it a good idea to store the Steam name as username field in auth.User? Steam names can be changed and are not unique. I think it's better to just return something unique for the username field, like UID.\n", "created_at": "2015-03-18T12:09:32Z"}, {"body": "I've got an application that hosts multiple sites, using dynamicsiteslite.  Each site needs to have its own unique users, so my user model is setup to be unique for email and site_id.  I've managed to reconcile each site having unique secrets and keys, so the correct Facebook app (for example) is being hit for authorization.  If I've not attempted to log into any sites using the given backend, a new account is created that correctly references the appropriate site_id.  My problem comes when the user already exists for another site - the auth backends don't check site id when retrieving an account so the account for the wrong website is returned.  Is there any way I can add this check without monkey patching the backends?\n", "created_at": "2015-03-17T15:48:13Z"}, {"body": "When running in Django 1.8:\n\n```\n/Users/matt/.virtualenvs/authy/lib/python2.7/site-packages/social/apps/django_app/default/models.py:29: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.UserSocialAuth doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class UserSocialAuth(models.Model, DjangoUserMixin):\n\n/Users/matt/.virtualenvs/authy/lib/python2.7/site-packages/social/apps/django_app/default/models.py:67: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Nonce doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Nonce(models.Model, DjangoNonceMixin):\n\n/Users/matt/.virtualenvs/authy/lib/python2.7/site-packages/social/apps/django_app/default/models.py:78: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Association doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Association(models.Model, DjangoAssociationMixin):\n\n/Users/matt/.virtualenvs/authy/lib/python2.7/site-packages/social/apps/django_app/default/models.py:91: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Code doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Code(models.Model, DjangoCodeMixin):\n\n/Users/matt/.virtualenvs/authy/lib/python2.7/site-packages/social/apps/django_app/default/models.py:29: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.UserSocialAuth doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class UserSocialAuth(models.Model, DjangoUserMixin):\n\n/Users/matt/.virtualenvs/authy/lib/python2.7/site-packages/social/apps/django_app/default/models.py:67: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Nonce doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Nonce(models.Model, DjangoNonceMixin):\n\n/Users/matt/.virtualenvs/authy/lib/python2.7/site-packages/social/apps/django_app/default/models.py:78: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Association doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Association(models.Model, DjangoAssociationMixin):\n\n/Users/matt/.virtualenvs/authy/lib/python2.7/site-packages/social/apps/django_app/default/models.py:91: RemovedInDjango19Warning: Model class social.apps.django_app.default.models.Code doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n  class Code(models.Model, DjangoCodeMixin):\n```\n", "created_at": "2015-03-14T23:33:22Z"}, {"body": "Added some initialization code to a new ready method in the PythonSocialAuthConfig because of changes in Django.  See https://docs.djangoproject.com/en/1.7/ref/applications/ and https://docs.djangoproject.com/en/1.7/releases/1.7/.\n\nI'm a big fan and feel free to disregard if you already got some code in the works.\n\nThank you!\n", "created_at": "2015-03-13T01:00:11Z"}, {"body": "New backend for http://www.vendhq.com/ \n\nAt this point they're user profile is experimental so getting user parameters isn't included, simply getting the access token for subsequent api calls.\n", "created_at": "2015-03-12T20:41:52Z"}, {"body": "Fixes #545\n", "created_at": "2015-03-12T18:09:57Z"}, {"body": "I forgot update this file :)\n", "created_at": "2015-03-12T07:37:06Z"}, {"body": "Hi there,\n\nJust wondering if there is a way to setup a backend, eg google-oauth2 but in development just stub the workflow so that it presents a page where you can put in the username you want to fake, rather than actually going to google. Or perhaps it can be done in the pipeline?\n\nThe main thing is I would like to have my template present the correct backend with the same url eg `{% url 'social:begin' backend='google-oauth2' %}` as it would appear in production, but not actually talk to google when I am developing and testing app. This way there is no dependency on the backend to be up and available while developing.\n\nThanks.\n", "created_at": "2015-03-12T05:55:05Z"}, {"body": "The `OAuth1` class in this version of requests oauthlib does not take a `decoding` parameter, but python social auth expects it to. This causes an exception.\n\nhttps://github.com/omab/python-social-auth/blob/v0.2.2/social/backends/oauth.py#L282\nhttps://github.com/requests/requests-oauthlib/blob/v0.3.0/requests_oauthlib/core.py#L17\n", "created_at": "2015-03-11T18:28:34Z"}, {"body": "I fund a typo...\n", "created_at": "2015-03-11T17:10:12Z"}, {"body": "This PR adds [wunderlist](https://www.wunderlist.com/) oauth2 backend.\n", "created_at": "2015-03-10T19:56:50Z"}, {"body": "From https://developers.facebook.com/docs/facebook-login/login-flow-for-web/v2.2#re-asking-declined-permissions.\n\n> Facebook Login lets people decline sharing some permissions with your app.\n\nWith these changes these permissions that the user is asked are made mandatory. We should actually come up with a bertter way to fix by making `SOCIAL_AUTH_FACEBOOK_SCOPE` a tuple or a dict to identify if the permission is mandatory or not.\n", "created_at": "2015-03-09T17:40:47Z"}, {"body": "I have added a simple OAuth2 backend for the MMO \"EVE Online\".\nhttps://developers.eveonline.com/resource/single-sign-on\nhttp://www.eveonline.com/\n\nTested with the Django default example.\n", "created_at": "2015-03-06T17:23:36Z"}, {"body": "I didn't find information about how to get the email address, so I investigated and added it to the doc.\n", "created_at": "2015-03-05T14:45:26Z"}, {"body": "Fix Issue : #538 \n\n![screenshot 2015-03-03 17 19 04](https://cloud.githubusercontent.com/assets/4688315/6458709/ff8b5896-c1c9-11e4-928a-5bfbcffb2233.png)\n\nand also, added KakaoOAuth2 on example app.\n", "created_at": "2015-03-03T08:24:50Z"}, {"body": "# Kakao API Settings\n\n![screenshot 2015-03-03 16 51 16](https://cloud.githubusercontent.com/assets/4688315/6458342/d9729394-c1c5-11e4-8776-046360782cbc.png)\n\nkakao force to set static \"Redirect Path\" ( not allowing custom parameters such as \"redirect_state\" )\n# Problem\n- localhost:8000/login/kakao\n- it redirects to \"http://localhost:8000/complete/kakao/?redirect_state=fAXuvuZz5qDlTg4AERBwKqADpCsBIUBn\"\n\nand that uri is not allowed by kakao settings, so it redirects to \"https://kauth.kakao.com/oauth/authorize?state=fAXuvuZz5qDlTg4AERBwKqADpCsBIUBn&redirect_uri=http%3A%2F%2Flocalhost%3A8000%2Fcomplete%2Fkakao%2F%3Fredirect_state%3DfAXuvuZz5qDlTg4AERBwKqADpCsBIUBn&response_type=code&client_id=714f99bb9174783b6df584970a4e2637\"\n\n![screenshot 2015-03-03 16 51 37](https://cloud.githubusercontent.com/assets/4688315/6458344/dedcd56a-c1c5-11e4-937a-4011720dcfc7.png)\n\n> error=\"redirect_uri_mismatch\", error_description=\"Invalid redirect: http://localhost:8000/complete/kakao/?redirect_state=fAXuvuZz5qDlTg4AERBwKqADpCsBIUBn does not match one of the registered values. Please check app settings on kakao developer site.\"\n# Questions\n\nIs there any solutions that i can remove \"redirect_state\" params?\n", "created_at": "2015-03-03T07:59:09Z"}, {"body": "Added note about turning on Google+ API since the Google docs aren't clear on this and the error message doesn't bubble up to the front-end (just shows as a 403 which looks like a CSRF failure).\n", "created_at": "2015-03-02T21:12:27Z"}, {"body": "Added Yahoo OAuth2 support.\n\nIf there is any change you think that is necessary, please let me know!\n", "created_at": "2015-03-02T16:03:23Z"}, {"body": "From example I see that Tornado uses sync sqlalchemy connection to communicate with database. Is any way to utilize storage api in async way, with say momoko (async postgresql driver) or motor (async mongodb driver) ??\n", "created_at": "2015-02-24T22:54:26Z"}, {"body": "I'm working to integrate Facebook and Google OAuth2 into a site that already has working login using contrib.auth.  I'm now stuck with a situation where I will receive a `AuthStateMissing` for both Google-Oauth2 and Facebook.  The only way to successfully log in with those services is to wipe out my site cookie prior to clicking login.  If I do that I can login once.  Then if I try to login again I'll receive another  `AuthStateMissing`.  I've checked past issues and the site is on a subdomain of a TLD, the callback urls are correct.\n\nThe traceback:\n\n```\nTraceback (most recent call last):\n\n  File \"/home/env/tcm/lib/python3.4/site-packages/django/core/handlers/base.py\", line 112, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n\n  File \"/home/env/tcm/lib/python3.4/site-packages/newrelic-2.42.0.35/newrelic/hooks/framework_django.py\", line 497, in wrapper\n    return wrapped(*args, **kwargs)\n\n  File \"/home/env/tcm/lib/python3.4/site-packages/django/views/decorators/cache.py\", line 52, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n\n  File \"/home/env/tcm/lib/python3.4/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view\n    return view_func(*args, **kwargs)\n\n  File \"/home/env/tcm/lib/python3.4/site-packages/social/apps/django_app/utils.py\", line 52, in wrapper\n    return func(request, backend, *args, **kwargs)\n\n  File \"/home/env/tcm/lib/python3.4/site-packages/social/apps/django_app/views.py\", line 28, in complete\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\n\n  File \"/home/env/tcm/lib/python3.4/site-packages/social/actions.py\", line 40, in do_complete\n    user = backend.complete(user=user, *args, **kwargs)\n\n  File \"/home/env/tcm/lib/python3.4/site-packages/social/backends/base.py\", line 40, in complete\n    return self.auth_complete(*args, **kwargs)\n\n  File \"/home/env/tcm/lib/python3.4/site-packages/social/backends/oauth.py\", line 361, in auth_complete\n    state = self.validate_state()\n\n  File \"/home/env/tcm/lib/python3.4/site-packages/social/backends/oauth.py\", line 87, in validate_state\n    raise AuthStateMissing(self, 'state')\n\nsocial.exceptions.AuthStateMissing: Session value state missing.\n```\n\nMy relevant settings:\n\n```\n\nINSTALLED_APPS = {\n    'social.apps.django_app.default',\n}\n...\n AUTHENTICATION_BACKENDS = (\n    'social.backends.facebook.FacebookOAuth2',\n    'social.backends.google.GoogleOAuth2',\n    'django.contrib.auth.backends.ModelBackend'\n)\n...\nTEMPLATE_CONTEXT_PROCESSORS = (\n   'django.contrib.auth.context_processors.auth',\n   'django.core.context_processors.debug',\n   'django.core.context_processors.i18n',\n   'django.core.context_processors.media',\n   'django.core.context_processors.static',\n   'django.core.context_processors.tz',\n   'django.contrib.messages.context_processors.messages',\n   'social.apps.django_app.context_processors.backends',\n   'social.apps.django_app.context_processors.login_redirect',\n)\n\n```\n\nThe errors only trigger once I am sent back to my site.  So it doesn't _appear_ to be related to either Google or Facebook.  \n", "created_at": "2015-02-24T20:36:00Z"}, {"body": "This is a fix to avoid error when user access_token auth in weibo backend. Please review it\n", "created_at": "2015-02-24T12:28:37Z"}, {"body": "KeyError\n\n.....\n\n/usr/lib/python3.3/site-packages/social/backends/oauth.py in do_auth\n        data = self.user_data(access_token, _args, *_kwargs) ...\n\u25b6 Local vars\n/usr/lib/python3.3/site-packages/social/backends/weibo.py in user_data\n                                     'uid': kwargs['response']['uid']}) ...\n\u25b6 Local vars\n", "created_at": "2015-02-24T10:05:06Z"}, {"body": "In the [setup.py](https://github.com/omab/python-social-auth/blob/master/setup.py#L49), the PyJWT dependency is listed as only allowing version `0.4.1`:\n\n```\nrequires = ['requests>=1.1.0', 'oauthlib>=0.3.8', 'six>=1.2.0', 'PyJWT==0.4.1']\n```\n\nWhich replaces the install of the latest version of PyJWT which is at 0.4.3.  Can this instead be changed to:\n\n```\nrequires = ['requests>=1.1.0', 'oauthlib>=0.3.8', 'six>=1.2.0', 'PyJWT>=0.4.1']\n```\n", "created_at": "2015-02-23T16:38:37Z"}, {"body": "I've created a behance app and seems they have changed their API because they no longer provide **SOCIAL_AUTH_BEHANCE_SECRET**. http://psa.matiasaguirre.net/docs/backends/behance.html\n\n![selection_108](https://cloud.githubusercontent.com/assets/1572530/6321254/38dc1ade-bac4-11e4-9229-a7f0e76f1176.png)\n\nIf I use the client id as secret key I get this error:\n\n``` json\n{\nhttp_code: \"400\",\nmessages: [\n    {\n        type: \"error\",\n        message: \"Bad Request\"\n    }\n]\n}\n```\n", "created_at": "2015-02-22T23:58:30Z"}, {"body": "- include template engine\n- remove duplicated line\n- fix parameter\n- fix session\n", "created_at": "2015-02-21T08:41:24Z"}, {"body": "Test djangp example app\n\n``` python\n../../social/strategies/django_strategy.py in request_data\n        return getattr(settings, name)\n    def request_data(self, merge=True):\n        if not self.request:\n            return {}\n        if merge:\n            data = self.request.GET\n            data.update(self.request.POST) ...\n        elif self.request.method == 'POST':\n            data = self.request.POST\n        else:\n            data = self.request.GET\n        return data\n```\n\n![image](https://cloud.githubusercontent.com/assets/353644/6312862/d0b263fe-b9c5-11e4-80ac-266ff42b94ab.png)\n", "created_at": "2015-02-21T04:32:42Z"}, {"body": "Hi,\n\nwe use django+nginx and third nginx reverse proxy in the front.\n\nGoogle auth2 fails because of the too big header sending from reverse proxy to the nginx+django layer.\n\nCould you help please\n", "created_at": "2015-02-20T17:25:09Z"}, {"body": "With Django 1.8a1 psa fails, though I'm not sure if that's fixable here:\n\n```\nTraceback (most recent call last):\n  File \"./manage.py\", line 31, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/core/management/__init__.py\", line 330, in execute_from_command_line\n    utility.execute()\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/core/management/__init__.py\", line 304, in execute\n    django.setup()\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/__init__.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/apps/registry.py\", line 82, in populate\n    app_config = AppConfig.create(entry)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/apps/config.py\", line 86, in create\n    module = import_module(entry)\n  File \"/opt/python/2.7.9/lib/python2.7/importlib/__init__.py\", line 37, in import_module\n    __import__(name)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/social/apps/django_app/__init__.py\", line 14, in <module>\n    from social.apps.django_app.utils import load_strategy\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 20, in <module>\n    Strategy = module_member(STRATEGY)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/social/utils.py\", line 23, in module_member\n    module = import_module(mod)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/social/utils.py\", line 17, in import_module\n    __import__(name)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/social/strategies/django_strategy.py\", line 4, in <module>\n    from django.contrib.contenttypes.models import ContentType\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/contrib/contenttypes/models.py\", line 159, in <module>\n    class ContentType(models.Model):\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/db/models/base.py\", line 92, in __new__\n    app_config = apps.get_containing_app_config(module)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/apps/registry.py\", line 230, in get_containing_app_config\n    self.check_apps_ready()\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/apps/registry.py\", line 121, in check_apps_ready\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\ndjango.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\n```\n", "created_at": "2015-02-20T14:12:55Z"}, {"body": "https://github.com/omab/python-social-auth/blob/master/social/backends/vk.py#L114\n\nIn error case vk_api returns `None` and `if data.get('error'):` raises AttributeError.\n", "created_at": "2015-02-18T16:10:09Z"}, {"body": "base64.encodestring() returns \"bytes\" type, this fails type check with sqlalchemy (pypostgresql driver for sqlalchemy here) with python3.\n\nCalling .decode() converts the result to \"str\" type, and database insert/update works.\nThis patch also works with python2 (converting from \"str\" to \"unicode\").\n", "created_at": "2015-02-17T21:51:25Z"}, {"body": "@omab would you update the release on PyPI? The latest release, 0.2.1, is 5 months out of date.\n", "created_at": "2015-02-17T21:40:21Z"}, {"body": "[Auth0](http://www.auth0.com) is a popular Authorization-as-a-service provider. It would be great to have a backend.\n", "created_at": "2015-02-16T19:39:28Z"}, {"body": "This is for two reasons:\n\n a) Using the verb \"import\" suggests that the module/function should be\n    imported which is not true; we want a \"dotted path notation\" string\n    rather than a reference to the method.\n\n b) \"import\" is an invalid module name anyway, so as an example of dotted\n    path notation it is faulty. (Okay, it might actually be possible using\n    `types` and `sys.modules` but.. yeah)\n\nSigned-off-by: Chris Lamb chris@chris-lamb.co.uk\n", "created_at": "2015-02-16T19:18:35Z"}, {"body": "This PR fixes the google openid connect (#494, #477 for more information)\n\nIt is my first contribution to this repo, could you ensure everything is in order?\n", "created_at": "2015-02-16T14:20:40Z"}, {"body": "Dribble(https://dribbble.com/) is a famous SNS for designer. \nPlease feel free to merge it.\n", "created_at": "2015-02-14T17:40:58Z"}, {"body": " I am not using MergeDict because it will be deprecated. Thank you @kosmos342\n", "created_at": "2015-02-14T11:21:17Z"}, {"body": "Currently, the Reddit username is used to generate a username when creating a new user, but for existing users it doesn't get stored in the database. This fix adds the username to `extra_data`, aliasing the Reddit attribute `name` to the `extra_data` attribute `username`, thus letting you more reliably know your users' Reddit usernames.\n", "created_at": "2015-02-14T05:27:12Z"}, {"body": "I believe you're missing a migration for `social/apps/django_app/default`.\n\nInstalling `python-social-auth` and then doing `python manage.py makemigrations` creates another migration for the above mentioned app that looks like this:\n\n``` python\n# -*- coding: utf-8 -*-\nfrom __future__ import unicode_literals\n\nfrom django.db import models, migrations\nfrom django.conf import settings\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('default', '0001_initial'),\n    ]\n\n    operations = [\n        migrations.AlterField(\n            model_name='usersocialauth',\n            name='user',\n            field=models.ForeignKey(related_name='social_auth', to=settings.AUTH_USER_MODEL),\n            preserve_default=True,\n        ),\n    ]\n```\n\nThis may have been missed because unlike South, Django 1.7 treats _any_ change to the models as a migration - even adding a `related_name` attribute.\n", "created_at": "2015-02-13T23:07:34Z"}, {"body": "https://developers.facebook.com/docs/graph-api/securing-requests\n\nGraph API calls from a server can be better secured by adding a\nparameter called appsecret_proof.\n\nThe app secret proof is a sha256 hash of your access token, using the\napp secret as the key.\n\n$appsecret_proof= hash_hmac('sha256', $access_token, $app_secret)\n\nthe result as an appsecret_proof parameter must be added to each call\nyou make from server.\n\nSecuring with appsecret_proof is optional (but enabled by default for\nnew Facebook apps) so add appsecret_proof param is contoled by\nSOCIAL_AUTH_FACEBOOK_APPSECRET_PROOF = True|False\n\nDefault is True\n", "created_at": "2015-02-12T19:08:28Z"}, {"body": "", "created_at": "2015-02-11T17:28:09Z"}, {"body": "In my django app I am using email field for user authentication instead of username field. I am using linkedin, facebook and google authentication in this application. when i register or login using facebook or linkedin a oauth token is created and stored in database but user doesn't get login. Does python social-auth allows to get login using email instead of username ? or i have to use pipline to get oauth token and register the user somehow ?\n", "created_at": "2015-02-11T14:38:29Z"}, {"body": "Qiita(https://qiita.com) is a famous SNS for engineers in Japan. \nPlease feel free to merge it.\n", "created_at": "2015-02-11T12:21:35Z"}, {"body": "This is a fix to avoid errors in Django 1.7. Please review it.\n", "created_at": "2015-02-07T12:36:14Z"}, {"body": "Add the deprecation warning for OAuth 1.0 according: https://developers.google.com/accounts/docs/OAuth\n\nUpdate Google+ Sign-In documentation completing more information and applying the latest changes. Source:\nhttps://developers.google.com/+/web/signin/\n", "created_at": "2015-02-06T17:39:42Z"}, {"body": "- Using PyJWT 0.4.1 (or newer)\n- Relying on PyJWT to verify ID token audience and issuer\n\nReplaces #486.\n", "created_at": "2015-02-06T07:10:19Z"}, {"body": "Hello, I am having a problem on Django 1.7\n\nI think request.REQUEST has been deprecated, which causes a problem in django_strategy.py, line 39\nYou should now merge request.GET and request.POST instead of referencing request.REQUEST, something like:\n\n```\nif merge:\n        data = self.request.GET\n        data.update(self.request.POST)\n```\n\nPlease correct me if I'm wrong.\n\nBest regards,\n\nAlejandro.\n\nNOTE: https://docs.djangoproject.com/en/1.7/releases/1.7/#django-utils-datastructures-mergedict-class\n", "created_at": "2015-02-05T22:36:27Z"}, {"body": "The doc for `SocialAuthExceptionMiddleware` states that it logs an error. It doesn't. If an exception is not raised the middleware attempts to display the error to the user via the messages framework or pass the message as a query string parameter.\n\nThe middleware should actually log the exception. Otherwise, if the error view does not use the messages framework, the error will be hidden.\n", "created_at": "2015-02-05T18:40:58Z"}, {"body": "Hi all,\n\nI am a new user of python-social-auth. I am not able to fetch facebook profile information. I tried to do lot of search on this topic but nothing seems to be working for me.\n\nFollowing is my config.\n\nsettings.py\n\nSOCIAL_AUTH_URL_NAMESPACE = 'social'\nSOCIAL_AUTH_REDIRECT_IS_HTTPS = False\nSOCIAL_AUTH_FACEBOOK_KEY = 'mykey'\nSOCIAL_AUTH_FACEBOOK_SECRET = 'mytoken'\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email','user_friends','public_profile','user_interests','user_birthday','user_about_me','user_birthday','user_location']\n\nAUTHENTICATION_BACKENDS = (\n    'social.backends.facebook.FacebookOAuth2',\n    'django.contrib.auth.backends.ModelBackend',\n)\n\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'myapp.pipeline.save_profile',  # pipeline to save user profile data.\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n\nBut in response I am getting only \"email\", \"gender\", \"birthday\" and \"location\". \nI want other information like \"Number of friends\", \"Intrestes\", \"Hobbies\" etc\n", "created_at": "2015-02-05T12:55:54Z"}, {"body": "We run our site without trailing slashes, and has nginx redirect all URLs with a trailing slash to a non-trailing slash version. This however breaks social auth, since all the routes configured require a trailing slash. I've worked around it by not having nginx rewrite the social auth URLs, but is it possible to not require the trailing slash? Would be nice to be able to be consistent about this.\n\nIf the social auth apps allow both, you could let your web server redirect to the one you want to use, to avoid having content served on both. Or it could be defined in the social auth settings which version you prefer.\n", "created_at": "2015-02-05T10:28:06Z"}, {"body": "The project and application format for this Django example looks vastly different from how django 1.7 creates projects  and apps. Why is this the case ?\n", "created_at": "2015-02-04T20:43:47Z"}, {"body": "If a user chooses not to share their email via the OpenId login page,\nwe end up passing through None as the 'email' value, which ends up\nraising a \"column 'email' cannot be null\" error on some databases.\nBlank string is fine.\n", "created_at": "2015-02-03T00:49:01Z"}, {"body": "Pull request for issue #501 .\nUpdated mendeley oauth2 to use new api resource and also updated to grab new profile_id, name and bio.\n", "created_at": "2015-02-02T23:54:25Z"}, {"body": "Using the django_example when I add my credentials to the settings file and attempt to runserver for django_example I'm getting the following after entering my credentials for Mendeley-OAuth2:\n\n<pre>\nInternal Server Error: /complete/mendeley-oauth2/\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 112, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/django/views/decorators/cache.py\", line 52, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"../../social/apps/django_app/utils.py\", line 52, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"../../social/apps/django_app/views.py\", line 28, in complete\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\n  File \"../../social/actions.py\", line 40, in do_complete\n    user = backend.complete(user=user, *args, **kwargs)\n  File \"../../social/backends/base.py\", line 40, in complete\n    return self.auth_complete(*args, **kwargs)\n  File \"../../social/backends/oauth.py\", line 375, in auth_complete\n    *args, **kwargs)\n  File \"../../social/backends/oauth.py\", line 379, in do_auth\n    data = self.user_data(access_token, *args, **kwargs)\n  File \"../../social/backends/mendeley.py\", line 28, in user_data\n    values = self.get_user_data(access_token)\n  File \"../../social/backends/mendeley.py\", line 66, in get_user_data\n    headers={'Authorization': 'Bearer {0}'.format(access_token)}\n  File \"../../social/backends/base.py\", line 228, in get_json\n    return self.request(url, *args, **kwargs).json()\n  File \"../../social/backends/base.py\", line 224, in request\n    response.raise_for_status()\n  File \"/usr/lib/python2.7/dist-packages/requests/models.py\", line 773, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\nHTTPError: 410 Client Error: Gone\n</pre>\n\n\nAny help here would be greatly appreciated.\n", "created_at": "2015-02-02T21:25:16Z"}, {"body": "Add support for Launchpad OpenId\n", "created_at": "2015-02-02T03:41:23Z"}, {"body": "Full details located on stackoverflow here: \n\nhttp://stackoverflow.com/questions/28237885/python-social-auth-not-getting-correct-googleoath2-details\n\nI want to login a user using the python-social-auth functionality for Google Plus signin in Django. When logging in from my website, everything works fine and the correct details are added to the database.\n\nHowever, I want to authenticate from my Android application as well. The user logs in in the application, which then sends the access token to the django API, which handles the login process in the following code, adapted from the documentation:\n\n@csrf_exempt\n@serengeti_api_request\n@psa('social:complete')\ndef login_social_token(request, backend):\n    # Ensure the token has been specified.\n    token = request.META.get('HTTP_ACCESSTOKEN')\n    if token is None:\n        raise SerengetiApiRequestException('Access token is missing!')\n\n```\n# Login the user for this session\nuser = request.backend.do_auth(token)\nif user is None:\n    raise SerengetiApiRequestException('Could not authenticate user!')\n\nlogin(request, user)\n\n# Store the email address if one has been specified (e.g. Twitter)\nemail = request.META.get('HTTP_EMAIL')\nif email is not None:\n    user.email = email\n    user.save()\n\n# Prepare the parameters to be returned\nresponse = dict({\n    'id': user.id,\n    'first_name': user.first_name,\n    'last_name': user.last_name,\n    'api_key': request.session.session_key,\n})\n\n# Return a 200 status code to signal success.\nreturn HttpResponse(json.dumps(response, indent=4), status=200)\n```\n\nWhen logging in from the website, the social_auth_usersocialauth table contains:\n\nid | provider      | uid       | extra_data\n.....................................................................................\n10 | google-oauth2 | <myemail> | {\"token_type\": \"Bearer\", \"access_token\": \"<token>\", \"expires\": 3600}\nHowever, when logging in from the application using the above function, the operation completes ok, but the entry in the table looks like this:\n\nid | provider      | uid     | extra_data\n.....................................................................................\n10 | google-oauth2 | <empty> | {\"access_token\": \"\", \"expires\": null}\nAlso, the auth_user table contains a username like eeed494412obfuscated48bc47dd9b instead of the Google Plus username and the email field is empty.\n\nWhat am I doing wrong and how can I obtain the same functionality as I get on the website?\n\nI would like to mention that I have implemented Facebook and Twitter authentication from the Android application, which call the above-mentioned function and store the correct details, only Google Plus is causing problems.\n", "created_at": "2015-01-30T14:45:14Z"}, {"body": "I've found out that jawbone authentication throws an exception  on \"auth_complete\" and fixed it.\n", "created_at": "2015-01-30T01:49:38Z"}, {"body": "Traceback:\nhttp://pastebin.com/zqKCknCb\n\nSo everything is successful, I can see jawbone message \n\n![message](http://i.imgur.com/pb4zRat.png)\n\nWith this url:\nhttps://jawbone.com/auth/oauth2/auth?scope=basic_read+extended_read+sleep_read+move_read&state=xPjRSrjw97UC7FS5Mi0Ocw2nuFWcItlK&redirect_uri=http://www.test1.com:8000/complete/jawbone/&response_type=code&client_id=7wlC_4ZiucI\n\nThen I click agree (with or without this checkbox) and exception is raised. The traceback on pastebin link is above.\n\nThe problem is obviously somewhere in python-social-auth, because basically the jawbone's work is done (you can see url in traceback, it has &code=mGKV_178jYzP0rLxJmQz-DFgyTmy-xwRh7wBkytH1pT_tpMD-scm8s03UMN7dzyJyerH6h6H0l2-fL7a4wREe4eyzy0s7TLyCQDfEZZgjGTOLvajaxYQwT249X_514- ).\n\nI tried with or without custom pipeline.\n\nI also have working code for attaching twitter and facebook accounts to django user account. And they work perfectly.\n", "created_at": "2015-01-27T22:49:39Z"}, {"body": "This is an implementation of Coursera OAuth2-based backend. There is no option to refresh access token though.\n", "created_at": "2015-01-27T09:46:36Z"}, {"body": "Using the example found in flask_example, changed out the SQLALCHEMY_DATABASE_URI to reflect a PyMySQL connector.  A crash shortly followed as the init_social(app, db).\nThe reference to db.session is invalid.\n\nI know you example supports both SQLLite (via SQLAlchemy) and Mongo.\nHave you checked to see if other SQLAlchemy routes are supported (ie. PyMySQL for my case).\nShould we assume a proper session contained with the db object?\n\nThanks\n\nRef:\nSQLALCHEMY_DATABASE_URI = 'mysql+pymysql://root:@localhost:3306/test'\nScreen shot attached:\n\n![pymysql crash](https://cloud.githubusercontent.com/assets/5856387/5906608/d96c3362-a54d-11e4-84a4-082899fda8a4.png)\n", "created_at": "2015-01-26T19:24:53Z"}, {"body": "Any plans on making a change to support GooglePlus via OpenID?\nLooking at the sources, I see GooglePlus via Oauth2 is supported, just not OpenID.\n\nBelieve this is a straight forward and simple change. \nWith Google deprecating Google and OpenID and moving to GooglePlus OpenID in 4/2015... it would be great to have this in place prior.\nhttps://developers.google.com/+/api/auth-migration#oid2\n\nThanks\nDavid\n", "created_at": "2015-01-26T18:30:25Z"}, {"body": "", "created_at": "2015-01-26T17:22:40Z"}, {"body": "In order to allow url patters in the settings urls set SOCIAL_AUTH_URL_PATTERNS_ENABLED = True (by default it's disabled to maintain backward compatibility).\n", "created_at": "2015-01-21T14:12:26Z"}, {"body": "Updated for #490, if necessary.\n", "created_at": "2015-01-20T21:04:08Z"}, {"body": "The docs say, \n`SOCIAL_AUTH_NONCE_SERVER_URL_LENGTH = <int>\nNonce model has a unique constraint over ('server_url', 'timestamp', 'salt'), salt has a max length of 40, so server_url length must be tweaked using this setting.`\nbut I don't actually see this being enforced anywhere nor any reference to it in the migration or model.\n", "created_at": "2015-01-20T20:44:18Z"}, {"body": "Traceback (most recent call last):\n\n  File \"/opt/../virtualenvs/pyp/lib/python2.7/site-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, _callback_args, *_callback_kwargs)\n\n  File \"/opt/../virtualenvs/pyp/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(_args, *_kwargs)\n\n  File \"/opt/../virtualenvs/pyp/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 52, in wrapper\n    return func(request, backend, _args, *_kwargs)\n\n  File \"/opt/../virtualenvs/pyp/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 20, in complete\n    redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n\n  File \"/opt/../virtualenvs/pyp/lib/python2.7/site-packages/social/actions.py\", line 43, in do_complete\n    user = backend.complete(user=user, _args, *_kwargs)\n\n  File \"/opt/../virtualenvs/pyp/lib/python2.7/site-packages/social/backends/base.py\", line 40, in complete\n    return self.auth_complete(_args, *_kwargs)\n\n  File \"/opt/../virtualenvs/pyp/lib/python2.7/site-packages/social/backends/oauth.py\", line 357, in auth_complete\n    state = self.validate_state()\n\n  File \"/opt/../virtualenvs/pyp/lib/python2.7/site-packages/social/backends/oauth.py\", line 79, in validate_state\n    raise AuthMissingParameter(self, 'state')\n\nAuthMissingParameter: Missing needed parameter state.\n\nPlease help..\n", "created_at": "2015-01-20T07:03:42Z"}, {"body": "I have Facebook and VK backend working properly for Tornado framework. When trying to connect with Google+, I have 403 with the stack trace listed below. \n\nThe redirect URI is set to http://myapp.com:8000/complete/google-oauth2/? (that's what Google asked to set it to).\n\n[E 150120 00:30:54 web:1407] Uncaught exception GET /complete/google-oauth2/?state=xceiQDjcWYtvtbOdy5FSieQ4qcObMjKv&code=4/_AhNK2A-vKbFqila0ODhrcvFOUYis-6ppNPrneZnXkw.gggDe6_LCsAerjMoGjtSfTqonDkIlgI&authuser=0&num_sessions=4&prompt=consent&session_state=6373f80c01eb47d5d031668530cb0340032ec7cd..9762 (127.0.0.1)\n    HTTPServerRequest(protocol='http', host='myapp.com:8000', method='GET', uri='/complete/google-oauth2/?state=xceiQDjcWYtvtbOdy5FSieQ4qcObMjKv&code=4/_AhNK2A-vKbFqila0ODhrcvFOUYis-6ppNPrneZnXkw.gggDe6_LCsAerjMoGjtSfTqonDkIlgI&authuser=0&num_sessions=4&prompt=consent&session_state=6373f80c01eb47d5d031668530cb0340032ec7cd..9762', version='HTTP/1.1', remote_ip='127.0.0.1', headers={'X-Chrome-Uma-Enabled': '1', 'Accept-Language': 'en-US,en;q=0.8,ru;q=0.6', 'Accept-Encoding': 'gzip, deflate, sdch', 'Host': 'myapp.com:8000', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,_/_;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.99 Safari/537.36', 'Connection': 'keep-alive', 'Cookie': 'vk-oauth2_state=\"2|1:0|10:1421701563|15:vk-oauth2_state|44:RVE3ek5XMzZqWVc5Y1JnelgzVVRUTmdsa3lYaTZGbW4=|09a8d2968cd39f26524c982a187d5d1a1761bfb4d44886063f6c3ceba88455b4\"; social_auth_last_login_backend=\"2|1:0|10:1421701567|30:social_auth_last_login_backend|12:dmstb2F1dGgy|2e381bbe906d1b1a582e703af2f9204f76782f04159e34a51b9f922b2a8c6047\"; user_id=\"2|1:0|10:1421701567|7:user_id|4:Mw==|bf745732e15d2a8a5ae1e2f9bcdca8027eadb672c40cc579e7ad2b03150f0d30\"; google-oauth2_state=\"2|1:0|10:1421702838|19:google-oauth2_state|44:eGNlaVFEamNXWXR2dGJPZHk1RlNpZVE0cWNPYk1qS3Y=|9703a80d0c1ff2b846cc68fe0e3945a21b17946b53f8bbea16d231d6a82bdc8f\"; partial_pipeline=\"2|1:0|10:1421703042|16:partial_pipeline|0:|7395032677e97c53d32bda46eb3fb9d4c471de6748db3f843f9186f75a9b89cf\"', 'Cache-Control': 'max-age=0', 'X-Client-Data': 'CIi2yQEIorbJAQiptskBCMG2yQEI8YjKAQjFlMoB', 'Allow-Chrome-Signin': '1'})\n    Traceback (most recent call last):\n      File \"/Users/savenkov/Fun/myapp/python-social-auth/examples/tornado_example/tornado-social/lib/python2.7/site-packages/tornado/web.py\", line 1332, in _execute\n        result = method(_self.path_args, *_self.path_kwargs)\n      File \"../../social/apps/tornado_app/handlers.py\", line 34, in get\n        self._complete(backend)\n      File \"../../social/apps/tornado_app/utils.py\", line 42, in wrapper\n        return func(self, backend, _args, *_kwargs)\n      File \"../../social/apps/tornado_app/handlers.py\", line 44, in _complete\n        user=self.get_current_user()\n      File \"../../social/actions.py\", line 40, in do_complete\n        user = backend.complete(user=user, _args, *_kwargs)\n      File \"../../social/backends/base.py\", line 40, in complete\n        return self.auth_complete(_args, *_kwargs)\n      File \"../../social/backends/oauth.py\", line 377, in auth_complete\n        _args, *_kwargs)\n      File \"../../social/backends/oauth.py\", line 381, in do_auth\n        data = self.user_data(access_token, _args, *_kwargs)\n      File \"../../social/backends/google.py\", line 74, in user_data\n        'alt': 'json'\n      File \"../../social/backends/base.py\", line 228, in get_json\n        return self.request(url, _args, *_kwargs).json()\n      File \"../../social/backends/base.py\", line 224, in request\n        response.raise_for_status()\n      File \"/Users/savenkov/Fun/myapp/python-social-auth/examples/tornado_example/tornado-social/lib/python2.7/site-packages/requests/models.py\", line 831, in raise_for_status\n        raise HTTPError(http_error_msg, response=self)\n    HTTPError: 403 Client Error: Forbidden\n[E 150120 00:30:54 web:1811] 500 GET /complete/google-oauth2/?state=xceiQDjcWYtvtbOdy5FSieQ4qcObMjKv&code=4/_AhNK2A-vKbFqila0ODhrcvFOUYis-6ppNPrneZnXkw.gggDe6_LCsAerjMoGjtSfTqonDkIlgI&authuser=0&num_sessions=4&prompt=consent&session_state=6373f80c01eb47d5d031668530cb0340032ec7cd..9762 (127.0.0.1) 3261.93ms\n", "created_at": "2015-01-19T21:39:34Z"}, {"body": "Sorry if this is some type of lame bug in my code. I am not an expert in oauth. I use Tornadp example provided with the repo. The authorisation is successfully started, I got redirected to the twitter connect page, but after clicking \"Sign In\" I got 500 with the following stack trace:\n\n[I 150119 21:20:53 web:1811] 302 GET /login/twitter (127.0.0.1) 1393.70ms\n[E 150119 21:21:00 web:1407] Uncaught exception GET /complete/twitter/?redirect_state=WyEyOjH7mCXRTtNEMpAw9LY1tFjEa8NY&oauth_token=uN14aAyXi42bqOHfs6ttlpTir7Gk6WBD&oauth_verifier=bFHSORVyjTyHfj4P6718vNpjq1s6dYVS (127.0.0.1)\n    HTTPServerRequest(protocol='http', host='myapp.com:8000', method='GET', uri='/complete/twitter/?redirect_state=WyEyOjH7mCXRTtNEMpAw9LY1tFjEa8NY&oauth_token=uN14aAyXi42bqOHfs6ttlpTir7Gk6WBD&oauth_verifier=bFHSORVyjTyHfj4P6718vNpjq1s6dYVS', version='HTTP/1.1', remote_ip='127.0.0.1', headers={'Connection': 'keep-alive', 'Accept-Language': 'en-US,en;q=0.8,ru;q=0.6', 'Accept-Encoding': 'gzip, deflate, sdch', 'Cookie': 'twitter_state=\"2|1:0|10:1421691653|13:twitter_state|44:eVZGajI4WXJWMWg0cWJ4a09UakxSdE1kZzlJZDZOZHk=|4f6545f6839f605fc5996f23c8de0500b38fadd2678c615252eb37759901de2f\"; twitterunauthorized_token_name=\"2|1:0|10:1421691653|30:twitterunauthorized_token_name|176:W3Unb2F1dGhfdG9rZW49dU4xNGFBeVhpNDJicU9IZnM2dHRscFRpcjdHazZXQkQmb2F1dGhfdG9rZW5fc2VjcmV0PUt5TzBqZ0ZkVVVib09QdlRTUDVkZFRxaTl3d0VxM2FBJm9hdXRoX2NhbGxiYWNrX2NvbmZpcm1lZD10cnVlJ10=|3cab9e6bcd116512b82a85819efa7dd4dd827c2bb087f0a62000182adb771562\"; partial_pipeline=\"2|1:0|10:1421691652|16:partial_pipeline|0:|12f70b272648e6bda22eb0db637f2d016b4d758b0ba05f98e2d5d063628ffb1d\"', 'Host': 'myapp.com:8000', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,_/_;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.99 Safari/537.36'})\n    Traceback (most recent call last):\n      File \"/Users/savenkov/Fun/myapp/python-social-auth/examples/tornado_example/tornado-social/lib/python2.7/site-packages/tornado/web.py\", line 1332, in _execute\n        result = method(_self.path_args, *_self.path_kwargs)\n      File \"../../social/apps/tornado_app/handlers.py\", line 34, in get\n        self._complete(backend)\n      File \"../../social/apps/tornado_app/utils.py\", line 42, in wrapper\n        return func(self, backend, _args, *_kwargs)\n      File \"../../social/apps/tornado_app/handlers.py\", line 44, in _complete\n        user=self.get_current_user()\n      File \"../../social/actions.py\", line 40, in do_complete\n        user = backend.complete(user=user, _args, *_kwargs)\n      File \"../../social/backends/base.py\", line 40, in complete\n        return self.auth_complete(_args, *_kwargs)\n      File \"../../social/backends/oauth.py\", line 167, in auth_complete\n        self.validate_state()\n      File \"../../social/backends/oauth.py\", line 83, in validate_state\n        raise AuthStateForbidden(self)\n    AuthStateForbidden: Wrong state parameter given.\n[E 150119 21:21:00 web:1811] 500 GET /complete/twitter/?redirect_state=WyEyOjH7mCXRTtNEMpAw9LY1tFjEa8NY&oauth_token=uN14aAyXi42bqOHfs6ttlpTir7Gk6WBD&oauth_verifier=bFHSORVyjTyHfj4P6718vNpjq1s6dYVS (127.0.0.1) 15.63ms\n", "created_at": "2015-01-19T18:28:39Z"}, {"body": "PyJWT 0.3.0 introduced an audience validation. The OIDC backend already has its own method of audience validation that I'd prefer to stick with since it's already tested (and I don't have time at the moment to update the code to use the validation in PyJWT).\n", "created_at": "2015-01-14T22:48:29Z"}, {"body": "Using Python social auth in django project and everything was working fine.\n\nI have just updated python social auth to 0.2.1 and I am getting error with load_strategy when trying to refresh google oauth2 token.\n\nUntil now I was using:\n\n```\nstrategy = load_strategy(backend='google-oauth2')\nuser = UserSocialAuth.objects.get(uid=..., provider=\"google-oauth2\")\nrefresh_token(strategy=strategy, redirect_uri='http://.....')\n```\n\nNow I am getting this error:\n\n```\nTypeError: load_strategy() got an unexpected keyword argument 'backend'\n```\n\nAny kind of help will be appreciated.\n", "created_at": "2015-01-14T19:11:47Z"}, {"body": "Disconnect with revoke (SOCIAL_AUTH_REVOKE_TOKENS_ON_DISCONNECT = True) is giving me errors because the params and headers for revoke are not being filled. \n\nIn \"backends/google.py\" GooglePlusAuth is missing revoke_token_params &  revoke_token_headers, and it is taking the default ones which fills them with empty values. \n\nFilling with the Google Oauth2 values it works well:\n\ndef revoke_token_params(self, token, uid):\n        return {'token': token}\n\ndef revoke_token_headers(self, token, uid):\n        return {'Content-type': 'application/json'}\n", "created_at": "2015-01-13T08:14:11Z"}, {"body": "With \"Enhanced redirection security:\" always enabled now.  The redirect url has to be same as it is defined. Please set REDIRECT_STATE = False.\n", "created_at": "2015-01-13T05:14:08Z"}, {"body": "Spotify's `access_token` expires after a few hours. To be able to refresh the token, we need to be storing `refresh_token`.\n", "created_at": "2015-01-10T21:56:10Z"}, {"body": "Many Chinese use Weixin...  \nPlease support weixin ...  \n", "created_at": "2015-01-10T10:49:13Z"}, {"body": "To support Graph API 2.2 I created a subclass, and updated the version in the urls. Is this all that should be needed? Everything seems to work ok for me so far.\n\nclass Facebook22OAuth2(Facebook2OAuth2):\n    \"\"\"Facebook OAuth2 authentication backend using Facebook Open Graph 2.2\"\"\"\n    AUTHORIZATION_URL = 'https://www.facebook.com/v2.2/dialog/oauth'\n    ACCESS_TOKEN_URL = 'https://graph.facebook.com/v2.2/oauth/access_token'\n    REVOKE_TOKEN_URL = 'https://graph.facebook.com/v2.2/{uid}/permissions'\n    USER_DATA_URL = 'https://graph.facebook.com/v2.2/me'\n", "created_at": "2015-01-08T21:02:53Z"}, {"body": "An update to the previously submitted slack integration. If the scope is reduced to `identity` only, we have less data available. This new code properly handles both a scope of `identity` only, as well as the default scope of `identity,read`\n", "created_at": "2015-01-08T03:28:32Z"}, {"body": "i got 504 Gateway Time-out when i trying to login with facebook, i configured to production but is the same error what happened i cant login my users with \nsocial.backends.facebook.FacebookOAuth2 when i run in locahost:8000 runs perfect but when i in production i got it the error\n\nim using gunicorn as proxy pass\ni think is my nginx config in location:\n\n```\n  location /  {\n\n    proxy_pass_header Server;\n    proxy_set_header Host $http_host;\n    proxy_redirect off;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Scheme $scheme;\n    proxy_pass http://127.0.0.1:8000;    \n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n  }\n```\n", "created_at": "2015-01-08T03:12:29Z"}, {"body": "The backend for Google OpenID Connect (https://github.com/omab/python-social-auth/blob/master/social/backends/google.py#L207) do not match the documentation (https://developers.google.com/accounts/docs/OpenIDConnect)\nIndeed, Google OpenID Connect do not support yet 'nonce' param, and extra steps are required to validate an id token (https://developers.google.com/accounts/docs/OpenIDConnect#validatinganidtoken)\n\n=> Google OpenID Connect do not match exactly the specification for OpenID Connect (http://openid.net/specs/openid-connect-core-1_0.html) and its implementation in python-social-auth does not work such as it is now (at least for me)\n\nHas anyone else tried to use it ?\n\nThe errors :\n- Error 400 if I don't remove the 'nonce' param\n- id_token (jwt) cannot be decoded because the key required to do so is at https://www.googleapis.com/oauth2/v2/certs\n\nWith the deprecation of Google OpenID approaching (https://developers.google.com/accounts/docs/OpenID) I suppose some people will have to migrate to OpenID Connect or Google+.\n", "created_at": "2015-01-06T13:47:22Z"}, {"body": "Fixes #426\n", "created_at": "2015-01-05T22:59:25Z"}, {"body": "The \"app key\" and \"app label\" settings in the [Spotify docs](https://github.com/omab/python-social-auth/blob/master/docs/backends/spotify.rst) is incorrect based on the `name` attribute of the [`SpotifyOAuth2` class](https://github.com/omab/python-social-auth/blob/92219cf7f0aac3e3a2313372ecb3bf63f5ba0185/social/backends/spotify.py#L12). With the current `name` attribute, the settings should be:\n\n```\nSOCIAL_AUTH_SPOTIFY_KEY = ''\nSOCIAL_AUTH_SPOTIFY_SECRET = ''\n```\n\nHowever, I think the \"real\" bug might just be that the `name` attribute is incorrect on that class.\n", "created_at": "2015-01-04T16:43:21Z"}, {"body": "When running `$ manage.py makemigrations`, it seems to generate additional migration for `default` app with content:\n\n```\n# -*- coding: utf-8 -*-\nfrom __future__ import unicode_literals\n\nfrom django.db import models, migrations\nfrom django.conf import settings\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('default', '0001_initial'),\n    ]\n\n    operations = [\n        migrations.AlterField(\n            model_name='usersocialauth',\n            name='user',\n            field=models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='social_auth'),\n            preserve_default=True,\n        ),\n    ]\n\n```\n\nThe cause is probably the addition of `related_name` to a [`user` field](https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/models.py#L31) which is not represented in the initial [migration](https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/default/migrations/0001_initial.py#L82-L83).\n\nWhen I manually adjusted the initial migration to include the related_name field, django seemed to treat it just fine.\n", "created_at": "2015-01-04T04:37:39Z"}, {"body": "The sorting method to get the primary email email is reversed. \n\nNote the default behavior of python sorting on a Boolean arrays is to putting False first. for example.\n\n> > > a=[True,False]\n> > > a.sort()\n> > > a\n> > > [False, True]\n", "created_at": "2015-01-02T14:21:50Z"}, {"body": "Added the ability to configure the certificate validation.\nChange through settings.py SOCIAL_AUTH_NAME_VERIFY_SSL = False to disable certificate validation.\n", "created_at": "2015-01-01T23:02:05Z"}, {"body": "Support for Slack https://api.slack.com/docs/oauth\n", "created_at": "2014-12-29T04:37:06Z"}, {"body": "First, thank you!\n\nMy question is as follows:\n\nThe user name is saved in social_auth_usersocialauth as follows\n\nusername =First Name + Last Name or Last Name + First Name,\n\nBut I would like to get the real username (endere\u00e7ousername) of facebook http://www.facebook.com/adreessusername.\n\n  I can get this value indirectly, but there is an easier way to do this?\n", "created_at": "2014-12-26T15:37:26Z"}, {"body": "- Capitalise GitHub consistently\n- Change App Id and Secret to reflect GitHub's naming\n- Use gender-neutral language when talking about people\n", "created_at": "2014-12-24T15:58:06Z"}, {"body": "", "created_at": "2014-12-19T14:44:24Z"}, {"body": "version 0.7.24\nI am integrating google oauth2 to my website using django social auth. The problem is that with django social auth , I get an access_token like:\n\nya29.2QCqpS-uKGXMNOP8yZnN6Z-F5LfVnyd7jwa8TaLP43nTEp2NUPB_p7Hi\n\nWhile with the code sample from google code the access token is like :\n\nya29.2QCVXKc7XSNR3QxqRVAi0Z8Uz6mvolDGpezbZ9_r_oq7CXt01WvE9oUb90HXaynOLE4J8PjA5pzYDB\n\nThe first one does not work while the second one works fine\n\ndoes anyone have any idea on this ?\n\nI even tried to compare the https request send to google , the parameters are identical  same for url \n\nI have completely no idea of this problem \n", "created_at": "2014-12-13T04:32:09Z"}, {"body": "I have set the SOCIAL_AUTH_LINKEDIN_FIELD_OAUTH2_SELECTORS field in my Django Settings. I know that it is being used becuase when I remove the field I get an error when accessing the backend. However when I use it and include the selectors I want it is not being merged into the default selectors listed.\n\nThe attached screenshot results in only the default selectors being printed to the screen:\n\n![screen shot 2014-12-12 at 3 01 17 pm](https://cloud.githubusercontent.com/assets/68735/5420874/d2a278f4-820f-11e4-9add-910a6bbc73f9.png)\n", "created_at": "2014-12-12T23:02:29Z"}, {"body": "Hello, Ember Torii (http://vestorly.github.io/torii/demo.html) is a front-end library that supplies an \"authorizationCode\" which can be sent to a server. In my case I'm sending it to an API bulid with python.\n\nI am trying to use this library to retrieve an `access_token` from that `code`. I tried various things, but it seems hard to piece out the part that would grab the access_token credentials. Python-social-auth seems to make the assumption that you're running within a framework and it is difficult to use in a minimal scripted manner.\n\nI cannot find a way to fetch an `access_token` from a `code`.\n\n```\n>>> from social.backends import facebook\n>>> f = facebook.Facebook2OAuth2()\n>>> f.request_access_token('foobar')\nTraceback (most recent call last):\n  File \"<console>\", line 1, in <module>\n  File \"/venv/local/lib/python2.7/site-packages/social/backends/oauth.py\", line 344, in request_access_token\n    return self.get_json(*args, **kwargs)\n  File \"/venv/local/lib/python2.7/site-packages/social/backends/base.py\", line 226, in get_json\n    return self.request(url, *args, **kwargs).json()\n  File \"/venv/local/lib/python2.7/site-packages/social/backends/base.py\", line 212, in request\n    kwargs.setdefault('timeout', self.setting('REQUESTS_TIMEOUT') or\n  File \"/venv/local/lib/python2.7/site-packages/social/backends/base.py\", line 29, in setting\n    return self.strategy.setting(name, default=default, backend=self)\nAttributeError: 'NoneType' object has no attribute 'setting'\n>>> \n```\n\nI would suggest keeping things isolated so developers can cherrypick functions from this library. As it stands, it seems like my options are either\"\n1. Use the full stack that this provides, or \n2. Implement this on my own\n\nIdea for usage:\n\n```\n>>> from social.backends import facebook\n>>> f = facebook.Facebook2OAuth2()\n>>> f.settings('KEY', 'FOO')\n>>> f.settings('SECRET', 'BAR')\n>>> f.request_access_token('foobar')\n{'access_token': '123456789'}\n```\n\nIf this is already possible, what is the necessary code? \n\nThank you.\n", "created_at": "2014-12-12T00:28:31Z"}, {"body": "A recent change to associate_by_email which queries users using iexact is not supported on Google App Engine's NoSql datastore. Please add a check that iexact is supported, and if not, then don't do iexact query. An alternative is to just lower() the email in the detail dict.\n", "created_at": "2014-12-11T12:55:01Z"}, {"body": "Currently python-social-auth only has an OAuth1 implementation.\n\nhttps://developer.yahoo.com/oauth2/guide/\n", "created_at": "2014-12-10T06:05:18Z"}, {"body": "I'm trying to leverage the Facebook, Google and Twitter backends. My relevant settings are as follows, and I have all of my accounts at 3rd parties configured plus the key settings:\n\n```\nINSTALLED_APPS = {\n    . . .\n    'social.apps.django_app.default',\n}\n\n AUTHENTICATION_BACKENDS = (\n    'social.backends.facebook.FacebookOAuth2',\n    'social.backends.google.GoogleOAuth2',\n    'social.backends.twitter.TwitterOAuth',\n    . . .\n)\n\nTEMPLATE_CONTEXT_PROCESSORS = (\n   'django.contrib.auth.context_processors.auth',\n   'django.core.context_processors.debug',\n   'django.core.context_processors.i18n',\n   'django.core.context_processors.media',\n   'django.core.context_processors.static',\n   'django.core.context_processors.tz',\n   'django.contrib.messages.context_processors.messages',\n   'social.apps.django_app.context_processors.backends',\n   'social.apps.django_app.context_processors.login_redirect',\n)\n\nSESSION_ENGINE = 'django.contrib.sessions.backends.cache'\nSESSION_COOKIE_SECURE = False\nSESSION_COOKIE_HTTPONLY = False\n```\n\nRegardless of which provider I use, when I am redirected back from the provider, I receive the `AuthStateMissing Session value state missing.` error. What am I doing wrong?\n", "created_at": "2014-12-08T13:55:32Z"}, {"body": "[actions.do_complete](https://github.com/omab/python-social-auth/blob/v0.2.1/social/actions.py#L46) does the following:\n\n``` python\nuser_model = backend.strategy.storage.user.user_model()\nif user and not isinstance(user, user_model):\n    return user\n```\n\nunfortunately, user is an instance of `werkzeug.local.LocalProxy` in flask, so i get \u201credirected\u201d to the user object, resulting in an error.\n", "created_at": "2014-12-08T06:54:04Z"}, {"body": "Python Social Auth has suddenly stopped working for me. I have the Facebook, Twitter and Google backends configured, but now I'm getting this error when clicking one of the authorization links:\n\n```\n<django.utils.functional.lazy.<locals>.__proxy__ object at 0x7feb8a56f5f8> is not JSON serializable\n```\n\nMy project is built on Python 3.4 and Django 1.7.1.\n", "created_at": "2014-12-08T03:39:11Z"}, {"body": "http://psa.matiasaguirre.net/docs/configuration/settings.html#miscellaneous-settings\n\n\"Set this to a list of fields you only want to set for newly created users and avoid updating on further logins.\"\n\nFields other than username and email specified in this setting don't get set on creation though.\n", "created_at": "2014-12-04T22:22:47Z"}, {"body": "I am using Django and exceptions are not gracefully handled (returns 500 vs 400 with error message) for malformed requests such as visiting complete url without any parameters:\n\n```\nTraceback (most recent call last):\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/django/contrib/staticfiles/handlers.py\", line 64, in __call__\n    return self.application(environ, start_response)\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/django/core/handlers/wsgi.py\", line 187, in __call__\n    response = self.get_response(request)\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/django/core/handlers/base.py\", line 199, in get_response\n    response = self.handle_uncaught_exception(request, resolver, sys.exc_info())\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/django/core/handlers/base.py\", line 236, in handle_uncaught_exception\n    return debug.technical_500_response(request, *exc_info)\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/django_extensions/management/technical_response.py\", line 5, in null_technical_500_response\n    six.reraise(exc_type, exc_value, tb)\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/six.py\", line 625, in reraise\n    raise value\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/django/core/handlers/base.py\", line 111, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/social/apps/django_app/utils.py\", line 52, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/social/apps/django_app/views.py\", line 23, in complete\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/social/actions.py\", line 43, in do_complete\n    user = backend.complete(user=user, *args, **kwargs)\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/social/backends/base.py\", line 40, in complete\n    return self.auth_complete(*args, **kwargs)\n  File \"/Volumes/Data/Users/miki725/.virtualenvs/test-py3/lib/python3.4/site-packages/social/backends/facebook.py\", line 61, in auth_complete\n    raise AuthMissingParameter(self, 'code')\nsocial.exceptions.AuthMissingParameter: Missing needed parameter code\n```\n", "created_at": "2014-12-04T16:40:06Z"}, {"body": "Could any one explain why this replace is done ?\nMoreover, the code  in function does not remove the original backend which has a hyphen in the name. \nThis cause my app got a backend list with google_oauth2 and google-oauth2 at the same time.\n\ndef social_auth_by_name_backends(request):\n\"\"\"Load Social Auth current user data to context.\nWill add a social_auth object whose attribute names are the names of each\nprovider, e.g. social_auth.facebook would be the facebook association or\nNone, depending on the logged in user's current associations. Providers\nwith a hyphen have the hyphen replaced with an underscore, e.g.*\ngoogle-oauth2 becomes google_oauth2 when referenced in templates.*\n\"\"\"\n", "created_at": "2014-12-01T12:43:55Z"}, {"body": "UnknownMigration: Migration 'default:0001_initial' probably doesn't exist.\nTraceback (most recent call last):\n  File \"/Users/user/Sites/user/venv/lib/python2.7/site-packages/south/migration/base.py\", line 302, in migration\n    migration = **import**(full_name, {}, {}, ['Migration'])\n  File \"/Users/user/Sites/user/venv/lib/python2.7/site-packages/social/apps/django_app/default/migrations/0001_initial.py\", line 4, in <module>\n    from django.db import models, migrations\nImportError: cannot import name migrations\n\nWas returned when trying to migrate my Django (1.5.1) project. Runs fine removing Python-Social-Auth seen this referenced in Issue #353 as well. Appears to not work with the latest South.\n", "created_at": "2014-11-28T02:19:22Z"}, {"body": "It appears that the Strava backend is not working properly. I am getting the following response:\n\nHTTPError at /complete/strava/\n401 Client Error: Unauthorized\n\nThe other authentication backends I have tried are working fine. I would not rule out that it's a configuration issue, but I have double checked all the settings and they seem correct to me.\n", "created_at": "2014-11-28T00:07:32Z"}, {"body": "Instructions are broken when using South / Django 1.6 as South will try to use the default 'migrations' directory and fail.\n\nThis tells South to use the alternate directory.\n", "created_at": "2014-11-27T12:21:15Z"}, {"body": "load_backends return backends maintaining order\n\nAdd method to return social profile url by SocialAuth instance if exists.\n", "created_at": "2014-11-27T09:38:53Z"}, {"body": "", "created_at": "2014-11-26T01:12:56Z"}, {"body": "Hello all,\n\nI'm working on a project that uses Django Rest Framework and PSA, and i want to register new users by getting the access_token from JS (facebook SDK, twitter) and send it to the backend which should return a Token (DRF Token) to the frontend, so users can send authenticated requests, but if there is no user identified by the access_token in the database, PSA should create a new one and returns it his/her Token, otherwise just return the Token\n\nI did something like that which works for existing users, but doesn't create a new one :\n\n``` python\n@api_view(['GET'])\n@psa('social:complete')\ndef get(request, backend):\n    \"\"\"\n    Get user's Token key\n    \"\"\"\n    try:\n        access_token = request.GET.get('access_token')\n        user = request.backend.do_auth(access_token)\n        if user:\n            return Response({'token': Token.objects.get_or_create(user=user)[0].key})\n    except Exception, e:\n        logger.error('Exception authenticating user with access_token: %s, Error: %s' % (access_token, str(e)))\n    return Response({'detail': 'An error occurred. Please check your access_token'}, status=status.HTTP_403_FORBIDDEN)\n```\n\nThank you\n", "created_at": "2014-11-25T12:15:51Z"}, {"body": "As of September 30, 2014, Orkut [has been shut down](https://support.google.com/orkut/?hl=en), so there's no need for the corresponding backend anymore.\n\nI think the presence of Orkut might confuse some people, also it might give a wrong impression about the up-to-dateness of this library.\nLogging a deprecation-warning might be the better choice though, since it preserves the backward-compatibility. What do you think?\n", "created_at": "2014-11-24T18:59:09Z"}, {"body": "Moves the popping of the redirect value from the session to after the\npipe line executes.\n", "created_at": "2014-11-21T14:10:12Z"}, {"body": "First of all thanks a lot for this great project! It's amazing how many providers are supported and how well everything works. Something I'm missing is authentication that is not session based like API calls. There are a lot of questions and posts regarding authenticating accounts created by python-social-auth when working with an API created with Django REST Framework. Some examples:\n\nhttp://stackoverflow.com/questions/26658130/how-to-authenticate-by-access-token-in-code-using-python-social-auth\nhttps://groups.google.com/forum/#!topic/django-rest-framework/ACKx1kY7kZM\nhttp://blog.wizer.fr/2013/11/angularjs-facebook-with-a-django-rest-api/\n\nHowever, all these questions and posts suggest to use something like the use-case from the docs (http://psa.matiasaguirre.net/docs/use_cases.html#signup-by-oauth-access-token) and maybe an additional auth_by_token endpoint which allows to check if a token is valid. But if you want to do stateless API calls, that is not enough, since you don't have sessions in this case. So it is necessary to check access_tokens against the DB, like it is done by e.g. http://www.django-rest-framework.org/api-guide/authentication#django-oauth-toolkit (there are more options for DRF, but this seems to be the most active project and supports Python 3).\ndjango-oauth-toolkit provides an AUTHENTICATION_CLASS and Permission classes to check for scopes.\nIt would be great if python-social-auth had the same, to be able to make requests with bearer tokens and authenticate users that way.\n", "created_at": "2014-11-21T00:00:28Z"}, {"body": "Useful for when an alternate User.EMAIL_FIELD is defined.\n", "created_at": "2014-11-19T22:22:35Z"}, {"body": "I've added Khan Academy backend support. The OAuth 1.0 on Khan Academy's side is implemented differently than the other OAuth backends that are present in `python-social-auth` so I have introduced a mid-class called BrowserBasedOAuth as there are only two calls and the `REQUEST_TOKEN_URL` is retrieved by a browser call.\n", "created_at": "2014-11-18T22:33:28Z"}, {"body": "There are bugs in tornado strategy (tornado_strategy.py) which does not allow using ?next=/foo in login redirect. To fix them it is necessary to replace with these functions: \n\n```\ndef request_data(self, merge=True):\n    return {k: v[0] for k, v in self.request.arguments.iteritems()}\n\ndef session_get(self, name, default=None):\n    val = self.request_handler.get_secure_cookie(name)\n    return val or default\n```\n\nP.S.\nWhy it so, see in tornado documentation.\n", "created_at": "2014-11-18T01:19:56Z"}, {"body": "Hello,\n\nI recently migrated [1flow](https://github.com/1flow/1flow) from DSA to PSA, following [the official doc](http://python-social-auth.readthedocs.org/en/latest/configuration/porting_from_dsa.html) and [this one](https://blog.dbrgn.ch/2014/10/30/migrating-django-social-auth/) as a complement.\n\nI cleared all sessions.\n\nAfter that, I'm unable to _signin_ with any social account (tested twitter & googleo2). I'm always redirected to the `LOGIN_ERROR` url, but there is no `message`, no exception, nothing.\n\nWhat is strange is that associating social accounts to a local one works perfectly, so API keys & secrets name change typos seem to be out of cause.\n\nWhat I tried :\n- using PSA latest from PyPI, and @master from github.\n- removing all my pipeline functions. This lead me to fix portability bugs (backend classes name changes\u2026), but even with only the default pipeline left untouched, I still cannot signin.\n\nSettings files:\n- Django auth backends are [in the middle of common settings](https://github.com/1flow/1flow/blob/develop/oneflow/settings/snippets/common.py#L686).\n- [PSA settings](https://github.com/1flow/1flow/blob/develop/oneflow/settings/snippets/social_auth.py).\n- API keys are [fetched from the environment](https://github.com/1flow/1flow/blob/develop/oneflow/settings/snippets/api_keys.py) as suggested by [12factor](http://12factor.net/config).\n\nThe only thing I did not set is `SOCIAL_AUTH_URL_NAMESPACE = 'social'` because I don't know if I need a custom namespace or not; I guessed not, because association/disconnect works as is.\n\nI've started to print() everything at diverse locations of PSA's `do_complete()` and other functions, without any relevant result. I've even re-implemented [a `debug()` pipeline fuction](https://github.com/1flow/1flow/blob/develop/oneflow/base/social_pipeline.py#L38), but the pipeline isn't entered at all (the function is not called, `do_complete()` returns no user before).\n\nAny hint on what I could search / change / do to find where the issue comes from\u00a0? \nMy hint is that everything worked fine with DSA ;-)\n\nPS: I use Django 1.6. we had mongodb in the past but DSA tables were stored in PostgreSQL; now i've nearly switched all back to PG only, so there should be nothing special about PSA on this side.\n\nthanks & best regards,\n", "created_at": "2014-11-17T09:37:53Z"}, {"body": "Hi everyone.\n\n@omab, i'm using the python social auth (great lib, thanks o/), and after already installed, i don't know what i need to configure, but every error message of server-side return this:\n\n```\nTemplateDoesNotExist at /login/\nregistration/login.html\n```\n\nI already created this file, but is worse.\n\nI'm missing all infos of debug default of django, like number of the problem, e.g. because every error return the message above :/\n\nMy settings.py/settings_local.py\nhttps://gist.github.com/raphaelcuba/ecff4a452e68adba2e23\n\nThanks!\n", "created_at": "2014-11-16T19:33:33Z"}, {"body": "Hello, I tried to run a small example to integrate github and linkedin in the project. I run into this issue and I really do not know what this issue means.\n\n![screen shot 2014-11-14 at 8 40 39 pm](https://cloud.githubusercontent.com/assets/3505844/5056121/fe115652-6c40-11e4-83b4-133e0ec9791b.png)\n\nRequest Method: GET\nRequest URL:    http://llovebaimuda.herokuapp.com:8000/complete/github/?code=b0753de9adf58c957144&redirect_state=kJ6UyaCkL8TlOEcEeHEXVaygON4MOcfK&state=kJ6UyaCkL8TlOEcEeHEXVaygON4MOcfK\nDjango Version: 1.7.1\nException Type: AttributeError\nException Value:  \n'GithubBackend' object has no attribute 'auth_allowed'\nException Location: /Users/haohan/Desktop/dota2/lib/python2.7/site-packages/social/pipeline/social_auth.py in auth_allowed, line 14\nPython Executable:  /Users/haohan/Desktop/dota2/bin/python\nPython Version: 2.7.5\n\nEnvironment:\nDjango : 1.7.1\nPython : 2.7.5\ndjango-social-auth : 0.7.28 \n\nsettings.py:\n# encoding=utf-8\n\nfrom os.path import abspath, dirname, basename, join\nROOT_PATH = abspath(dirname(**file**))\nDEBUG = True\nTEMPLATE_DEBUG = DEBUG\nADMINS = (\n    # ('Your Name', 'your_email@example.com'),\n)\nMANAGERS = ADMINS\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': 'test.db'\n    }\n}\nALLOWED_HOSTS = []\nTIME_ZONE = 'America/Chicago'\nLANGUAGE_CODE = 'en-us'\nSITE_ID = 1\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nMEDIA_ROOT = ''\nMEDIA_URL = ''\nSTATIC_ROOT = ''\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (\n\n)\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n)\nSECRET_KEY = 'okfv7waevie($g9v@90mm4j(!yf22wy55w@krj%ff+t833am$h'\n\nTEMPLATE_LOADERS = (\n    'django.template.loaders.filesystem.Loader',\n    'django.template.loaders.app_directories.Loader',\n)\nMIDDLEWARE_CLASSES = (\n    'django.middleware.common.CommonMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n)\n\nROOT_URLCONF = 'social_auth_demo.urls'\n\nWSGI_APPLICATION = 'social_auth_demo.wsgi.application'\n\nTEMPLATE_DIRS = (\n    join(ROOT_PATH, 'templates'),\n\n)\nINSTALLED_APPS = (\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.sites',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'social_auth',\n    'app',\n)\n\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'filters': {\n        'require_debug_false': {\n            '()': 'django.utils.log.RequireDebugFalse'\n        }\n    },\n    'handlers': {\n        'mail_admins': {\n            'level': 'ERROR',\n            'filters': ['require_debug_false'],\n            'class': 'django.utils.log.AdminEmailHandler'\n        }\n    },\n    'loggers': {\n        'django.request': {\n            'handlers': ['mail_admins'],\n            'level': 'ERROR',\n            'propagate': True,\n        },\n    }\n}\n\nSOCIAL_AUTH_SANITIZE_REDIRECTS = False\nLOGIN_REDIRECT_URL = 'http://llovebaimuda.herokuapp.com:8000'\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = 'http://llovebaimuda.herokuapp.com:8000'\nSOCIAL_AUTH_WEIBO_LOGIN_REDIRECT_URL = 'http://llovebaimuda.herokuapp.com:8000'\n\nTEMPLATE_CONTEXT_PROCESSORS = (\n    'django.contrib.auth.context_processors.auth',\n    'social_auth.context_processors.social_auth_by_type_backends',\n    'social_auth.context_processors.social_auth_login_redirect',\n)\n\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social_auth.backends.pipeline.social.social_auth_user',\n\n```\n'social_auth.backends.pipeline.associate.associate_by_email',\n'social_auth.backends.pipeline.misc.save_status_to_session',\n'social_auth.backends.pipeline.user.create_user',\n'social_auth.backends.pipeline.social.associate_user',\n'social_auth.backends.pipeline.social.load_extra_data',\n'social_auth.backends.pipeline.user.update_user_details',\n'social_auth.backends.pipeline.misc.save_status_to_session',\n```\n\n)\n\nSOCIAL_AUTH_LOGIN_URL = '/login-url/'\nSOCIAL_AUTH_LOGIN_ERROR_URL = '/login-error/'\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/logged-in/'\nSOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/new-users-redirect-url/'\nSOCIAL_AUTH_NEW_ASSOCIATION_REDIRECT_URL = '/new-association-redirect-url/'\n\nSOCIAL_AUTH_SANITIZE_REDIRECTS = False\n\nAUTHENTICATION_BACKENDS = (\n    'social_auth.backends.contrib.linkedin.LinkedinBackend',\n    'social_auth.backends.contrib.github.GithubBackend',\n    'social_auth.backends.contrib.weibo.WeiboBackend',\n    'django.contrib.auth.backends.ModelBackend',\n)\n\nWEIBO_CLIENT_KEY = '3257697480'\nWEIBO_CLIENT_SECRET = '79aa66a53c97de81ba84118125cde021'\n\nSOCIAL_AUTH_QQ_KEY = '101145292'\nSOCIAL_AUTH_QQ_SECRET = '993fbbc3c7d9ed0b3a95b613c39f918d'\n\nSOCIAL_AUTH_DOUBAN_OAUTH2_KEY = '0630fb0303a5947e1292f1090af0bd7a'\nSOCIAL_AUTH_DOUBAN_OAUTH2_SECRET = 'e92927cfa3cefe4f'\n\nGITHUB_APP_ID = '2c9c4ef0200a6ac0691f'\nGITHUB_API_SECRET ='4ce11420819c133cee2ddab4fc9be165db642609' \nLINKEDIN_CONSUMER_KEY = '77tchirdkqchca'\nLINKEDIN_CONSUMER_SECRET ='h49zxDVFeHfNzu3K'  \n", "created_at": "2014-11-15T01:53:41Z"}, {"body": "![screen shot 2014-11-14 at 8 40 36 pm](https://cloud.githubusercontent.com/assets/3505844/5056068/89ea6e78-6c3e-11e4-9de4-5df950425a7e.png)\nEnvironment:\nDjango Version: 1.7.1\nPython Version: 2.7.3\n\nSetting:\n# encoding=utf-8\n\nfrom os.path import abspath, dirname, basename, join\n\nROOT_PATH = abspath(dirname(**file**))\n\nDEBUG = True\nTEMPLATE_DEBUG = DEBUG\n\nADMINS = (\n    # ('Your Name', 'your_email@example.com'),\n)\n\nMANAGERS = ADMINS\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': 'test.db'\n    }\n}\n# Hosts/domain names that are valid for this site; required if DEBUG is False\n# See https://docs.djangoproject.com/en/1.4/ref/settings/#allowed-hosts\n\nALLOWED_HOSTS = []\n# Local time zone for this installation. Choices can be found here:\n# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name\n# although not all choices may be available on all operating systems.\n# In a Windows environment this must be set to your system time zone.\n\nTIME_ZONE = 'America/Chicago'\n# Language code for this installation. All choices can be found here:\n# http://www.i18nguy.com/unicode/language-identifiers.html\n\nLANGUAGE_CODE = 'en-us'\n\nSITE_ID = 1\n# If you set this to False, Django will make some optimizations so as not\n# to load the internationalization machinery.\n\nUSE_I18N = True\n# If you set this to False, Django will not format dates, numbers and\n# calendars according to the current locale.\n\nUSE_L10N = True\n# If you set this to False, Django will not use timezone-aware datetimes.\n\nUSE_TZ = True\n# Absolute filesystem path to the directory that will hold user-uploaded files.\n# Example: \"/home/media/media.lawrence.com/media/\"\n\nMEDIA_ROOT = ''\n# URL that handles the media served from MEDIA_ROOT. Make sure to use a\n# trailing slash.\n# Examples: \"http://media.lawrence.com/media/\", \"http://example.com/media/\"\n\nMEDIA_URL = ''\n# Absolute path to the directory static files should be collected to.\n# Don't put anything in this directory yourself; store your static files\n# in apps' \"static/\" subdirectories and in STATICFILES_DIRS.\n# Example: \"/home/media/media.lawrence.com/static/\"\n\nSTATIC_ROOT = ''\n# URL prefix for static files.\n# Example: \"http://media.lawrence.com/static/\"\n\nSTATIC_URL = '/static/'\n# Additional locations of static files\n\nSTATICFILES_DIRS = (\n    # Put strings here, like \"/home/html/static\" or \"C:/www/django/static\".\n    # Always use forward slashes, even on Windows.\n    # Don't forget to use absolute paths, not relative paths.\n)\n# List of finder classes that know how to find static files in\n# various locations.\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n# 'django.contrib.staticfiles.finders.DefaultStorageFinder',\n\n)\n# Make this unique, and don't share it with anybody.\n\nSECRET_KEY = 'okfv7waevie($g9v@90mm4j(!yf22wy55w@krj%ff+t833am$h'\n# List of callables that know how to import templates from various sources.\n\nTEMPLATE_LOADERS = (\n    'django.template.loaders.filesystem.Loader',\n    'django.template.loaders.app_directories.Loader',\n# 'django.template.loaders.eggs.Loader',\n\n)\n\nMIDDLEWARE_CLASSES = (\n    'django.middleware.common.CommonMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    # Uncomment the next line for simple clickjacking protection:\n    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n)\n\nROOT_URLCONF = 'social_auth_demo.urls'\n# Python dotted path to the WSGI application used by Django's runserver.\n\nWSGI_APPLICATION = 'social_auth_demo.wsgi.application'\n\nTEMPLATE_DIRS = (\n    join(ROOT_PATH, 'templates'),\n    # Put strings here, like \"/home/html/django_templates\" or \"C:/www/django/templates\".\n    # Always use forward slashes, even on Windows.\n    # Don't forget to use absolute paths, not relative paths.\n)\n\nINSTALLED_APPS = (\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.sites',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # Uncomment the next line to enable the admin:\n    # 'django.contrib.admin',\n    # Uncomment the next line to enable admin documentation:\n    # 'django.contrib.admindocs',\n    'social_auth',\n    'app',\n)\n# A sample logging configuration. The only tangible logging\n# performed by this configuration is to send an email to\n# the site admins on every HTTP 500 error when DEBUG=False.\n# See http://docs.djangoproject.com/en/dev/topics/logging for\n# more details on how to customize your logging configuration.\n\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'filters': {\n        'require_debug_false': {\n            '()': 'django.utils.log.RequireDebugFalse'\n        }\n    },\n    'handlers': {\n        'mail_admins': {\n            'level': 'ERROR',\n            'filters': ['require_debug_false'],\n            'class': 'django.utils.log.AdminEmailHandler'\n        }\n    },\n    'loggers': {\n        'django.request': {\n            'handlers': ['mail_admins'],\n            'level': 'ERROR',\n            'propagate': True,\n        },\n    }\n}\n\nSOCIAL_AUTH_SANITIZE_REDIRECTS = False\nLOGIN_REDIRECT_URL = 'http://llovebaimuda.herokuapp.com:8000'\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = 'http://llovebaimuda.herokuapp.com:8000'\nSOCIAL_AUTH_WEIBO_LOGIN_REDIRECT_URL = 'http://llovebaimuda.herokuapp.com:8000'\n\nTEMPLATE_CONTEXT_PROCESSORS = (\n    'django.contrib.auth.context_processors.auth',\n    # login \u5728template\u4e2d\u53ef\u4ee5\u7528 \"{% url socialauth_begin 'douban-oauth2' %}\"\n    'social_auth.context_processors.social_auth_by_type_backends',\n    'social_auth.context_processors.social_auth_login_redirect',\n)\n\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social_auth.backends.pipeline.social.social_auth_user',\n\n```\n'social_auth.backends.pipeline.associate.associate_by_email',\n'social_auth.backends.pipeline.misc.save_status_to_session',\n'social_auth.backends.pipeline.user.create_user',\n'social_auth.backends.pipeline.social.associate_user',\n'social_auth.backends.pipeline.social.load_extra_data',\n'social_auth.backends.pipeline.user.update_user_details',\n'social_auth.backends.pipeline.misc.save_status_to_session',\n```\n\n)\n\nSOCIAL_AUTH_LOGIN_URL = '/login-url/'\nSOCIAL_AUTH_LOGIN_ERROR_URL = '/login-error/'\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/logged-in/'\nSOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/new-users-redirect-url/'\nSOCIAL_AUTH_NEW_ASSOCIATION_REDIRECT_URL = '/new-association-redirect-url/'\n\nSOCIAL_AUTH_SANITIZE_REDIRECTS = False\n\nAUTHENTICATION_BACKENDS = (\n    'social_auth.backends.contrib.linkedin.LinkedinBackend',\n    'social_auth.backends.contrib.github.GithubBackend',\n    'social_auth.backends.contrib.weibo.WeiboBackend',\n    'django.contrib.auth.backends.ModelBackend',\n)\n\nGITHUB_APP_ID = ''\nGITHUB_API_SECRET = ''\n\nRequest Method: GET\nRequest URL:    http://llovebaimuda.herokuapp.com:8000/complete/github/?code=b0753de9adf58c957144&redirect_state=kJ6UyaCkL8TlOEcEeHEXVaygON4MOcfK&state=kJ6UyaCkL8TlOEcEeHEXVaygON4MOcfK\nDjango Version: 1.7.1\nException Type: AttributeError\nException Value:  \n'GithubBackend' object has no attribute 'auth_allowed'\nException Location: /Users/haohan/Desktop/dota2/lib/python2.7/site-packages/social/pipeline/social_auth.py in auth_allowed, line 14\nPython Executable:  /Users/haohan/Desktop/dota2/bin/python\nPython Version: 2.7.5\nPython Path:  \n['/Users/haohan/link',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/oic-0.6.0beta-py2.7.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/pyOpenSSL-0.14-py2.7.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/argparse-1.2.1-py2.7.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/importlib-1.0.3-py2.7.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/alabaster-0.6.1-py2.7.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/Beaker-1.6.4-py2.7.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/pyjwkest-0.4.0-py2.7.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/Mako-1.0.0-py2.7.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/CherryPy-3.2.4-py2.7.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/pycrypto-2.6.1-py2.7-macosx-10.9-intel.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/requests-2.4.3-py2.7.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/six-1.8.0-py2.7.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/cryptography-0.6.1-py2.7-macosx-10.9-intel.egg',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages/PyJWT-0.3.0-py2.7.egg',\n '/Users/haohan/Desktop/dota2/lib/python27.zip',\n '/Users/haohan/Desktop/dota2/lib/python2.7',\n '/Users/haohan/Desktop/dota2/lib/python2.7/plat-darwin',\n '/Users/haohan/Desktop/dota2/lib/python2.7/plat-mac',\n '/Users/haohan/Desktop/dota2/lib/python2.7/plat-mac/lib-scriptpackages',\n '/Users/haohan/Desktop/dota2/Extras/lib/python',\n '/Users/haohan/Desktop/dota2/lib/python2.7/lib-tk',\n '/Users/haohan/Desktop/dota2/lib/python2.7/lib-old',\n '/Users/haohan/Desktop/dota2/lib/python2.7/lib-dynload',\n '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7',\n '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin',\n '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk',\n '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac',\n '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages',\n '/Users/haohan/Desktop/dota2/lib/python2.7/site-packages']\nServer time:    Fri, 14 Nov 2014 19:29:32 -0600\n", "created_at": "2014-11-15T01:43:25Z"}, {"body": "Ran into a 401 issue today when using psa for Reddit with python3. The bug arises from unicode/byte problems (surprise! It's python3).\n\nBasically, the RedditOAuth2 backend authentication header is malformed because \n\n``` python\n' {} '.format(b'byte_string') == \" b'byte_string' \"\n```\n\nNote the extra enclosing `\" \"`. I hacked around the problem by replacing the following in `reddit.py`:\n\n``` python\nclass RedditOAuth2(BaseOAuth2):\n    (...)\n    def auth_headers(self):\n        # Reddit uses HTTPBasic authentication; throw into header\n        auth_header = b'Basic ' + base64.urlsafe_b64encode(\n            '{0}:{1}'.format(*self.get_key_and_secret()).encode()\n        )\n        return {'Authorization': auth_header, }\n```\n\nOf course, this won't work if the key and/or secret are byte strings. \n\nOn a philosophical level, it seems to me that the \"right\" way to solve this problem is to require that all URIs, application keys, client secrets, etc. be binary strings (since, if I understand correctly, that's what they really are). \n\nBut don't try this right now or you'll run into a world of hurt. For example, you'll get this problem in the StripeOAuth2 backend if a developer encodes the client secret as a byte string.\n\n-Mike\n", "created_at": "2014-11-15T01:16:51Z"}, {"body": "After installation like described in the docs I get this error:\n\n```\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/usr/local/lib/python3.4/dist-packages/django/core/management/__init__.py\", line 385, in execute_from_command_line\n    utility.execute()\n  File \"/usr/local/lib/python3.4/dist-packages/django/core/management/__init__.py\", line 354, in execute\n    django.setup()\n  File \"/usr/local/lib/python3.4/dist-packages/django/__init__.py\", line 21, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/usr/local/lib/python3.4/dist-packages/django/apps/registry.py\", line 85, in populate\n    app_config = AppConfig.create(entry)\n  File \"/usr/local/lib/python3.4/dist-packages/django/apps/config.py\", line 87, in create\n    module = import_module(entry)\n  File \"/usr/lib/python3.4/importlib/__init__.py\", line 109, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 2231, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 2214, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 2189, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  File \"<frozen importlib._bootstrap>\", line 2231, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 2214, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 2203, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"<frozen importlib._bootstrap>\", line 1448, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  File \"/usr/local/lib/python3.4/dist-packages/social/apps/django_app/__init__.py\", line 14, in <module>\n    from social.apps.django_app.utils import load_strategy\n  File \"/usr/local/lib/python3.4/dist-packages/social/apps/django_app/utils.py\", line 20, in <module>\n    Strategy = module_member(STRATEGY)\n  File \"/usr/local/lib/python3.4/dist-packages/social/utils.py\", line 23, in module_member\n    module = import_module(mod)\n  File \"/usr/local/lib/python3.4/dist-packages/social/utils.py\", line 17, in import_module\n    __import__(name)\n  File \"/usr/local/lib/python3.4/dist-packages/social/strategies/django_strategy.py\", line 11, in <module>\n    from social.strategies.base import BaseStrategy, BaseTemplateStrategy\n  File \"/usr/local/lib/python3.4/dist-packages/social/strategies/base.py\", line 8, in <module>\n    from social.store import OpenIdStore, OpenIdSessionWrapper\n  File \"/usr/local/lib/python3.4/dist-packages/social/store.py\", line 8, in <module>\n    from openid.store.interface import OpenIDStore as BaseOpenIDStore\n  File \"/usr/local/lib/python3.4/dist-packages/openid/__init__.py\", line 52, in <module>\n    if len(version_info) != 3:\nTypeError: object of type 'map' has no len()\n```\n\nI am new to django and python in general is there any hint what I can do?\n", "created_at": "2014-11-14T20:17:19Z"}, {"body": "Hello, i try to implement partial pipeline for disconnect. Documentation says: \n\n> When it\u2019s time to resume the process just redirect the user to /complete/<backend>/ or /disconnect/<backend>/ view. The pipeline will resume in the same function that cut the process.\n\nhttp://psa.matiasaguirre.net/docs/pipeline.html#partial-pipeline\n\nBut when view return redirect\n\n```\nreturn redirect('social:disconnect', backend=backend)\n```\n\ni get an error: GET /disconnect/<backend>/ HTTP/1.0\" 405\n\nI think this error because social:disconnect view allows only post requests: https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/views.py#L34\n\nHow can i implement partial pipline in this case?\n", "created_at": "2014-11-13T14:15:14Z"}, {"body": "Basically, if I login via google, then I logout, and then create an account manually (using a signup form), and then try try again to login via google (without first logging out, basically connecting the two accounts, one of which is already connected). Then it throws an error during the authentication pipeline. And I don't see any way to properly deal with the exception.  Is there a way to catch exceptions from the auth pipeline? I'm not finding any.\n", "created_at": "2014-11-12T02:19:23Z"}, {"body": "Basic function arguments fix.\n", "created_at": "2014-11-10T21:54:48Z"}, {"body": "Hello,\nI'm using a custom model:\n\n```\nfrom django.db import models\nfrom django.contrib.auth.models import BaseUserManager, AbstractBaseUser, PermissionsMixin\n\n\nGENDER_CHOICES = (\n    ('M', 'Male'),\n    ('F', 'Female'),\n)\n\nREGISTRATION_TYPE = (\n    ('1', 'Normal'),\n    ('2', 'Facebook'),\n    ('3', 'Twitter')\n)\n\n\nclass UserManager(BaseUserManager):\n\n    def create_user(self, email, password, **kwargs):\n        user = self.model(\n            email=self.normalize_email(email),\n            is_active=True,\n            **kwargs\n        )\n        user.set_password(password)\n        user.save(using=self._db)\n        return user\n\n    def create_superuser(self, email, password, **kwargs):\n        user = self.model(\n            email=email,\n            is_staff=True,\n            is_superuser=True,\n            is_active=True,\n            **kwargs\n        )\n        user.set_password(password)\n        user.save(using=self._db)\n        return user\n\n\nclass User(AbstractBaseUser, PermissionsMixin):\n\n    objects = UserManager()\n    USERNAME_FIELD = 'email'\n\n    username = models.CharField(max_length=32, null=True, blank=True)\n    email = models.EmailField(unique=True)\n    is_active = models.BooleanField(default=False)\n    is_staff = models.BooleanField(default=False)\n\n    is_moderator = models.BooleanField(default=True)\n    gender = models.CharField(max_length=1, choices=GENDER_CHOICES, null=True, blank=True)\n    registration_type = models.CharField(max_length=1, choices=REGISTRATION_TYPE, null=True, blank=True)\n\n    @property\n    def facebook_uid(self):\n        return self.social_auth.get(provider='facebook').uid\n\n```\n\nI'm getting error while I'm trying to logging with Facebook.\nSimply it redirects to SOCIAL_AUTH_LOGIN_ERROR_URL = '/login-error/'\n\nAny way to get a detailed error?\n\nThanks.\n", "created_at": "2014-11-08T18:39:34Z"}, {"body": "I have custom user model and I specified email as USERNAME_FIELD there:\n\n``` python\nclass User(AbstractBaseUser, PermissionsMixin):\n    username = models.CharField(max_length=50, unique=True, verbose_name=_('Username'))\n    ...\n    USERNAME_FIELD = 'email'\n```\n\nNow when I create new user I get this error:\n\n```\ncreate_user() takes at least 3 arguments (2 given)\n```\n\nI found piece of code in storage/django_orm.py that replaces my email field with username field:\n\n``` python\n@classmethod\n    def create_user(cls, *args, **kwargs):\n        if 'username' in kwargs:\n            kwargs[cls.username_field()] = kwargs.pop('username')\n        return cls.user_model().objects.create_user(*args, **kwargs)\n```\n\nSo, I think it would be better to at least check if cls.username_field() is not equal to \"email\":\n\n``` python\nif 'username' in kwargs and cls.username_field() != 'email':\n            kwargs[cls.username_field()] = kwargs.pop('username')\n```\n", "created_at": "2014-11-07T12:24:36Z"}, {"body": "When connecting Google OAUTH2 it does show me the Google login page but when I have logged in and I am being redirected to `/complete/google-oauth2/` I receive an error `401 Client Error: Unauthorized`.\n\nMy traceback: http://pastebin.com/YPbfgf6V.\n\nI have setted\n\n```\nSOCIAL_AUTH_GOOGLE_OAUTH2_KEY\nSOCIAL_AUTH_GOOGLE_OAUTH2_SECRET\nSOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE\n```\n", "created_at": "2014-11-05T12:45:12Z"}, {"body": "", "created_at": "2014-11-02T01:42:57Z"}, {"body": "Hey there,\n\nI'm working on a project that uses PSA 0.2.1, we used DSA then we migrated.\nWith DSA we used the param : GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {'access_type': 'offline'}, so we can refresh 'acces_token' for google-oauth2 whenever it's needed and that's because extras_data field contained a refresh_token, but this doesn't work anymore with PSA, when a new user is registred, the extras_data doesn't contain the refresh_token anymore.\n\nMy question is how can i get the refresh_token ? is there a settings param for that ?\n\nThanks\n", "created_at": "2014-10-31T20:10:16Z"}, {"body": "[In social.storage.base there is a property called `tokens`](https://github.com/omab/python-social-auth/blob/master/social/storage/base.py#L36-L39). In django-social-auth this used to return a dictionary containing different token types.\n\nNow it returns the access token:\n\n``` python\n@property\ndef tokens(self):\n    \"\"\"Return access_token stored in extra_data or None\"\"\"\n    return self.extra_data.get('access_token')\n```\n\nThe pluralized naming doesn't really make sense though. What about deprecating `tokens` and moving the functionality to an `access_token` property?\n", "created_at": "2014-10-30T10:09:38Z"}, {"body": "Deleting a leftover constant that was moved to social.pipeline.utils\n", "created_at": "2014-10-30T00:15:29Z"}, {"body": "past participle\n", "created_at": "2014-10-29T22:48:09Z"}, {"body": "When running makemigrations \n\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/allison/tmr/env/lib/python2.7/site-packages/django/core/management/**init**.py\", line 385, in execute_from_command_line\n    utility.execute()\n  File \"/Users/allison/tmr/env/lib/python2.7/site-packages/django/core/management/**init**.py\", line 377, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Users/allison/tmr/env/lib/python2.7/site-packages/django/core/management/base.py\", line 288, in run_from_argv\n    self.execute(_args, *_options.**dict**)\n  File \"/Users/allison/tmr/env/lib/python2.7/site-packages/django/core/management/base.py\", line 338, in execute\n    output = self.handle(_args, *_options)\n  File \"/Users/allison/tmr/env/lib/python2.7/site-packages/django/core/management/commands/makemigrations.py\", line 57, in handle\n    loader = MigrationLoader(None, ignore_no_migrations=True)\n  File \"/Users/allison/tmr/env/lib/python2.7/site-packages/django/db/migrations/loader.py\", line 48, in **init**\n    self.build_graph()\n  File \"/Users/allison/tmr/env/lib/python2.7/site-packages/django/db/migrations/loader.py\", line 173, in build_graph\n    self.load_disk()\n  File \"/Users/allison/tmr/env/lib/python2.7/site-packages/django/db/migrations/loader.py\", line 103, in load_disk\n    migration_module = import_module(\"%s.%s\" % (module_name, migration_name))\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/importlib/**init**.py\", line 37, in import_module\n    **import**(name)\n  File \"/Users/allison/tmr/env/lib/python2.7/site-packages/social_auth/migrations/0002_auto__add_unique_nonce_timestamp_salt_server_url__add_unique_associati.py\", line 19, in <module>\n    class Migration(SchemaMigration):\n  File \"/Users/allison/tmr/env/lib/python2.7/site-packages/social_auth/migrations/0002_auto__add_unique_nonce_timestamp_salt_server_url__add_unique_associati.py\", line 112, in Migration\n    models.update(custom_user_frozen_models(USER_MODEL))\n  File \"/Users/allison/tmr/env/lib/python2.7/site-packages/social_auth/utils.py\", line 270, in custom_user_frozen_models\n    extra_model = initial_user_migration.migration_class().models\nAttributeError: type object 'Migration' has no attribute 'models'\n\nWhat could be wrong?\n", "created_at": "2014-10-29T21:16:06Z"}, {"body": "Current migration for Django 1.7 is missing related_name argument for the UserSocialAuth.user field. If calling makemigrations command, this creates migration 0002 in social default app. AFAIK related_name shouldn't do any changes in database, so it should be safe to just add related_name=b'social_auth' argument to the CreateModel fields in 0001_initial.py.\n", "created_at": "2014-10-29T07:47:59Z"}, {"body": "Our Django application has response caching enabled for anonymous views, which results in requests that point to the `social.django_app.views.auth` view (e.g., from our \"log in\" link) potentially being served without calling through to the view.\n\nThe `auth` view calls `backend.start()` which ends up calling `clean_partial_pipeline()`.\n\nIs allowing this caching by design? If so, it means that one can't abandon a partial pipeline by clicking the \"log in\" link (in our app) since the cached response may be served, skipping the call to `clean_partial_pipeline()` and dropping the user back into the partial pipeline.\n\nIf it's not by design, then I suppose the `auth` view should be decorated with `django.views.decorators.cache.never_cache`.\n", "created_at": "2014-10-29T03:30:46Z"}, {"body": "Facebook is to change its api including the login service until the end of this year. Will psa be affected from this change? I'm using 0.1.26 with django 1.5.10.\n", "created_at": "2014-10-28T21:25:03Z"}, {"body": "I have previously been successful at implementing Google OAuth2 authentication with python social auth after following along this tutorial: http://www.artandlogic.com/blog/2014/04/tutorial-adding-facebooktwittergoogle-authentication-to-a-django-application/\n\nNow, I'm getting an ImportError, no module named google_auth that is a result of an error arising during template rendering, specifically pointing at this line:\n\n<a href=\"{% url 'social:begin' 'google-oauth2' %}?next={{ request.path }}\">Login</a>\n\nLooking through the traceback, it looks like django is either not using social's template context processors, or there is an issue with a reference within social.\n", "created_at": "2014-10-27T19:25:46Z"}, {"body": "UserSocialAuth migration was depending on user.Auth by default and not\nusing the user model specified by SOCIAL_AUTH_USER_MODEL\n", "created_at": "2014-10-26T15:12:08Z"}, {"body": "in the changelog, is the 0.2.0 heading missing?\n\non github, is the release 0.2.1 missing?\n", "created_at": "2014-10-24T21:53:31Z"}, {"body": "I can use python-social-auth with no problem in my local environment.\nWhen I try to deploy the server code online with domain http://app.mydomain.com, I got some problems.\n\nI set REDIRECT URI in instagram backend to http://app.mydomain.com, and add some settings in the settings file: (I got the settings from [here](http://stackoverflow.com/questions/19684715/python-social-auth-using-django-server-hostname-and-listening-port-as-redirect-u))\n\n```\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = 'http://app.mydomain.com/'\nSOCIAL_AUTH_SANITIZE_REDIRECTS = False\n```\n\nBut the redirect_uri sent from my server is still http://127.0.0.1:8000. I think that's from gunicorn? but I don't know what's the best way to change that.\n", "created_at": "2014-10-23T05:27:21Z"}, {"body": "My pipeline doesn't receive the request object (the Django request object). What it receives is a dictionary `request` (at the very beginning of the pipeline), in the form:\n\n```\nMergeDict(<QueryDict: {}>, <QueryDict: {u'state': [u'somecode'], u'code': [u'somecode']}>)\n```\n\nIs this intended? If so, how can I access the original request object?\n", "created_at": "2014-10-20T13:50:46Z"}, {"body": "I can able to get my user data from google+, facebook, twitter.But how can i save that user data in my db that i got from your api.\n", "created_at": "2014-10-20T05:49:01Z"}, {"body": "Django calls `related_name % {...}` in RelatedField.contribute_to_class which does not work on Python 3 as it does not support string formatting on byte-strings.\n", "created_at": "2014-10-16T21:20:15Z"}, {"body": "I am using python-social-auth in Django app that serves clients from both the web and mobile apps.\nThe main use case is logging in google+. \n\nThere is a google app registered with two client_ids (one web app, and one native app client id shared among iOS and Android). \nThe mobile app is able to authenticate and receives the auth_token on both mobile platforms.\nScope used:\nhttps://www.googleapis.com/auth/plus.me \nhttps://www.googleapis.com/auth/userinfo.email \nhttps://www.googleapis.com/auth/drive.file\n\nAuth in the browser works and the appropriate user is created along with the extra_data, holding the access_token.\n\nSo far so good.\n\nMy application fits to a use case described in the documentation: http://psa.matiasaguirre.net/docs/use_cases.html#signup-by-oauth-access-token \nI'd like to register the client, signing in on the mobile first. The acquired access_token is sent to the web app and the user is created but the auth_token is not saved to the extra_data.\n\nIs this the expected behavior? (I am using django rest framework for the api call but doing a form gives exactly the same result). \nWhat is that ajax parameter do in the example? Examining the call stack, it was not used for the oauth2 case in g+.\n\nIt certainly confused me especially, that more users where created for the same g+ user until the userinfo.email scope was not set in the mobile app. \nThere could have been another solution: (SOCIAL_AUTH_GOOGLE_PLUS_)USE_UNIQUE_USER_ID = True, which is not a documented settings at the moment.\nAlso note, that the example in the docs is broken. request.backend.do_auth is needed, which it is in the example project.\n\nlanding.html: https://gist.github.com/f3r3nc/aa4e0cfb43b7c288ea56. \nsettings:\n\n``` python\nSOCIAL_AUTH_GOOGLE_PLUS_SCOPE = [\n    'https://www.googleapis.com/auth/plus.login',\n    'https://www.googleapis.com/auth/userinfo.profile',\n    'https://www.googleapis.com/auth/userinfo.email',\n    'https://www.googleapis.com/auth/drive',\n    'https://www.googleapis.com/auth/youtube',\n]\n```\n\npipeline:\n\n``` python\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n)\n```\n\nview:\n\n``` python\n@api_view(['POST'])\n@csrf_exempt\n@permission_classes((AllowAny,))\n@psa('social:complete')\ndef register_by_access_token(request, backend):\n    token = request.DATA.get('access_token')\n    user = request.backend.do_auth(token, ajax=True)\n    print request.backend.user_data(token)\n    if user:\n        login(request, user)\n        return Response(\"ok\")\n    else:\n        return Response(\"Error\")\n```\n", "created_at": "2014-10-15T22:10:31Z"}, {"body": "Fix does not match the number of arguments (for vk and ok backend). And method get_user_id now returns the correct user id.\n\n```\nException Type: TypeError at /login/auth/vk-oauth2/\nException Value: user_data() takes at least 3 arguments (2 given)\n```\n", "created_at": "2014-10-12T06:34:51Z"}, {"body": "I've tried to look for a way to test the pipeline or generally use a properly logged user, but I can't seem to find a solution. I've already read [this issue](https://github.com/omab/python-social-auth/issues/81) and [this issue](https://github.com/omab/python-social-auth/issues/352) but both \"solutions\" just avoid the problem entirely (for example by using the default authentication system instead). \n\nI've extended the functionality of the pipeline, both disconnect and connect pipeline. I've also added a step that analyzes the extra data a tries to take out a verified email if it can. All of this needs to be testes.\n\nTo test the pipeline, AFAIKS, the suggested method is to just test each custom function per se, and I can agree with that. But how can I have a properly logged in user without defining a password for such a user? Some decisions the system makes are based on whether the user has or not a password in association with the account, and I need to be able to test the parts in which the user only has a social account. How can I do that?\n\nAlso it might be useful if there was a chapter in the documentation regarding how to test with a custom Client.\n\nThanks for the attention.\n", "created_at": "2014-10-10T14:16:01Z"}, {"body": "I've got 7 emails in my GitHub account.. but I selected one as my primary.  `python-social-auth` just takes the first one in the provided list, disregarding my selection. I have stale e-mails in there.. Think we could pick the primary e-mail!\n\nThis was an attempt to monkey patch `django-social-auth` with the intended behavior.  If there's interest, I can make it a PR in `python-social-auth`:\n\n```\n# re-implements: backends/contrib/github.py:L57-66\ndef _fetch_emails_replacement(self, access_token):\n    \"\"\"Fetch private emails from Github account\n\n    Github returns something like:\n\n    [\n      {\n        \"email\": \"octocat@github.com\",\n        \"verified\": true,\n        \"primary\": true\n      }\n    ]\n\n    \"\"\"\n    url = GITHUB_USER_DATA_URL + '/emails?' + urlencode({\n        'access_token': access_token\n    })\n\n    try:\n        data = simplejson.load(dsa_urlopen(url))\n    except (ValueError, HTTPError):\n        return []\n\n    emails = [x['email'] for x in data\n              if x['primary']]\n    if emails:\n        return [emails[0]]\n    else:\n        if data:\n            return [data[0]['email']]\n        else:\n            return []\n\ngithub.GithubBackend._fetch_emails = _fetch_emails_replacement\n```\n", "created_at": "2014-10-09T16:49:46Z"}, {"body": "Hi, I prepared and tested a configuration for Salesforce's OAuth2 main and sandbox backend.\n\nI based the settings on the following Salesforce documentation and my own testing:\n- [Understanding the Web Server OAuth Authentication Flow](https://www.salesforce.com/us/developer/docs/api_rest/Content/intro_understanding_web_server_oauth_flow.htm)\n- [Understanding the OAuth Refresh Token Process](https://www.salesforce.com/us/developer/docs/api_rest/Content/intro_understanding_refresh_token_oauth.htm)\n\nLet me know if there is anything I missed or feel free to pull it in.\n", "created_at": "2014-10-08T21:46:43Z"}, {"body": "", "created_at": "2014-10-07T14:50:35Z"}, {"body": "Also use travis_retry instead of --use-mirrors in order to prevent build failures due to network issues because --use-mirrors is deprecated.\n", "created_at": "2014-10-06T21:22:40Z"}, {"body": "- Renames the verbose app title to `Python Social Auth` in the Django admin for `Django >=1.7`\n  ![screen shot 2014-10-04 at 10 38 59 am](https://cloud.githubusercontent.com/assets/791000/4515835/4609aca2-4bd5-11e4-9de0-da1092b8860d.png)\n- Remains the title `Default` for `Django <1.7`\n  ![screen shot 2014-10-04 at 10 47 20 am](https://cloud.githubusercontent.com/assets/791000/4515841/72128b8e-4bd5-11e4-8606-0f99c56c6a37.png)\n\nUsers will still use \n\n```\nINSTALLED_APPS = [\n    'social.apps.django_app.default',\n    # ...\n]\n```\n", "created_at": "2014-10-04T14:54:25Z"}, {"body": "- Adding `def __str__(self)` to the model makes working in the shell a lot easier\n- There is typically more clickable surface area on a username than a numeric id.\n", "created_at": "2014-10-02T19:13:19Z"}, {"body": "As per #406 we've added in the openid to the GoogleOAuth2 class as per the documentation located [here](https://developers.google.com/accounts/docs/OAuth2Login).\n\nIt's important to note here that openid must be first in the list of scopes as per the documentation. @avances123 this is the pull request I referenced in IRC\n", "created_at": "2014-10-02T15:09:39Z"}, {"body": "It appears that one of the releases forces the need to use the Google+ API for sign-in when it might in fact not be needed. @avances123 thinks that the change occurred in 0.2.0\n\nI did some research to see why this might have happened, from [this document](https://developers.google.com/accounts/docs/OAuth2LoginV1) it appears that Google deprecated OAuth2 login entirely in favour of Google+ Sign-in but upon further investigation, it appears that they have [kept OAuth2 login](https://developers.google.com/accounts/docs/OAuth2Login) but perhaps changed the way some of it works and what things it can access.\n\nDepending on the discussions, I'm happy to help provide a PR to combat this issue. I'm thinking that because we already have a GooglePlusSignin backend, it might be ok to just change the existing BaseGoogleOAuth2 so that it uses the document referenced above. Whether or not that breaks backwards compatibility is to be determined.\n", "created_at": "2014-10-02T02:29:14Z"}, {"body": "The flask example doesn't work as is due to an incorrect import path.\n", "created_at": "2014-10-01T20:35:46Z"}, {"body": "...iltering!\n", "created_at": "2014-09-30T20:40:34Z"}, {"body": "Thank you for great library.\n\nI inserted link at `README.rst` L80\nand modified link of `docs/backends/kakao.rst` L17 to more detailed description link.\n", "created_at": "2014-09-29T07:34:29Z"}, {"body": "Blizzard developers asked to add some legal information, so that no one confuses this with official Blizzard stuff.\n", "created_at": "2014-09-28T11:03:20Z"}, {"body": "This seems to work around a false-positive migration being created even if nothing has actually changed.\n\nA similar problem occurred in easy-thumbnails: https://github.com/SmileyChris/easy-thumbnails/commit/b95e6888cd7bea9c5138b72bdbcd1e743655580f\n", "created_at": "2014-09-27T18:05:14Z"}, {"body": "I'm using Django 1.6 to implement this locally. No clue on how to install ntp. Please advice. \n\nTraceback:\nFile \"/Library/Python/2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n   File \"/Library/Python/2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n2.             return func(request, backend, _args, *_kwargs)\n   File \"/Library/Python/2.7/site-packages/social/apps/django_app/views.py\" in auth\n3.     return do_auth(request.social_strategy, redirect_name=REDIRECT_FIELD_NAME)\n   File \"/Library/Python/2.7/site-packages/social/actions.py\" in do_auth\n4.     return strategy.start()\n   File \"/Library/Python/2.7/site-packages/social/strategies/base.py\" in start\n5.             return self.redirect(self.backend.auth_url())\n   File \"/Library/Python/2.7/site-packages/social/backends/oauth.py\" in auth_url\n6.         token = self.set_unauthorized_token()\n   File \"/Library/Python/2.7/site-packages/social/backends/oauth.py\" in set_unauthorized_token\n7.         token = self.unauthorized_token()\n   File \"/Library/Python/2.7/site-packages/social/backends/oauth.py\" in unauthorized_token\n8.                                 method=self.REQUEST_TOKEN_METHOD)\n   File \"/Library/Python/2.7/site-packages/social/backends/base.py\" in request\n9.         response.raise_for_status()\n   File \"/Library/Python/2.7/site-packages/requests/models.py\" in raise_for_status\n10.             raise HTTPError(http_error_msg, response=self)\n\nException Type: HTTPError at /login/twitter/\nException Value: 401 Client Error: Authorization Required\n", "created_at": "2014-09-26T20:13:19Z"}, {"body": "I'm trying to rename the social url namespace.\n\nA nested app has the following configurations:\n\n```\nurlpatterns = patterns('',\n    ...\n    url(r'', include('social.apps.django_app.urls'))\n)\n```\n\nand the main application imports the nested one as:\n\n```\nurl(r'^nested_app/', include('project.apps.nested_app.urls', namespace = 'nested_app'))\n```\n\nThe links in the html templates are in the form:\n\n```\n{% url 'nested_app:begin' 'google-oauth2' %}\n```\n\nAnd they start the process correctly, but when it's time to \"complete\" I get:\n\n>  u'social' is not a registered namespace\n\nprobably due to [this line](https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/views.py#L10).\n\nIs this intended behavior? Is there any other way to use a custom `nested_app` namespace?\n", "created_at": "2014-09-25T13:53:59Z"}, {"body": "Adding `SCOPE_SEPARATOR` to `social.backends.disqus.DisqusOAuth2`.\n\nAccording to Disqus OAuth 2 documentation it can receive scope parameters separated by comma:\n\n```\nLocation: https://disqus.com/api/oauth/2.0/authorize/?\nclient_id=PUBLIC_KEY&\nscope=read,write&\nresponse_type=code&\nredirect_uri=http://www.example.com/oauth_redirect\n```\n\nhttps://disqus.com/api/docs/auth/\n\nSo, for example, one can add `email` to scope parameters end obtain user's email as extra data.\n", "created_at": "2014-09-24T20:56:15Z"}, {"body": "", "created_at": "2014-09-24T16:09:21Z"}, {"body": "Recently we upgraded python social auth from 0.1.24 to 0.2.1.  When we try run migrations using south we get the below error. There appears to be a new migration in python social auth that tries to access the custom user model we are using. We are still using Django 1.6.7\n\nHas anyone had similar problems?\nAny ideas?\n\nRunning migrations for default:\nMigrating forwards to 0001_initial.\n default:0001_initial\nError in migration: default:0001_initial\nTraceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"project_path/venv/local/lib/python2.7/site-packages/django/core/management/**init**.py\", line 399, in execute_from_command_line\n    utility.execute()\n  File \"project_path/venv/local/lib/python2.7/site-packages/django/core/management/**init**.py\", line 392, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"project_path/venv/local/lib/python2.7/site-packages/django/core/management/base.py\", line 242, in run_from_argv\n    self.execute(_args, *_options.**dict**)\n  File \"project_path/venv/local/lib/python2.7/site-packages/django/core/management/base.py\", line 285, in execute\n    output = self.handle(_args, *_options)\n  File \"project_path/venv/local/lib/python2.7/site-packages/south/management/commands/migrate.py\", line 111, in handle\n    ignore_ghosts = ignore_ghosts,\n  File \"project_path/venv/local/lib/python2.7/site-packages/south/migration/**init**.py\", line 220, in migrate_app\n    success = migrator.migrate_many(target, workplan, database)\n  File \"project_path/venv/local/lib/python2.7/site-packages/south/migration/migrators.py\", line 256, in migrate_many\n    result = migrator.**class**.migrate_many(migrator, target, migrations, database)\n  File \"project_path/venv/local/lib/python2.7/site-packages/south/migration/migrators.py\", line 331, in migrate_many\n    result = self.migrate(migration, database)\n  File \"project_path/venv/local/lib/python2.7/site-packages/south/migration/migrators.py\", line 133, in migrate\n    result = self.run(migration, database)\n  File \"project_path/venv/local/lib/python2.7/site-packages/south/migration/migrators.py\", line 114, in run\n    return self.run_migration(migration, database)\n  File \"project_path/venv/local/lib/python2.7/site-packages/south/migration/migrators.py\", line 84, in run_migration\n    migration_function()\n  File \"project_path/venv/local/lib/python2.7/site-packages/south/migration/migrators.py\", line 60, in <lambda>\n    return (lambda: direction(orm))\n  File \"project_path/venv/local/lib/python2.7/site-packages/social/apps/django_app/default/south_migrations/0001_initial.py\", line 18, in forwards\n    related_name='social_auth', to=orm[USER_MODEL])),\n  File \"project_path/venv/local/lib/python2.7/site-packages/south/orm.py\", line 172, in **getitem**\n    raise KeyError(\"The model '%s' from the app '%s' is not available in this migration.\" % (model, app))\nKeyError: \"The model 'user' from the app 'auther' is not available in this migration.\"\n", "created_at": "2014-09-24T05:40:11Z"}, {"body": "Ran into some problems during an upgrade from 0.1 to 0.2 when south was enabled.\n\nHave updated documentation with the solution\n", "created_at": "2014-09-21T02:32:00Z"}, {"body": "If I disconnect Google+ from an account and return to my account management page, Google Plus sign-in automatically triggers and re-connects itself.\n\nThis is because the token remains in the users account and has not been removed.\n", "created_at": "2014-09-19T19:52:34Z"}, {"body": "I would really like to use psa as authentication system (im using django) for my single page app. I have a function exchanging authorisation_code given by client for access_token like this:\n\ndef auth(request):\n     code = request.POST['code']\n     provider = 'google-oauth2'\n     ...\n     return access_token, client_id, expires_in, token_type\n\nIf i want to create and persist my user using this example http://python-social-auth.readthedocs.org/en/latest/use_cases.html#signup-by-oauth-access-token\nI dont really know what the request should be. \n\nIs there some way how to create a db record from this using psa?\n", "created_at": "2014-09-19T16:34:35Z"}, {"body": "I have to config python-social-auth like:\n<code>SOCIAL_AUTH_AUTHENTICATION_BACKENDS =\n    social.backends.douban.DoubanOAuth2</code>\nBut the Paste style would like:\n<code>social.auth.authentication.backends =\n    social.backends.douban.DoubanOAuth2</code>\n", "created_at": "2014-09-17T07:30:02Z"}, {"body": "I have configuration like:\n\n<pre><code>[app:main]\n...\nSOCIAL_AUTH_AUTHENTICATION_BACKENDS =\n    social.backends.douban.DoubanOAuth2\n</code></pre>\n\nWhen I access http://host_address:6543/login/douban-oauth2, pyramid raises ValueError:\n\n<pre><code>  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid_tm-0.7-py2.7.egg/pyramid_tm/__init__.py\", line 82, in tm_tween\n    reraise(*exc_info)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid_tm-0.7-py2.7.egg/pyramid_tm/__init__.py\", line 63, in tm_tween\n    response = handler(request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid/router.py\", line 163, in handle_request\n    response = view_callable(context, request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid/config/views.py\", line 329, in attr_view\n    return view(context, request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid/config/views.py\", line 305, in predicate_wrapper\n    return view(context, request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid/config/views.py\", line 385, in viewresult_to_response\n    result = view(context, request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid/config/views.py\", line 501, in _requestonly_view\n    response = view(request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/python_social_auth-0.2.1-py2.7.egg/social/apps/pyramid_app/utils.py\", line 57, in wrapper\n    request.backend = load_backend(request.strategy, backend, uri)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/python_social_auth-0.2.1-py2.7.egg/social/apps/pyramid_app/utils.py\", line 40, in load_backend\n    Backend = get_backend(backends, name)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/python_social_auth-0.2.1-py2.7.egg/social/backends/utils.py\", line 51, in get_backend\n    load_backends(backends, force_load=True)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/python_social_auth-0.2.1-py2.7.egg/social/backends/utils.py\", line 33, in load_backends\n    backend = module_member(auth_backend)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/python_social_auth-0.2.1-py2.7.egg/social/utils.py\", line 22, in module_member\n    mod, member = name.rsplit('.', 1)\nValueError: need more than 1 value to unpack\n</code></pre>\n\nI have read: https://github.com/omab/python-social-auth/blob/master/social/apps/pyramid_app/utils.py#L29\nthis line should be changed to \n<code>backends = aslist(get_helper('AUTHENTICATION_BACKENDS'))</code>\nof course, aslist should be imported at the first:\n<code>from pyramid.settings import aslist</code>\n", "created_at": "2014-09-17T07:24:32Z"}, {"body": "Hi, I am going to use python-social-auth with Pyramid, but meet the following problem:\n\nPyramidStrategy takes 3 arguments on init: https://github.com/omab/python-social-auth/blob/master/social/strategies/pyramid_strategy.py#L22 \nBut load_strategy only passes 2 arguments: https://github.com/omab/python-social-auth/blob/master/social/apps/pyramid_app/utils.py#L24\n\nIt will raises TypeError which makes python-social-auth never working with Pyramid:\n\n<pre><code>\n...\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid_debugtoolbar-2.2-py2.7.egg/pyramid_debugtoolbar/toolbar.py\", line 165, in toolbar_tween\n    return handler(request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid/tweens.py\", line 21, in excview_tween\n    response = handler(request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid_tm-0.7-py2.7.egg/pyramid_tm/__init__.py\", line 82, in tm_tween\n    reraise(*exc_info)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid_tm-0.7-py2.7.egg/pyramid_tm/__init__.py\", line 63, in tm_tween\n    response = handler(request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid/router.py\", line 163, in handle_request\n    response = view_callable(context, request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid/config/views.py\", line 329, in attr_view\n    return view(context, request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid/config/views.py\", line 305, in predicate_wrapper\n    return view(context, request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid/config/views.py\", line 385, in viewresult_to_response\n    result = view(context, request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/pyramid/config/views.py\", line 501, in _requestonly_view\n    response = view(request)\n  File \"/opt/webenv/local/lib/python2.7/site-packages/python_social_auth-0.2.1-py2.7.egg/social/apps/pyramid_app/utils.py\", line 46, in wrapper\n    request.strategy = load_strategy()\n  File \"/opt/webenv/local/lib/python2.7/site-packages/python_social_auth-0.2.1-py2.7.egg/social/apps/pyramid_app/utils.py\", line 25, in load_strategy\n    return get_strategy(get_helper('STRATEGY'), get_helper('STORAGE'))\n  File \"/opt/webenv/local/lib/python2.7/site-packages/python_social_auth-0.2.1-py2.7.egg/social/strategies/utils.py\", line 15, in get_strategy\n    return Strategy(Storage, *args, **kwargs)\nTypeError: __init__() takes at least 3 arguments (2 given)\n</code></pre>\n", "created_at": "2014-09-17T05:21:34Z"}, {"body": "This is how the authorization screen looks like withe current social auth.\nIt says \"Let **An unknown application** use your account?\" and the auth token expires after 30 days (which I thought was anoying).\n\n![before](https://cloud.githubusercontent.com/assets/385177/4285577/4a08840a-3d88-11e4-8843-e59265d0942e.png)\n\nI added two optional settings:\n\n```\nSOCIAL_AUTH_TRELLO_APP_NAME = 'Best App Ever'\nSOCIAL_AUTH_TRELLO_EXPIRATION = 'never'\n```\n\n-->\n\n![after](https://cloud.githubusercontent.com/assets/385177/4285576/49eeeb44-3d88-11e4-8a92-b1fec6f83f93.png)\n", "created_at": "2014-09-16T10:02:38Z"}, {"body": "http://en.wikipedia.org/wiki/SAML_2.0\nhttps://github.com/rohe/pysaml2\n", "created_at": "2014-09-15T17:42:29Z"}, {"body": "My service provides an api for an ios application, which authenticates users signing them into facebook, then passing the acces_token to my service's signin function given below: \n\n``` python\n@strategy('social:complete')\ndef social_signin(request, backend):\n    access_token = request.POST.get(\"access_token\")\n    backend = request.strategy.backend\n    user = backend.do_auth(access_token)\n    if user:\n        if user.auth_token is None:\n            user.auth_token = generate_token()\n            user.save(update_fields=[\"auth_token\"])\n        return response({\"token\": user.auth_token})\n    return response({\"token\": None, \"status\": \"fail\",\n                    \"message\": \"Social backend sign in failed\"})\n```\n\nI'm using this strategy, in order to create user accounts if they don't already exist or simply sign them in. \nSometimes, i see duplicate entry error for some users who already have signed up to my service via facebook from the web interface.\n\n```\nTraceback (most recent call last):\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 113, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(*args, **kwargs)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper\n    return func(request, backend, *args, **kwargs)\n\n  File \"/srv/www/service/main/views/api.py\", line 63, in social_signin\n    user = backend.do_auth(access_token)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/social/backends/facebook.py\", line 104, in do_auth\n    return self.strategy.authenticate(*args, **kwargs)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/social/strategies/django_strategy.py\", line 71, in authenticate\n    return authenticate(*args, **kwargs)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/django/contrib/auth/__init__.py\", line 60, in authenticate\n    user = backend.authenticate(**credentials)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/social/backends/base.py\", line 69, in authenticate\n    return self.pipeline(pipeline, *args, **kwargs)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/social/backends/base.py\", line 72, in pipeline\n    out = self.run_pipeline(pipeline, pipeline_index, *args, **kwargs)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/social/backends/base.py\", line 98, in run_pipeline\n    result = func(*args, **out) or {}\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/social/pipeline/user.py\", line 68, in create_user\n    'user': strategy.create_user(**fields)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/social/strategies/base.py\", line 89, in create_user\n    return self.storage.user.create_user(*args, **kwargs)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/social/storage/django_orm.py\", line 59, in create_user\n    return cls.user_model().objects.create_user(*args, **kwargs)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/django/contrib/auth/models.py\", line 186, in create_user\n    user.save(using=self._db)\n\n  File \"/srv/www/service/main/models/__init__.py\", line 104, in save\n    return super(User, self).save(*args, **kwargs)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/django/db/models/base.py\", line 546, in save\n    force_update=force_update, update_fields=update_fields)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/django/db/models/base.py\", line 650, in save_base\n    result = manager._insert([self], fields=fields, return_id=update_pk, using=using, raw=raw)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 215, in _insert\n    return insert_query(self.model, objs, fields, **kwargs)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/django/db/models/query.py\", line 1675, in insert_query\n    return query.get_compiler(using=using).execute_sql(return_id)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/johnny_cache-1.6a-py2.7.egg/johnny/cache.py\", line 386, in newfun\n    ret = original(cls, *args, **kwargs)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py\", line 943, in execute_sql\n    cursor.execute(sql, params)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/django/db/backends/mysql/base.py\", line 122, in execute\n    six.reraise(utils.IntegrityError, utils.IntegrityError(*tuple(e.args)), sys.exc_info()[2])\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/django/db/backends/mysql/base.py\", line 120, in execute\n    return self.cursor.execute(query, args)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/MySQLdb/cursors.py\", line 205, in execute\n    self.errorhandler(self, exc, value)\n\n  File \"/srv/virtenv/dj15/local/lib/python2.7/site-packages/MySQLdb/connections.py\", line 36, in defaulterrorhandler\n    raise errorclass, errorvalue\n\nIntegrityError: (1062, \"Duplicate entry '...' for key 'username'\")\n```\n\nAm i doing it wrong? I'm using v0.1.24 with django 1.5.8 on python 2.7. \n", "created_at": "2014-09-14T13:36:20Z"}, {"body": "Use the latest version of the shopify API wrapper - this requires a request_token() call to retrieve the permanent token.\n", "created_at": "2014-09-12T11:27:49Z"}, {"body": "The setting SOCIAL_AUTH_ADMIN_USER_SEARCH_FIELDS is being processed by get_search_fields which was introduced in Django 1.7.  This means that there are no search fields (and hence no search) for versions older than this version.\n", "created_at": "2014-09-11T16:01:22Z"}, {"body": "String is already unicode: otherwise it  will throw decoding unicode is not supported TypeError\n", "created_at": "2014-09-11T10:26:14Z"}, {"body": "No matter what I change in my settings.py,  all of my backends always redirect to <domain>/complete/<backend>/.\n\nI want to redirect to another uri where I can manually grab request parameters.\n", "created_at": "2014-09-09T21:14:22Z"}, {"body": "Changed the Django docs to reflect the updated migration commands. I also added to the settings.py so an older 1.5 to 1.7 warning does not appear. (Fixing 1_6.W001)\n", "created_at": "2014-09-09T16:16:53Z"}, {"body": "hi guys, I'm referring to the codes in social/apps/django_app/context_processors.py/backends:\n\n```\nreturn {'backends': LazyDict(lambda: user_backends_data(request.user, BACKENDS, Storage))}\n```\n\nThe context processor hits DB every time it's called, while it's possible that context processors are called many times in one view (in my project, a pagination package does it). As a result, this SQL was executed many times:\n\n```\nSELECT `social_auth_usersocialauth`.`id`, ...... FROM `social_auth_usersocialauth` WHERE `social_auth_usersocialauth`.`user_id` = 1\n```\n\nIt's a significant waste. I think it's worth to do a cache. Such as:\n\n```\npsa_backends = getattr(request, 'psa_backends', None)\nif psa_backends is None:\n    psa_backends = LazyDict(lambda: user_backends_data(request.user,BACKENDS,Storage))\n    request.psa_backends = psa_backends\nreturn {'backends': psa_backends}\n```\n", "created_at": "2014-09-08T11:21:03Z"}, {"body": "", "created_at": "2014-09-08T06:31:50Z"}, {"body": "[MineID.org](https://www.mineid.org/) is a free and Open Source OAuth2 Provider for Minecraft. It works as a wrapper for the Mojang's authentication service. The source is available at http://github.com/MineID/MineID\n\nThis pull-request contains the backend, tests, documentation and changes in the project examples.\n\nLet me know if you need anything else.\n\nThanks\n", "created_at": "2014-09-08T02:42:39Z"}, {"body": "https://github.com/omab/python-social-auth/issues/377\n\nIn regards to the mod_wsgi problem we were having.\n", "created_at": "2014-09-07T19:03:58Z"}, {"body": "We were having issues with mod_wsgi hanging periodically (about 1-2 times a day) that required an apache restart or touching wsgi.py. Eventually it was narrowed down to being related to python social auth, particularly when many users log in at once (beginning of a shift).\n\nSo I installed a bit of logging middleware seen here in wsgi.py:\n\n``` python\n# Logging WSGI middleware.\n\nimport pprint\n\nclass LoggingMiddleware:\n\n    def __init__(self, application):\n        self.__application = application\n\n    def __call__(self, environ, start_response):\n        errors = environ['wsgi.errors']\n        pprint.pprint(('REQUEST', environ), stream=errors)\n\n        def _start_response(status, headers, *args):\n            pprint.pprint(('RESPONSE', status, headers), stream=errors)\n            return start_response(status, headers, *args)\n\n        return self.__application(environ, _start_response)\n\napplication = LoggingMiddleware(get_wsgi_application())\n```\n\nSo we sifted through the apache error logs and found something strange about the Location HTTP header:\n\n```\n[Thu Sep 04 17:01:31.752042 2014] [:error] [pid 21917:tid 139904813995776] [remote 255.255.255.255:51238]   ('Location',\n[Thu Sep 04 17:01:31.754007 2014] [:error] [pid 21917:tid 139904813995776] [remote 255.255.255.255:51238]    'https://accounts.google.com/o/oauth2/auth?scope=https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile&state=STATE&redirect_uri=https://XXX.XXXXX.com/complete/google-oauth2/&response_type=code&client_id=CLIENT_ID.apps.googleusercontent.com'),\n```\n\nand it was quickly becoming larger:\n\n```\n[Thu Sep 04 17:08:16.481670 2014] [:error] [pid 21917:tid 139904813995776] [remote 255.255.255.255:51238]   ('Location',\n[Thu Sep 04 17:08:16.491194 2014] [:error] [pid 21917:tid 139904813995776] [remote 255.255.255.255:51238]    'https://accounts.google.com/o/oauth2/auth?scope=https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile&state=STATE&redirect_uri=https://XXX.XXXXX.com/complete/google-oauth2/&response_type=code&client_id=CLIENT_ID.apps.googleusercontent.com'),\n```\n\nuntil it finally severs the connection between wsgi.py and mod_wsgi:\n\n```\n[Thu Sep 04 17:13:41.781795 2014] [:error] [pid 21917:tid 139904897939200] [remote 255.255.255.255:51494]   ('Location',\n[Thu Sep 04 17:13:41.801792 2014] [:error] [pid 21917:tid 139904897939200] [remote 255.255.255.255:51494]    'https://accounts.google.com/o/oauth2/auth?scope=https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile+https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile&state=STATE&redirect_uri=https://XXX.X\n[Thu Sep 04 17:13:41.809019 2014] [:error] [pid 21917:tid 139904897939200] [remote 255.255.255.255:51494]   ('Vary', 'Cookie'),\n[Thu Sep 04 17:13:41.809650 2014] [:error] [pid 21917:tid 139904897939200] [remote 255.255.255.255:51494]   ('Set-Cookie',\n[Thu Sep 04 17:13:41.811200 2014] [:error] [pid 21917:tid 139904897939200] [remote 255.255.255.255:51494]    ' sessionid=SESSION_ID; expires=Fri, 19-Sep-2014 00:13:41 GMT; httponly; Max-Age=1209600; Path=/')])\n[Fri Sep 05 00:13:41.811714 2014] [core:error] [pid 21920:tid 139904658892544] [client 255.255.255.255:53761] Premature end of script headers: wsgi.py\n```\n\nThe result is slightly under Apache2's default size limit on HTTP headers (8KB), and can no longer be appended to.\n\nSo to work around this I had to go into the Google Oauth backend and keep the scope from growing.\n\n``` python\nclass BaseGoogleOAuth2API(BaseGoogleAuth):\n    def get_scope(self):\n        \"\"\"Return list with needed access scope\"\"\"\n        scope = self.setting('SCOPE', [])\n        if not self.setting('IGNORE_DEFAULT_SCOPE', False):\n            default_scope = []\n            if self.setting('USE_DEPRECATED_API', False):\n                default_scope = self.DEPRECATED_DEFAULT_SCOPE\n            else:\n                default_scope = self.DEFAULT_SCOPE\n            scope = default_scope\n        return scope\n```\n\nit used to be:\n\n``` python\nscope += default_scope or []\n```\n\nThere is one other way around this, to add some settings in settings.py:\n\n``` python\nSOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [\n    \"https://www.googleapis.com/auth/userinfo.email\",\n    \"https://www.googleapis.com/auth/userinfo.profile\"\n]\n\nSOCIAL_AUTH_GOOGLE_OAUTH2_IGNORE_DEFAULT_SCOPE = True\n```\n\nSo it skips the problematic code.\n\nSo then, even 600 logins deep (with a script that continuously logs me in and out, I get this (no growth to scope):\n\n```\n[Thu Sep 04 16:46:47.003409 2014] [:error] [pid 6153:tid 139702748202752] [remote 255.255.255.255:14620]   ('Location',\n[Thu Sep 04 16:46:47.005262 2014] [:error] [pid 6153:tid 139702748202752] [remote 255.255.255.255:14620]    'https://accounts.google.com/o/oauth2/auth?scope=https://www.googleapis.com/auth/userinfo.email+https://www.googleapis.com/auth/userinfo.profile&state=STATE&redirect_uri=https://XXX.XXXXX.com/complete/google-oauth2/&response_type=code&client_id=CLIENT_ID.apps.googleusercontent.com'),\n```\n\nAlso, you can see we're using the deprecated api. The issue exists with the default scope (non deprecated) as well, but takes longer to crash since only \"email\" and \"profile\" are appended to the header.\n", "created_at": "2014-09-07T18:59:22Z"}, {"body": "I'm running Django 1.7 with Python Social Auth 0.1.26.\n\nMy steps on the Facebook side were:\n- create a new application\n- create a new platform (settings > basic > add platform) on localhost (got accepted)\n\nOn the Django side I've added the facebook backend in the authentication backends, the facebook scope, secret and key.\n\nIf I go to:\n\n```\nhttp://localhost:8000/login/facebook-app/\n```\n\nI simply get an HTML response (on the browser) that says: \"None\". Nothing else. No errors, no nothing.\n\nI'm probably missing some step, but with no information there's little I can do.\n", "created_at": "2014-09-06T02:28:57Z"}, {"body": "Seeing a problem with Facebook integration. Using Django. Here is our Social Auth config:\n\n```\nSOCIAL_AUTH_USER_MODEL = AUTH_USER_MODEL\nSOCIAL_AUTH_CREATE_USERS = True\nSOCIAL_AUTH_UUID_LENGTH = 2\nSOCIAL_AUTH_BACKEND_ERROR_URL = LOGIN_URL\n\nSOCIAL_AUTH_CHANGE_SIGNAL_ONLY = True\n\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'authentication.services.authentication.socialSendActivationEmail', # Custom\n    'social.pipeline.user.user_details',\n)\n\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/auth/loggedin/'\nSOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/auth/loggedin/'\nSOCIAL_AUTH_SLUGIFY_USERNAMES = True\nSOCIAL_AUTH_RAISE_EXCEPTIONS = False\n```\n\n![valueerror__users_must_have_an_email_address___lm_production___sentry](https://cloud.githubusercontent.com/assets/1676891/4137573/65f2982c-3388-11e4-8f02-a689207a1d91.png)\n\nThe strange thing is, that the email field is just coming across as blank.\n\n![valueerror__users_must_have_an_email_address___lm_production___sentry](https://cloud.githubusercontent.com/assets/1676891/4137592/8fe9eedc-3388-11e4-81f4-76521f47d5d6.png)\n\n@omab Any help here would be much appreciated, this is a production bug we are chasing down at this point :( \n", "created_at": "2014-09-03T16:40:53Z"}, {"body": "I get this error when trying to use facebook login. It's exactly similar this https://github.com/omab/python-social-auth/issues/190 but I don't have a user custom model or pipeline. I'm using the built in auth_user. Although, it successfully gets the data from facebook and stores it in auth_user.\n\nEnvironment:\n\nRequest Method: GET\nRequest URL: http://localhost:8000/complete/facebook/?redirect_state=2BzLp0r6geuhw9xNLzATVkyyuuECjxMN&code=AQC_vdr2PZdfz0Td3B6cALDxzUExNB5jAy7pZZdelkw9aX81pmUFXrX1To5ZvzPx8DQ5ruTbMpcYCUSO1OTKr9AMoixHxdEj4SxNuxlbnt5-qHQBtH3SB8m-ucagzaQgd4VAeSpOXuEkYNHQWdg62zz5xeYUKxp7DWzugBoimOHkE8nfKWXyheefl3W15gAwYB-JA5B9jAkKpayTzpTzkQ8FLMUxi9es9kiyMrf0gCSwD5sZa5CFfgJ-zh_7DTa-up7ABe9ywc-8YRil2mz_JLmJM-FTUs_vx5ZlUF5-Iprc_qFPOoEmLSYb5KNScYNhMU0&state=2BzLp0r6geuhw9xNLzATVkyyuuECjxMN\n\nDjango Version: 1.6.5\nPython Version: 2.7.5\nInstalled Applications:\n('meddy1',\n 'django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.sites',\n 'django.contrib.sitemaps',\n 'south',\n 'django_google_maps',\n 'social.apps.django_app.default')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware')\n\nTraceback:\nFile \"/Library/Python/2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n   File \"/Library/Python/2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n2.         return view_func(_args, *_kwargs)\n   File \"/Library/Python/2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n3.             return func(request, backend, _args, *_kwargs)\n   File \"/Library/Python/2.7/site-packages/social/apps/django_app/views.py\" in complete\n4.                        redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n   File \"/Library/Python/2.7/site-packages/social/actions.py\" in do_complete\n5.             login(strategy, user, social_user)\n   File \"/Library/Python/2.7/site-packages/social/apps/django_app/views.py\" in _do_login\n6.         expiration = social_user.expiration_datetime()\n\nException Type: AttributeError at /complete/facebook/\nException Value: 'NoneType' object has no attribute 'expiration_datetime'\n\nsh-3.2# pip freeze\nDjango==1.6.5\nFlask==0.9\nFlask-KVSession==0.3.2\nJinja2==2.6\nMySQL-python==1.2.5\nPillow==2.4.0\nPyRSS2Gen==1.0.0\nScrapy==0.22.2\nSouth==0.8.4\nTwisted==12.2.0\nUnidecode==0.04.16\nWerkzeug==0.8.3\naltgraph==0.10.1\nbdist-mpkg==0.4.4\nbonjour-py==0.3\ncertifi==14.05.14\ncssselect==0.9.1\ndjango-appconf==0.6\ndjango-bootstrap3==4.8.2\ndjango-debug-toolbar==1.2.1\ndjango-devserver==0.8.0\ndjango-extensions==1.3.8\ndjango-facebook==6.0.1\ndjango-grappelli==2.5.3\ndjango-hvad==0.4.1\ndjango-imagekit==3.2.1\ndjango-nose==1.2\ndjango-queryset-csv==0.2.9\ndjango-registration==0.8\ndjango-review==1.8.1\ndjango-robots==1.0\ndjango-simple-captcha==0.4.2\ndjango-social-share==0.2.1\ndjango-templated-email==0.4.9\ndjango-user-media==0.11.1\neasy-thumbnails==2.0.1\nfacebook-sdk==0.4.0\ngnureadline==6.3.3\ngoogle-api-python-client==1.1\nhttplib2==0.8\nipdb==0.8\nipython==2.1.0\nitsdangerous==0.17\njwt==0.3.1\nlxml==3.3.5\nmacholib==1.5\nmatplotlib==1.1.1\nmodulegraph==0.10.1\nnose==1.3.3\nnumpy==1.6.2\noauthlib==0.6.3\npilkit==1.1.6\npy2app==0.7.1\npyOpenSSL==0.13\npycrypto==2.6.1\npyobjc-core==2.3.2a0\npyobjc-framework-AddressBook==2.3.2a0\npyobjc-framework-AppleScriptKit==2.3.2a0\npyobjc-framework-AppleScriptObjC==2.3.2a0\npyobjc-framework-Automator==2.3.2a0\npyobjc-framework-CFNetwork==2.3.2a0\npyobjc-framework-Cocoa==2.3.2a0\npyobjc-framework-Collaboration==2.3.2a0\npyobjc-framework-CoreData==2.3.2a0\npyobjc-framework-CoreLocation==2.3.2a0\npyobjc-framework-CoreText==2.3.2a0\npyobjc-framework-DictionaryServices==2.3.2a0\npyobjc-framework-ExceptionHandling==2.3.2a0\npyobjc-framework-FSEvents==2.3.2a0\npyobjc-framework-InputMethodKit==2.3.2a0\npyobjc-framework-InstallerPlugins==2.3.2a0\npyobjc-framework-InstantMessage==2.3.2a0\npyobjc-framework-InterfaceBuilderKit==2.3.2a0\npyobjc-framework-LatentSemanticMapping==2.3.2a0\npyobjc-framework-LaunchServices==2.3.2a0\npyobjc-framework-Message==2.3.2a0\npyobjc-framework-OpenDirectory==2.3.2a0\npyobjc-framework-PreferencePanes==2.3.2a0\npyobjc-framework-PubSub==2.3.2a0\npyobjc-framework-QTKit==2.3.2a0\npyobjc-framework-Quartz==2.3.2a0\npyobjc-framework-ScreenSaver==2.3.2a0\npyobjc-framework-ScriptingBridge==2.3.2a0\npyobjc-framework-SearchKit==2.3.2a0\npyobjc-framework-ServiceManagement==2.3.2a0\npyobjc-framework-SyncServices==2.3.2a0\npyobjc-framework-SystemConfiguration==2.3.2a0\npyobjc-framework-WebKit==2.3.2a0\npyobjc-framework-XgridFoundation==2.3.2a0\npython-dateutil==1.5\npython-gflags==2.0\npython-openid==2.2.5\npython-social-auth==0.1.26\npytz==2012d\nqueuelib==1.1.1\nreportlab==3.1.8\nrequests==2.4.0\nrequests-oauthlib==0.4.1\nscipy==0.11.0\nselenium==2.42.1\nsimplejson==3.5.2\nsimplekv==0.5\nsix==1.7.3\nsqlparse==0.1.11\nstevedore==0.15\nvirtualenv==1.11.4\nvirtualenv-clone==0.2.5\nvirtualenvwrapper==4.2\nw3lib==1.5\nwsgiref==0.1.2\nxattr==0.6.4\nzope.interface==3.8.0\nsh-3.2# \n", "created_at": "2014-09-02T08:27:32Z"}, {"body": "", "created_at": "2014-08-30T02:03:02Z"}, {"body": "", "created_at": "2014-08-27T17:04:05Z"}, {"body": "- Renamed parse_nonce_and_return_access_token_body to access_token_body so\n  that inheriting classes no longer need to set access_token_body\n- Added method to retrieve id_token so that inheriting classes can modify the\n  id_token response\n", "created_at": "2014-08-27T04:46:48Z"}, {"body": "Hi,\n\nI am trying the following code,\n\n@strategy()\ndef register_by_access_token(request, backend):\n    backend = request.strategy.backend\n    try:  \n        user = request.user\n        user = backend._do_auth(\n            access_token = request.GET.get('access_token'),\n            user = user.is_authenticated() and user or None\n        )\n    except Exception as err:\n        print \"User is None\", err\n    if user and user.is_active:\n        return user\n    else:\n        return None\n\nHowever, when I try to include strategy by writing down \"from social.apps.django_app.utils import strategy\", I get \"cannot import name strategy\" error. After looking into the souce code of social/apps/django_app/utils.py, I could not find \"strategy\". Am I using a wrong version or where did I do wrong?\n", "created_at": "2014-08-26T10:23:07Z"}, {"body": "When using the SocialAuthExceptionMiddleware class an error occurs saying\n\n> 'WSGIRequest' object has no attribute 'backend'\n\nThis is caused due to the fact that the backend name is retrieved from the request object directly instead of request.strategy on [line 30 of middleware.py](https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/middleware.py#L30).\n\nInstead of\n\n``` python\nbackend_name = request.backend.name\n```\n\nit should read\n\n``` python\nbackend_name = strategy.backend.name\n```\n", "created_at": "2014-08-26T08:56:10Z"}, {"body": "The Shopify Oauth2 flow fails and complains of:\n\n'NoneType' object has no attribute 'strip' here --> self.data.get('shop').strip(). \n\nAlso, there are no clear notes on how to setup Shopify Oauth2 with python-social-auth. Are there any new settings that are required in a django app? \n\nHave added:\n\"'social.backends.shopify.ShopifyOAuth2' --> to AUTHENTICATION_BACKENDS\nand,\nSHOPIFY_APP_API_KEY, SHOPIFY_SHARED_SECRET,SHOPIFY_API_SCOPE.\n\nAm I missing anything?\n", "created_at": "2014-08-26T04:46:15Z"}, {"body": "It looks like some of the backends are configured not to make use of the state parameter, even though the corresponding authorization servers support it. I didn't check every single one, but here are two examples:\n- The backend for [angle.co](https://github.com/omab/python-social-auth/blob/13fa6c2dc1483b20c3ae574cfd9640ad563f6aee/social/backends/angel.py#L14) does not include it, but the state parameter is present in [their documentation](https://angel.co/api/oauth/faq).\n- Similarly, the backend for [spotify.com](https://github.com/omab/python-social-auth/blob/13fa6c2dc1483b20c3ae574cfd9640ad563f6aee/social/backends/spotify.py#L19) and the corresponding [documentation](https://developer.spotify.com/web-api/authorization-guide/).\n", "created_at": "2014-08-25T21:34:24Z"}, {"body": "Is there a way to modify PSA behaviour so that\n`{% url 'social:begin' \"email\" %}`\nproduces \n`/signup/email/`\ninstead of current `/login/email/`. I want to use `login` url when users actually are logging-in after they already passed signup.\n\nThanks in advance.\n", "created_at": "2014-08-25T14:08:16Z"}, {"body": "social.exceptions.AuthStateMissing\nAuthStateMissing: Session value state missing.\n\nTraceback (most recent call last)\nFile \"/opt/a/virtualenvs/pyappd/lib/python2.7/site-packages/django/core/handlers/wsgi.py\", line 255, in **call**\nresponse = self.get_response(request)\nFile \"/opt/a/virtualenvs/pyappd/lib/python2.7/site-packages/django/core/handlers/base.py\", line 178, in get_response\nresponse = self.handle_uncaught_exception(request, resolver, sys.exc_info())\nFile \"/opt/a/virtualenvs/pyappd/lib/python2.7/site-packages/django/core/handlers/base.py\", line 115, in get_response\nresponse = callback(request, _callback_args, *_callback_kwargs)\nFile \"/opt/a/virtualenvs/pyappd/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\nreturn view_func(_args, *_kwargs)\nFile \"/opt/a/virtualenvs/pyappd/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper\nreturn func(request, backend, _args, *_kwargs)\nFile \"/opt/a/virtualenvs/pyappd/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete\nredirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\nFile \"/opt/a/virtualenvs/pyappd/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete\n_args, *_kwargs)\nFile \"/opt/a/virtualenvs/pyappd/lib/python2.7/site-packages/social/strategies/base.py\", line 71, in complete\nreturn self.backend.auth_complete(_args, *_kwargs)\nFile \"/opt/a/virtualenvs/pyappd/lib/python2.7/site-packages/social/backends/oauth.py\", line 345, in auth_complete\ndata=self.auth_complete_params(self.validate_state()),\nFile \"/opt/a/virtualenvs/pyappd/lib/python2.7/site-packages/social/backends/oauth.py\", line 307, in validate_state\nraise AuthStateMissing(self, 'state')\n\nAuthStateMissing: Session value state missing.\n\nI'm running into the above exception when trying to use linkedin OAUTH2. It seems like the following line is returning None:\n\n> > > self.strategy.session_get(self.name + '_state')\n> > > \n> > > self.strategy\n> > > <social.strategies.django_strategy.DjangoStrategy object at 0x5459390>\n", "created_at": "2014-08-21T19:19:12Z"}, {"body": "\"Everything was working fine\" and all of a sudden both the authentication backends I have setup error out.  The following Google URL errors out with 400:\n\n```\nhttps://accounts.google.com/o/oauth2/auth?scope=email+profile&state=xxxx&redirect_uri=http://localhost:8000/complete/google-oauth2/&response_type=code&client_id=xxxx.apps.googleusercontent.com\n```\n\nAnd the following FB URL errors out with a blank 500 screen:\n\n```\nhttps://www.facebook.com/dialog/oauth?scope=email&state=xxxx&redirect_uri=http%3A%2F%2Flocalhost%3A8000%2Fcomplete%2Ffacebook%2F%3Fredirect_state%3Dxxxx&client_id=xxxx\n```\n\nThe key and secret are both set using the variables:\n\n```\nSOCIAL_AUTH_FACEBOOK_KEY\nSOCIAL_AUTH_FACEBOOK_SECRET\nSOCIAL_AUTH_GOOGLE_OAUTH2_KEY\nSOCIAL_AUTH_GOOGLE_OAUTH2_SECRET\n```\n\nThe redirects to the backends work fine, just that the backend itself, i.e. Google and FB, blow up.  Any ideas?\n\nThanks!\n", "created_at": "2014-08-21T16:04:20Z"}, {"body": "", "created_at": "2014-08-21T12:56:59Z"}, {"body": "When a users authenticates using google account an account is created on the local database where the user name is his first name. That is a problem for two reasons: 1. I ve had legit users making account where the first name is 2 words in which case the user name has spaces. 2. its pretty common 2 people to have the same first name. What happens in this case?\n\nThank you!\n", "created_at": "2014-08-20T17:15:29Z"}, {"body": "The documentation regarding the pipeline is basic to say the least. I think that each step of at least the default pipeline should be described:\n\n``` python\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n```\n\nWhat does `'social.pipeline.social_auth.social_details'` do, for example? Which steps does `'social.pipeline.social_auth.social_user'` depend on? And so on.\n\n The code is not documented, so it's hard to tell what parts can be customized and where.\n", "created_at": "2014-08-20T15:39:00Z"}, {"body": "I'm setting `email` as the `USERNAME_FIELD` in my custom auth user.  \nThis is causing psa to add provider username in the django user email.  \nIf I keep `'social.pipeline.user.user_details'``in the pipeline, this problem is not perceptible, since it will set the proper email before saving the user. I do need this in my pipeline and I also want to use   \n``SOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email',]```  \n setting, so the email is only saved on the first time the user is created.   \n\nTo sum up, if I use `SOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email',]`, my user email field is going to be setted as a common username (not a email) by the end of the pipeline.\n", "created_at": "2014-08-19T15:44:53Z"}, {"body": "", "created_at": "2014-08-19T15:28:28Z"}, {"body": "I ran tests, and they failed, but I /think/ it's for unrelated reasons:\n\n(venv)~/workspace/python-social-auth$ ./run_tox.sh \nGLOB sdist-make: /Users/pyrak/workspace/python-social-auth/setup.py\npy26 create: /Users/pyrak/workspace/python-social-auth/.tox/py26\npy26 installdeps: -r/Users/pyrak/workspace/python-social-auth/social/tests/requirements.txt\npy26 inst: /Users/pyrak/workspace/python-social-auth/.tox/dist/python-social-auth-0.2.0-dev.zip\npy26 runtests: PYTHONHASHSEED='2566728021'\npy26 runtests: commands[0] | nosetests --where=social/tests --stop\n# .....................................................................................................................E\n## ERROR: test_login (social.tests.backends.test_google.GoogleOpenIdTest)\n\nTraceback (most recent call last):\n  File \"/Users/pyrak/workspace/python-social-auth/social/tests/backends/test_google.py\", line 253, in test_login\n    self.do_login()\n  File \"/Users/pyrak/workspace/python-social-auth/social/tests/backends/base.py\", line 63, in do_login\n    user = self.do_start()\n  File \"/Users/pyrak/workspace/python-social-auth/social/tests/backends/open_id.py\", line 119, in do_start\n    return self.backend.complete()\n  File \"/Users/pyrak/workspace/python-social-auth/social/backends/base.py\", line 40, in complete\n    return self.auth_complete(_args, *_kwargs)\n  File \"/Users/pyrak/workspace/python-social-auth/social/backends/open_id.py\", line 170, in auth_complete\n    self.process_error(response)\n  File \"/Users/pyrak/workspace/python-social-auth/social/backends/open_id.py\", line 178, in process_error\n    raise AuthFailed(self, data.message)\nAuthFailed: Authentication failed: Nonce already used or out of range\n-------------------- >> begin captured logging << --------------------\nrequests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): www.google.com\nrequests.packages.urllib3.connectionpool: DEBUG: \"POST /accounts/o8/ud?source=mail HTTP/1.1\" 200 1413\n--------------------- >> end captured logging << ---------------------\n---\n\nRan 118 tests in 2.466s\n\nFAILED (errors=1)\nERROR: InvocationError: '/Users/pyrak/workspace/python-social-auth/.tox/py26/bin/nosetests --where=social/tests --stop'\npy27 create: /Users/pyrak/workspace/python-social-auth/.tox/py27\npy27 installdeps: -r/Users/pyrak/workspace/python-social-auth/social/tests/requirements.txt\npy27 inst: /Users/pyrak/workspace/python-social-auth/.tox/dist/python-social-auth-0.2.0-dev.zip\npy27 runtests: PYTHONHASHSEED='2566728021'\npy27 runtests: commands[0] | nosetests --where=social/tests --stop\n# .....................................................................................................................E\n## ERROR: test_login (social.tests.backends.test_google.GoogleOpenIdTest)\n\nTraceback (most recent call last):\n  File \"/Users/pyrak/workspace/python-social-auth/social/tests/backends/test_google.py\", line 253, in test_login\n    self.do_login()\n  File \"/Users/pyrak/workspace/python-social-auth/social/tests/backends/base.py\", line 63, in do_login\n    user = self.do_start()\n  File \"/Users/pyrak/workspace/python-social-auth/social/tests/backends/open_id.py\", line 119, in do_start\n    return self.backend.complete()\n  File \"/Users/pyrak/workspace/python-social-auth/social/backends/base.py\", line 40, in complete\n    return self.auth_complete(_args, *_kwargs)\n  File \"/Users/pyrak/workspace/python-social-auth/social/backends/open_id.py\", line 170, in auth_complete\n    self.process_error(response)\n  File \"/Users/pyrak/workspace/python-social-auth/social/backends/open_id.py\", line 178, in process_error\n    raise AuthFailed(self, data.message)\nAuthFailed: Authentication failed: Nonce already used or out of range\n-------------------- >> begin captured logging << --------------------\nrequests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): www.google.com\nrequests.packages.urllib3.connectionpool: DEBUG: \"POST /accounts/o8/ud?source=mail HTTP/1.1\" 200 1413\n--------------------- >> end captured logging << ---------------------\n---\n\nRan 118 tests in 2.336s\n\nFAILED (errors=1)\nERROR: InvocationError: '/Users/pyrak/workspace/python-social-auth/.tox/py27/bin/nosetests --where=social/tests --stop'\npy33 create: /Users/pyrak/workspace/python-social-auth/.tox/py33\nERROR: InterpreterNotFound: python3.3\npy34 create: /Users/pyrak/workspace/python-social-auth/.tox/py34\nERROR: InterpreterNotFound: python3.4\ndoc create: /Users/pyrak/workspace/python-social-auth/.tox/doc\ndoc installdeps: sphinx\ndoc inst: /Users/pyrak/workspace/python-social-auth/.tox/dist/python-social-auth-0.2.0-dev.zip\ndoc runtests: PYTHONHASHSEED='2566728021'\ndoc runtests: commands[0] | sphinx-build -b html -d /Users/pyrak/workspace/python-social-auth/.tox/doc/tmp/doctrees . /Users/pyrak/workspace/python-social-auth/.tox/doc/tmp/html\nMaking output directory...\nRunning Sphinx v1.2.2\nloading pickled environment... not yet created\nloading intersphinx inventory from http://docs.python.org/objects.inv...\nbuilding [html]: targets for 97 source files that are out of date\nupdating environment: 97 added, 0 changed, 0 removed\nreading sources... [100%] use_cases  \nlooking for now-outdated files... none found\npickling environment... done\nchecking consistency... done\npreparing documents... done\nwriting output... [100%] use_cases  \nwriting additional files... (0 module code pages) genindex search\ncopying static files... done\ncopying extra files... done\ndumping search index... done\ndumping object inventory... done\nbuild succeeded.\n________________________________________ summary _________________________________________\nERROR:   py26: commands failed\nERROR:   py27: commands failed\nERROR:   py33: InterpreterNotFound: python3.3\nERROR:   py34: InterpreterNotFound: python3.4\n  doc: commands succeeded\n", "created_at": "2014-08-19T02:56:48Z"}, {"body": "", "created_at": "2014-08-18T09:05:17Z"}, {"body": "Hey there,\n\nI just had quite a bit of trouble debugging a tricky issue where /some/ of my users were getting logged out just an hour or so after logging in.\n\nAfter some digging, I learned that the issue was mostly effecting google-oauth2 users.\n\nFinally, I noticed that the issue was the default setting for SOCIAL_AUTH_SESSION_EXPIRATION, which was /overriding/ the SESSION_COOKIE_AGE setting to make user sessions only last as long as the token from the auth provider. In the case of google-oauth2, this is just an hour or so. It was quite confusing that even though I had django setting for SESSION_COOKIE_AGE (set to 1 year), this setting was not being honored.\n\nSo I suggest that the /default/ behavior should be to respect SESSION_COOKIE_AGE, with the /option/ to favor the auth provider's 'expires' header.\n\nHappy to write a pull request if project maintainers agree. Thanks!\n", "created_at": "2014-08-18T05:37:30Z"}, {"body": "after installing python-social-auth my web-server doesn't start because of the error, you are seeing in the title. Where can I get this \"defaultqrcode\"?  win7, django 1.6.5, python 2.7.5\n", "created_at": "2014-08-15T12:27:08Z"}, {"body": "These migrations are backward-compatible with Django <1.7 users. South >=1.0\nis required.\n\nSee #353\n", "created_at": "2014-08-14T19:53:09Z"}, {"body": "Using the latest commit (d53529b57f0a4992889ad490e5314a2244155afa) with Django 1.6, I get an error when running migrations introduced by #318:\n\n```\nsouth.exceptions.UnknownMigration: Migration 'default:0001_initial' probably doesn't exist.\nTraceback (most recent call last):\n  File \"/Users/clintonb/.virtualenvs/edx-analytics-dashboard/lib/python2.7/site-packages/south/migration/base.py\", line 302, in migration\n    migration = __import__(full_name, {}, {}, ['Migration'])\n  File \"/Users/clintonb/.virtualenvs/edx-analytics-dashboard/src/python-social-auth/social/apps/django_app/default/migrations/0001_initial.py\", line 4, in <module>\n    from django.db import models, migrations\nImportError: cannot import name migrations\n```\n\nThe migrations should support both Django 1.7 and South for Django < 1.7. See http://south.readthedocs.org/en/latest/releasenotes/1.0.html#library-migration-path.\n", "created_at": "2014-08-14T19:33:08Z"}, {"body": "Even more, How to test if the normal pipeline works? User signup, login, etc.?\nI have [asked the question on StackOverflow](http://stackoverflow.com/questions/25193255/how-to-test-a-custom-python-social-auth-pipeline) too, will update that if I get an answer here, or you may directly answer there. Any help or tips would be appreciated! Thanks!\n", "created_at": "2014-08-12T15:35:52Z"}, {"body": "", "created_at": "2014-08-11T22:32:50Z"}, {"body": "There is a bug either in `SocialAuthExceptionMiddleware` or somewhere upstream. `strategy.backend`  is called when setting `backend_name`; however, `strategy.backend` is not being set anywhere. The `request` has a `backend` attribute and should probably be used instead...unless I am missing something somewhere.\n", "created_at": "2014-08-11T20:54:08Z"}, {"body": "It seems that Python 3 now supported, as per Mat\u00edas Aguirre's mailing list post at:\nhttps://groups.google.com/forum/#!topic/python-social-auth/t0D1BIlFDSY\n\nIt would be good to update the supported platforms list on the PyPi record so it's explicit if there's support there. This record is used by various compatibility tools and sites.\n", "created_at": "2014-08-11T15:55:57Z"}, {"body": "See #300\n", "created_at": "2014-08-09T00:21:22Z"}, {"body": "django_app   _do_login   function needs to use numeric index when formatting string to support Python 2.6\n", "created_at": "2014-08-08T17:55:51Z"}, {"body": "Hi, \n  Thanks for your help in previous issue.\n\nIn Toronado Python social auth, I tried with twiiter oauth, but it failed with following trace:\n\nThe same API Key, Secret key i am using with django example it works fine, but with toranado example, the pbm happens.\n\nPlease correct me, if i missed any configuration.\n\nTraceback (most recent call last):\n      File \"/usr/local/lib/python2.7/dist-packages/tornado/web.py\", line 1270, in _when_complete\n        callback()\n      File \"/usr/local/lib/python2.7/dist-packages/tornado/web.py\", line 1291, in _execute_method\n        self._when_complete(method(_self.path_args, *_self.path_kwargs),\n      File \"/home/dinesh/Ganesh/python-social-auth/social/apps/tornado_app/handlers.py\", line 22, in get\n        self._auth(backend)\n      File \"/home/dinesh/Ganesh/python-social-auth/social/apps/tornado_app/utils.py\", line 40, in wrapper\n        return func(self, backend, _args, *_kwargs)\n      File \"/home/dinesh/Ganesh/python-social-auth/social/apps/tornado_app/handlers.py\", line 29, in _auth\n        do_auth(self.backend)\n      File \"/home/dinesh/Ganesh/python-social-auth/social/actions.py\", line 25, in do_auth\n        return backend.start()\n      File \"/home/dinesh/Ganesh/python-social-auth/social/backends/base.py\", line 35, in start\n        return self.strategy.redirect(self.auth_url())\n      File \"/home/dinesh/Ganesh/python-social-auth/social/backends/oauth.py\", line 154, in auth_url\n        token = self.set_unauthorized_token()\n      File \"/home/dinesh/Ganesh/python-social-auth/social/backends/oauth.py\", line 216, in set_unauthorized_token\n        tokens = self.strategy.session_get(name, []) + [token]\n    TypeError: unsupported operand type(s) for +: 'NoneType' and 'list'\n", "created_at": "2014-08-08T09:52:50Z"}, {"body": "I use sina weibo app, site need I set a redirect_uri, example: `http://www.abc.com`\n\nwhen dev, I set `SOCIAL_AUTH_WEIBO_KEY` and `SOCIAL_AUTH_WEIBO_SECRET`. auth url is \n`https://api.weibo.com/oauth2/authorize?state=vwKNabUwlCGKifEVky5TYmiHtCL5ZV7X&redirect_uri=http://192.168.9.191:9444/&response_type=code&client_id=123592348`\n\nsee that `redirect_uri=http://192.168.9.191:9444/`, this will cause sina `error:redirect_uri_mismatch`, because this uri is not the same as I set as sina  `http://www.abc.com`\n\nquestion is: how to I set that redirect_uri?\n\nThanks.\n", "created_at": "2014-08-08T07:04:41Z"}, {"body": "I'm not using the default web flow but calling the `do_auth` from my custom method:\n\n``` python\nuser = backend.do_auth(access_token, ajax=True)\n```\n\nThe problem is that `GithubOAuth2` backend never stores the `access_token` in the `extra_data` field.\n\nI came up extending the `GithubOauth2` backend:\n\n``` python\nclass GithubOAuth2Extented(GithubOAuth2):\n    \"\"\"docstring for GithubOAuth2Extented\"\"\"\n\n    # overriding parent method because it did not saved the access_token\n    def user_data(self, access_token, *args, **kwargs):\n        \"\"\"Loads user data from service\"\"\"\n        data = self._user_data(access_token)\n        if not data.get('email'):\n            try:\n                email = self._user_data(access_token, '/emails')[0]\n            except (HTTPError, IndexError, ValueError, TypeError):\n                email = ''\n\n            if isinstance(email, dict):\n                email = email.get('email', '')\n            data['email'] = email\n\n        # Added by me\n        data['access_token'] = access_token\n        return data\n        super(GithubOAuth2Extented, self).user_data()\n\n```\n\nNot sure if it is the best solution tough \n", "created_at": "2014-08-07T18:38:45Z"}, {"body": "I'm using django and I need some custom methods to work on the Django User model.\nSo for example I need a method to get the user by a specified field. \n\nSo far I've understood I have to extends the `DjangoUserMixin` mixin in  `storage.django_orm` but how? \n\nI mean I can subclass the `DjangoUserMixin` to write my custom methods but then how to tell PSA to use it instead of the default one?\n", "created_at": "2014-08-07T18:31:11Z"}, {"body": "Hi,\n    I taken, example toronodo given in \"python-social-auth\" and given my facebook app key,secret.\nwhen i tried to login via facebook, i got following traceback,\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/web.py\", line 1270, in _when_complete\n    callback()\n      File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 951, in _execute_context\n    context)\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/default.py\", line 436, in do_execute\n    cursor.execute(statement, parameters)\nOperationalError: (OperationalError) no such table: users u'SELECT count(*) AS count_1 \\nFROM (SELECT users.id AS users_id, users.username AS users_username, users.first_name AS users_first_name, users.last_name AS users_last_name, users.email AS users_email, users.password AS users_password \\nFROM users \\nWHERE users.username = ?) AS anon_1' (u'GaneshPandi',)\n```\n\n I guess, this is caused because of \"there is no table \"USER in sqlalchemy database, but i did syncdb   also.\n\nPlease help me, what wrong i am doing?\n", "created_at": "2014-08-07T13:52:27Z"}, {"body": "Update links to the VK documentation.\n", "created_at": "2014-08-05T09:32:25Z"}, {"body": "Hi,\n\nI've read through the docs and the instructions for getting things set up and working with any one given auth provider (Facebook, LinkedIn, etc.) are very clear.\n\nHowever, I cannot for the life of me figure out how to associate multiple auth provider logins with a single user. For starters, if a user is logged in with any one, what should I show? A link for all other auth methods? (e.g., if logged in with Facebook, stlll show a link for LinkedIn login maybe as \"Connect with your LinkedIn account\" or something)\n\nI'm particularly interested in supporting native login as well and allowing the native login to be associated with a Facebook and LinkedIn login (I want user to be able to create their initial account from any of these three, and then associate the other two if desired).\n\nI'm unclear how this works, please help!\n\nThanks,\n-Dave\n", "created_at": "2014-08-04T23:27:26Z"}, {"body": "Many people use South for their Django migrations. This PR includes a conditional migration so that if the Django version is pre-1.7, South will be used instead. \n", "created_at": "2014-08-04T14:38:49Z"}, {"body": "According to the security issue referenced in https://github.com/omab/django-social-auth/issues/386 - a `state` parameter should be required to prevent clickjacking of requests. \n\nIn the issue, it mentions that it backends with _Oauth2_ were fixed. I'm getting security reports that the Twitter login (via python social auth) has a security hole because it is missing the `state` parameter, presumably because Twitter uses Oauth1 instead of Oauth 2. \n\nAccording to this https://hackerone.com/reports/13555 , the state parameter should still be present even for Oauth1.\n\nCan we add the `state` parameter to the Twitter backend, or explain why it is omitted?\n", "created_at": "2014-08-01T00:23:28Z"}, {"body": "I recently installed python-social-auth for my django project, however I faced some problem using Dropbox OAuth2 Authentication. \n\n I am able to login using Dropbox, but unlike other services like google, facebook, **logging in using dropbox asks for permission everytime I login**. I am not disconnecting the user, I am just logging out.\n\nI noticed the id displayed when logged in is same, that means its able to pickup the same user from the database, but I wonder why is the access_token not being used properly. \n\nI am using the sample django app that has been provided. \n\nThanks in advance for the help\n", "created_at": "2014-07-31T06:30:49Z"}, {"body": "", "created_at": "2014-07-29T09:36:17Z"}, {"body": "Signed-off-by: Chris Lamb chris@chris-lamb.co.uk\n", "created_at": "2014-07-29T09:36:07Z"}, {"body": "These are just typos and grammatical fixes.\n", "created_at": "2014-07-28T06:07:32Z"}, {"body": "Hi there, great looking upgrade to the original django-social-auth lib!\n\nI've a few questions relating to the design decisions\n1. You seem to have created the migrations usiing django 1.7RC \n2. the django app is called \"default\" which will (and in my case) does conflict with pre-existing app names; should try to maintain some sort of namespace (dare I say it) \"sa_default\" would be appropriate or \"social_default\" or something along those lines.\n\nThoughts and feedback appreciated.\n", "created_at": "2014-07-25T15:28:39Z"}, {"body": "Fixes https://github.com/omab/python-social-auth/issues/323\n", "created_at": "2014-07-23T03:37:53Z"}, {"body": "I got an error with google:\n\n```\nDataError at /auth/complete/google-oauth2/\nvalue too long for type character varying(16)\n```\n\nNo where in django model source code (of python social auth) has 16 length, and looked at postgresql DB, and UID of social_auth_usersocialauth has 16 length!\n\nI can fix this by manually altering postgresql schema.  \n\nIt would be good for django users to have a documentation about DB schema change.  \nEspecially since \"syncdb\" database is different from the python social auth model code. (wonder why!)  \n", "created_at": "2014-07-21T08:56:57Z"}, {"body": "<mis-submit>\n", "created_at": "2014-07-16T22:33:05Z"}, {"body": "I suggest adding something like this to check if a github user is part of a team (similar to check if a user is part of an organization.\n\n```\nGITHUB_TEAM_MEMBER_OF_URL = 'https://api.github.com/teams/{team_id}/members/{username}'\n```\n\nAnd then something like this:\n\n```\n# If we have a github team id defined, test that the current user\n# is a member of that team.\nif data and self.GITHUB_TEAM_ID:\n    member_url = GITHUB_TEAM_MEMBER_OF_URL.format(\n        username=data.get('login'),\n        team_id=self.GITHUB_TEAM_ID,\n    ) + '?' + urlencode({\n        'access_token': access_token\n    })\n    try:\n        response = dsa_urlopen(member_url)\n    except HTTPError:\n        raise AuthFailed(self, 'User doesn\\'t belong to the team')\n    else:\n        if response.code != 204:\n            raise AuthFailed('User doesn\\'t belong to the team')\n```\n\nI created a working solution with the above code for `django-social-auth==0.7.28`. If there are more 0.7.\\* versions planned please add it there as well.\n", "created_at": "2014-07-16T14:51:01Z"}, {"body": "Just as a reference: https://developer.github.com/v3/oauth/#github-redirects-back-to-your-site says that it should be a POST.\n", "created_at": "2014-07-16T03:17:44Z"}, {"body": "Trying to log in with GitHub and it fails with \"HTTPError: 404 Client Error: Not Found\" when it tries to retrieve an access token. Switching the `ACCESS_TOKEN_METHOD` to POST on the GithubOAuth2 backend fixes it.\n", "created_at": "2014-07-16T03:16:28Z"}, {"body": "Just a couple of tweaks. Thanks for the toolkit.\n", "created_at": "2014-07-15T23:39:02Z"}, {"body": "When for example email address is submitted and a validation mail is sent, if the user decides to login with another email address, the session data is not updated thus still the first email address is taken into account.\n\nI think when a partial pipeline is started, existing one should be checked and removed from the session. \n\nThanks for the efforts...\n", "created_at": "2014-07-12T15:59:51Z"}, {"body": "When I try to login using google, I get redirected (after i filled in the form) here:\n\n```\n/complete/google-oauth2/\n```\n\nAnd then the connection times out.\n\n```\n504 Gateway Time-out\n```\n\nI tried to see if the server can connect to google's api. I don't know if this means it can't or can.\n\n```\nwget https://accounts.google.com/o/oauth2/token\n\n--2014-07-10 15:20:59--  https://accounts.google.com/o/oauth2/token\n\nResolving accounts.google.com (accounts.google.com)... xxxx:xxxx:xxxx:xxx::xx, xx.xxx.xxx.xx\n\nConnecting to accounts.google.com (accounts.google.com)|xxxx:xxxx:xxxx:xxx::xx|:xxx... failed: Connection timed out.\n\nConnecting to accounts.google.com (accounts.google.com)|xx.xxx.xxx.xx|:xxx... connected.\nHTTP request sent, awaiting response... 405 Method Not Allowed\n2014-07-10 15:23:06 ERROR 405: Method Not Allowed\n```\n\nI just want to say that doing the same wget from my home produces the 405 ERROR, but not the time out error. So i think it's possible that there might be something wrong with the network.\n\nThe time on my server was first the default, and then i switched it to the one you see there which is the one in my home.\n.\n\nIf anyone could help, that would be great. \n\nThanks in advance.\njenia\n", "created_at": "2014-07-10T20:37:43Z"}, {"body": "I created `@partial` pipeline function. On `social:complete` this function didn't recieve `user` param.\nIt worked properly in version 0.1.23 and broken in 0.1.26.\n", "created_at": "2014-07-09T09:17:52Z"}, {"body": "in social/apps/django_app/default/admin.py \nchange:\n\nreturn ['user_' + name for name in search_fields]\n\nto:\n\nreturn ['user__' + name for name in search_fields]\n", "created_at": "2014-07-07T14:17:28Z"}, {"body": "Is there a reason why python-social-auth doesn't use the [Authentication Policies of Pyramid](http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/api/authentication.html)? The random session cookie is kind of pointless if you have permissions set up.\n", "created_at": "2014-07-05T01:56:37Z"}, {"body": "This is a handy script that could help in migrating from the old facebook backend to the new one. Maybe it could be added as an example to the migration docs? I might be missing something too, if there are other changes between the backends.\n\nhttps://gist.github.com/tomgruner/5ce8bb1f4c55d17b5b25\n\nThanks for the great work on python social auth!\n", "created_at": "2014-07-04T22:30:13Z"}, {"body": "fix for \"AssertionError: Transaction must be committed using the transaction manager\"\nsqlalchemy commits in Pyramid use the transaction manager\n", "created_at": "2014-07-04T17:03:31Z"}, {"body": "I've added initial migration that's required in Django 1.7. I've tried it with most recent RC and it works well. The only problem is that social-auth hadn't used South migrations before and new folder `migrations` is backwards incompatible for users that still use South. AFAIK the only solution should be to create South migrations folder (eg. `south_migrations`) and tell users to use following setting:\n\n``` python\nSOUTH_MIGRATION_MODULES = {\n    'social_auth': 'social_auth.path.to.django_app.south_migrations',\n}\n```\n\nOr possibly the other way around. Rename this new folder to `django_migrations` and create new `migrations` folder with South migrations. But that seems to be more complicated option.\n\nFeedback is welcome as I'm not 100% sure how to handle this situation.\n\nRelated to #270.\n", "created_at": "2014-07-01T13:43:20Z"}, {"body": "http://stackoverflow.com/questions/13213048/urllib2-http-error-429 fixes the problem\n\nBasically reddit rate-limits their API based on the User-Agent string. Instead of sticking with the default (urllib User-Agent) this pull request sets User-Agent to 'python-social-auth-' + _ _ version _ _ so requests shouldn't hit the rate limit without knowing it\n", "created_at": "2014-07-01T06:26:25Z"}, {"body": "Hi all,\n\n```\nI've correctly implemented the login with GooglePlus, but once I signed up with an account, I'm not able to logout / disconnect correctly, and use local or other Google accounts.\n```\n\n   I'm using the login from the example:\n\n```\n            <script type=\"text/javascript\">                    \n                     var signInCallback = function (result) {\n                    if (result['error']) {\n                      alert('An error happened:', result['error']);\n                    } else {\n                      $('#code').attr('value', result['code']);\n                      $('#at').attr('value', result['access_token']);\n                      $('#google-plus').submit();\n                    }\n                };                    \n               </script>\n                  <script type=\"text/javascript\">\n                   (function () {\n                       var po = document.createElement('script');\n                       po.type = 'text/javascript';\n                       po.async = true;\n                       po.src = 'https://plus.google.com/js/client:plusone.js?onload=start';\n                       var s = document.getElementsByTagName('script')[0];\n                       s.parentNode.insertBefore(po, s);\n                   })();\n                    </script>\n                  <li role=\"presentation\">\n                 <form id=\"google-plus\" method=\"post\" action=\"{% url \"social:complete\" backend=\"google-plus\" %}\">{% csrf_token %}\n                    <input id=\"at\" type=\"hidden\" name=\"access_token\" value=\"\" />\n                    <input id=\"code\" type=\"hidden\" name=\"code\" value=\"\" />\n\n                    <div id=\"signinButton\">\n                      <span class=\"g-signin\" data-scope=\"{{ plus_scope }}\"\n                                             data-clientid=\"{{ plus_id }}\"\n                                             data-redirecturi=\"postmessage\"\n                                             data-accesstype=\"offline\"\n                                             data-cookiepolicy=\"single_host_origin\"\n                                             data-callback=\"signInCallback\">\n                      </span>\n                    </div>\n               </form>\n               </li>`\n```\n\nI've tried for logout both  \n\n```\nurl(r'^logout/$', 'django.contrib.auth.views.logout', {'next_page': '/'},  name='logout'),\n```\n\nand my own view\n\n```\ndef logout(request):\n    \"\"\"Logs out user\"\"\"\n    auth_logout(request)\n    return redirect('/')\n    #url(r'^logout', 'siteLogic.views.logout', name='logout'),\n```\n\nRegarding disconnect, it seems it works well since no association is found in the following code once executed the following\n\n```\n   <div class=\"social\">\n        {% for sublist in available_backends|social_backends %}\n          <div class=\"row\">\n            {% for name, backend in sublist %}\n              {% associated backend %}\n              {% if association %}\n                <form class=\"disconnect-form\" action=\"{% url \"social:disconnect_individual\" backend=association.provider association_id=association.id %}\" method=\"post\">{% csrf_token %}\n                  <button type=\"submit\" name=\"{{ backend|backend_class }}\" class=\"btn btn-danger\">Disconnect {{ backend|backend_name }}</button>           \n                </form>\n              <!--{% else %}-->\n              <!--  <a class=\"col-md-2 btn btn-default\" name=\"{{ backend|backend_class }}\" href=\"{% url \"social:begin\" backend=name %}\">-->\n              <!--    <i class=\"fa fa-{{ name|icon_name }}\"></i>-->\n              <!--    {{ backend|backend_name }}-->\n              <!--  </a>-->\n              <!--{% endif %}-->\n            {% endfor %}\n          </div>\n        {% endfor %}\n```\n\nBut once I load the homepage with the login code, it automatically signs in with the initial Google account, without letting me use local accounts or another Google account.\n\nI've tried googling and stackoverflow without much luck and I'm stuck, so help is appreciated.\n", "created_at": "2014-06-30T14:49:13Z"}, {"body": "I have implemented django app with python-social-auth. It was working before 4 days back with facebook login,but now when I tried to login in with app  using facebook it is giving me following error,\n\nTypeError at /complete/facebook/\n'dict' object is not callable\n", "created_at": "2014-06-27T11:19:32Z"}, {"body": "- so that we can pull from the details rather than the response\n", "created_at": "2014-06-26T08:51:42Z"}, {"body": "Please provide us a change log file, and update for every release.\n", "created_at": "2014-06-26T02:17:49Z"}, {"body": "Make the get_user method generic\n", "created_at": "2014-06-25T12:36:05Z"}, {"body": "Change link to Django example urls.py so it leads to the right file (and\nnot a 404 error page).\n", "created_at": "2014-06-24T09:03:39Z"}, {"body": "I am adding Facebook Auth to my django(1.5.8) site.  I have set SOCIAL_AUTH_USER_MODEL to our cutsom user. When the pipeline hits the create_user call, it appears to be looking in storage/base.py for user_model which of course raises the NotImplementedError. Shouldn't it use the one in django_app?\nError:\nException Value:  \nImplement in subclass\nException Location: .../lib/python2.7/site-packages/social/storage/base.py in user_model, line 103\n\nThanks!\n", "created_at": "2014-06-23T23:44:37Z"}, {"body": "I am only authenticating users if they have an existing account in the system, and would like to create a strategy/storage agnostic pipeline function to do this\n\nAt the moment you provide get_user (by pk) and get_users_by_emails and user_exists (by username) methods, but not a get_user_by_username method needed to do this if the   - do you agree it makes sense to add one?\n", "created_at": "2014-06-23T14:29:14Z"}, {"body": "Addresses #305.\n", "created_at": "2014-06-22T20:34:53Z"}, {"body": "A new backend to o-authenticate with Moves app (https://dev.moves-app.com/docs/authentication)\n", "created_at": "2014-06-22T01:30:41Z"}, {"body": "When i trying to user Facebook backend the following error appears\n\n```\nException Value: No module named 'social_auth'\nException Location: /home/vyscond/tartarus/partyup/env-partyup/lib/python3.4/site-packages/social/utils.py in import_module, line 16\n```\n\nso i've debbuged with a print function \n\n``` python\ndef import_module(name):\n    print(name)\n    __import__(name)\n    return sys.modules[name]\n```\n\nthe return is \n\n```\nsocial.backends.google\nsocial.backends.twitter\nsocial_auth.backends.facebook\n```\n\nso why the backend for facebook is different?\n", "created_at": "2014-06-20T21:47:25Z"}, {"body": "I'm having a hard time finding the place to specify the extra `access_type=offline` to the authorization url, needed to get back a refresh token.\n\nAfter that, I am not sure if the `UserSocialAuth.refresh_token` method will work.\n", "created_at": "2014-06-20T09:35:01Z"}, {"body": "I'm using python-social-auth with Django. Url configs as:\n`url('', include('social.apps.django_app.urls', namespace='social'))`\nCurrently, when auth providers are not accessible or there is any error returned from provider, python-social-auth always raise an error which makes 500 response. From my point of view, when auth provider not accessible, it's more reasonable to return a 503 instead of raising 500. 500 is not good to SEO. What's your opinion on it?\n", "created_at": "2014-06-19T11:01:25Z"}, {"body": "From [django doc](https://docs.djangoproject.com/en/dev/topics/auth/customizing/#django.contrib.auth.models.CustomUser.USERNAME_FIELD): \n\nA string describing the name of the field on the User model that is used as the unique identifier. This will usually be a username of some kind, but it can also be an email address, or any other unique identifier. The field must be unique (i.e., have unique=True set in its definition).\n\nBasically it says `USERNAME_FIELD` is a field to uniquely identify a user.\n\nI'd like to use `username` field to hold real name or a nickname (duplicable)\n`email` field as the `USERNAME_FIELD`\nand it is hard to achieve with python-social-auth. \n\nFor example, google oauth2 gives me \nusername: eugene\nemail: a@gmail.com\n\nI'd like to use the data to create (username: eugene, unique email: a@gmail.com) user.  \nFollowing two functions are responsible for the username/email field.\n\n(pipeline.user.py)\n\n```\ndef get_username(strategy, details, user=None, *args, **kwargs):\n....\n    if email_as_username and details.get('email'):\n        username = details['email']\n    elif details.get('username'):\n        username = details['username']\n```\n\n(storage.django.orm.py)\n\n```\n@classmethod\ndef create_user(cls, *args, **kwargs):\n    if 'username' in kwargs:\n\n        kwargs[cls.username_field()] = kwargs.pop('username')\n   return cls.user_model().objects.create_user(*args, **kwargs)\n```\n\nThey allow \n1. email: a@gmail.com (email_as_username = True, USERNAME_FIELD=email)\n2. username: eugene email: a@gmail.com (USERNAME_FIELD=username)\n3. username: a@gmail.com (email_as_username = True, USERNAME_FIELD=username)\n4. email: eugene (USERNAME_FIELD=email)\n\nHow do I get\nusername: eugene email: a@gmail.com while USERNAME_FIELD=email ?\n\nShould I override either of the above two functions or individual oauth2 backend class code? \n", "created_at": "2014-06-19T10:54:01Z"}, {"body": "QQ support from yogzhang.\n", "created_at": "2014-06-18T17:59:47Z"}, {"body": "It would be great if the backend could define its own LOGIN_REDIRECT_URL.\n\nThanks!\n", "created_at": "2014-06-18T16:48:45Z"}, {"body": "Am I correct in understanding that Open ID Connect ( http://openid.net/connect/ ) is not supported yet?\n", "created_at": "2014-06-18T16:39:18Z"}, {"body": "", "created_at": "2014-06-18T15:07:58Z"}, {"body": "It was impossible to change the version API vkotnakte\n", "created_at": "2014-06-18T14:29:03Z"}, {"body": "`client_id` may contain special characters which break the URL (e.g. `&` or `;`).\n\nThis seems to have introduced in https://github.com/omab/python-social-auth/commit/05dc5ae0b3f812a4c54904cb25ffd0c7f3653fd9. I'm not sure of the reason exactly why `redirect_uri` needs to be unescaped, but presumably the other parameters of auth_url can be escaped without any issues.\n", "created_at": "2014-06-17T15:02:46Z"}, {"body": "Instagram backend failed cause of the \"wrong\" response format:\n\n``` json\n{\n    \"meta\": {\n        \"code\": 200\n    },\n    \"data\": {\n        \"username\": \"adalekin\",\n        \"bio\": \"\",\n        \"website\": \"\",\n        \"profile_picture\": \"http://images.ak.instagram.com/profiles/profile_49943991_75sq_1335811146.jpg\",\n        \"full_name\": \"\",\n        \"counts\": {\n            \"media\": 0,\n            \"followed_by\": 22,\n            \"follows\": 22\n        },\n        \"id\": \"49943991\"\n    }\n}\n```\n\nThe Instagram backend expects \"user\" key instead of \"data\".\n", "created_at": "2014-06-16T16:30:30Z"}, {"body": "I'm following the Django examples, and I'm getting a \"cannot import name psa\" error from `from social.apps.django_app.utils import psa`.\n\nSee https://github.com/omab/python-social-auth/blob/master/examples/django_example/example/app/views.py#L12\n", "created_at": "2014-06-15T23:56:43Z"}, {"body": "I have \n\n```\nSOCIAL_AUTH_SCOPE = SOCIAL_AUTH_FACEBOOK_SCOPE = [\n    'email',\n    'manage_pages',\n    'publish_stream'\n]\n```\n\nIn my settings file, but Facebook always returns `{\"error\":{\"message\":\"(#200) The user hasn't authorized the application to perform this action\",\"type\":\"OAuthException\",\"code\":200}}` with a status code of 403 when I try to modify a page.  \n", "created_at": "2014-06-10T13:45:29Z"}, {"body": "Changes the backend domains from www.docker.io to hub.docker.com\n", "created_at": "2014-06-09T17:47:06Z"}, {"body": "Just wanted to switch from OpenID to OAuth2 (Google). But Google OAuth2 seems to be broken in 0.1.24. \n\nSome changes in e35251878a88954cecf8e575eca27c63164b9f67 broke the Google OAuth2 support. \n\nFirst error I got when trying to implement is was a `Forbidden` from google, because of the wrong profile URL (this change https://github.com/omab/python-social-auth/commit/e35251878a88954cecf8e575eca27c63164b9f67#diff-87ca9bbdd573caceec2edef120332b73L40)\n\nWhen reverting the line, next error was a `KeyError`, because the parser for the user-details gets the wrong data (this change https://github.com/omab/python-social-auth/commit/e35251878a88954cecf8e575eca27c63164b9f67#diff-87ca9bbdd573caceec2edef120332b73R29). \n\nAfter downgrade to 0.1.23 everything worked fine (for this backend). \n\nDid google change something here? Or is it just a bug? \n", "created_at": "2014-06-02T16:03:09Z"}, {"body": "Since commit b1fa8bca3eb7abce29439809ace6dcbfc5578769 the partial authentication is broken in Django (at least for my use case). I've tracked down the problem to the fact that `response` is no longer stored in the session data. This is due to fact that `partial_to_session` removes it since b1fa8bca3eb7abce29439809ace6dcbfc5578769 as it does filtering on all elements, while before it did that only on the ones being added from kwargs (`response` was added unfiltered before and now it's filtered).\n\nHowever I think the broken piece of code is the one documented as  \"Clean any MergeDict data type from the values\", which obviously does not convert the MergeDict to dict and it's then filtered. I'm not sure how to fix this properly as importing Django specific class into generic PSA code does not sound correct.\n", "created_at": "2014-05-28T08:35:20Z"}, {"body": "There's a message in the file social/apps/django_apps/views.py, as document of view complete: \n\n> Authentication complete view, override this view if transaction management doesn't suit your needs.\n\nBut I want to change the response of view complete from HTTP redirect to Json message. \nHow can I override it?\n\nThank you!\n", "created_at": "2014-05-26T14:29:57Z"}, {"body": "```\nsocial_auth = UserSocialAuth.get_social_auth_for_user(user, provider='linkedin-oauth2')[0]\nstrategy = load_strategy(backend='linkedin-oauth2')\nsocial_auth.refresh_token(strategy)\n```\n\nAbove code makes POST request to `https://www.linkedin.com/uas/oauth2/accessToken` with data:\n\n```\n{\n    'client_id': '**************',\n    'client_secret': '**************',\n    'grant_type': 'refresh_token',\n    'refresh_token': u'...'\n}\n```\n\nRequirements from documentation are different:\n\n```\nhttps://www.linkedin.com/uas/oauth2/accessToken?grant_type=authorization_code\n                                           &code=AUTHORIZATION_CODE\n                                           &redirect_uri=YOUR_REDIRECT_URI\n                                           &client_id=YOUR_API_KEY\n                                           &client_secret=YOUR_SECRET_KEY\n```\n", "created_at": "2014-05-25T01:39:13Z"}, {"body": null, "created_at": "2014-05-24T23:55:01Z"}, {"body": "User Story:\n\nDean the Developer is trying to debug part of his application that deals with social auth. However when he goes to test the cases handing exceptions he can't because social auth short circuits those parts while DEBUG= True.\n\nDean would like DEBUG=True to not short circuit exception handling.\n", "created_at": "2014-05-23T22:23:43Z"}, {"body": "Django 1.7 includes a built in 'get_search_fields' admin method which requires the 'request' parameter: https://docs.djangoproject.com/en/1.7/ref/contrib/admin/#django.contrib.admin.ModelAdmin.get_search_fields\n", "created_at": "2014-05-22T21:46:43Z"}, {"body": "When trying to login, I'm getting this from google:\n1. That\u2019s an error.\n\nError: invalid_scope\n\nSome requested scopes were invalid. {valid=[https://www.googleapis.com/auth/userinfo.email], invalid=[plus.login]}\n", "created_at": "2014-05-22T05:41:10Z"}, {"body": "https://developers.google.com/+/api/auth-migration\n\nPython-social-auth should strongly deprecate google openid, since it will go away completely in 2015, and is as of this month closed to new clients.\n\nAlso, please double check that the oauth 2/ openid connect (google) implementation works per their long term migration plans.\n", "created_at": "2014-05-21T19:53:38Z"}, {"body": "", "created_at": "2014-05-20T22:29:10Z"}, {"body": "I'm updating my project from django-1.2/python-2.6 to django-1.6/python-3.4, and most of it was straight forward.\n\nI was using django-social-auth and I see that it's deprecated in favor of this solution.\n\nThe thing is: the python-openid dependency will fail because they don't support py3k yet.\n\nWhich alternative could I use in order to get google login support at least?\n", "created_at": "2014-05-20T13:16:55Z"}, {"body": "This will make sure if a non-default extra argument appears in one request, subsequent requests w/o this extra argument will still use the default value.\n", "created_at": "2014-05-20T05:08:14Z"}, {"body": "The `cliend_id` parameter is set to `None`. \n", "created_at": "2014-05-16T16:48:31Z"}, {"body": "Hi. I have some problem with fb auth. Maybe this is bug? \n1. I registered fb application on facebook.com\n2. Installed test application with virtualenv \n\n```\nDjango==1.6.5\nargparse==1.2.1\noauthlib==0.6.1\npython-openid==2.2.5\npython-social-auth==0.1.23\nrequests==2.2.1\nrequests-oauthlib==0.4.0\nsix==1.6.1\nwsgiref==0.1.2\n```\n1. I do test auth request and app crash =(\n\n```\nDjango version 1.5, using settings 'example.settings'\nDevelopment server is running at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\nInternal Server Error: /complete/facebook/\nTraceback (most recent call last):\n  File \"/home/suwer/.venv/eng/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n  File \"/home/suwer/.venv/eng/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"../../social/apps/django_app/utils.py\", line 45, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"../../social/apps/django_app/views.py\", line 21, in complete\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\n  File \"../../social/actions.py\", line 44, in do_complete\n    *args, **kwargs)\n  File \"../../social/strategies/base.py\", line 71, in complete\n    return self.backend.auth_complete(*args, **kwargs)\n  File \"../../social/backends/facebook.py\", line 62, in auth_complete\n    state = self.validate_state()\n  File \"../../social/backends/oauth.py\", line 307, in validate_state\n    raise AuthStateMissing(self, 'state')\nAuthStateMissing: Session value state missing.\n[16/May/2014 12:54:10] \"GET /complete/facebook/?redirect_state=8vGFbbjtD8Q3VFvB8E1AjpJIIIrMtxW5&code=AQB1-SM-My7n0uiSCtos10iI_qEAi8_QjTPdplWfnxYuSlmoKZrYa2y0SZy8OTBab5I5A1sFIqSZNyDVwHN570NiEyvF4YohZMJxSeGXWyYa5QSil-qBvsfA2BT1pjPa_6ASCQFZBwXJn4EyOXTdrQzPej2m49FRSPDPetneA4SpxOsEyqqCRYiLdUxKIfmYjsLhqxgiTpJhBIU55ktMSOIh7HzzFEtoaE_q25knwo042z3X7Zm7q7LQeVTzbgi8TPg2rsBeIqesTWSfJdHMCuDlGuaS6TEeCMYNbVhbFoXYQk1-kJWkuJkZzFF6e8udQos&state=8vGFbbjtD8Q3VFvB8E1AjpJIIIrMtxW5 HTTP/1.1\" 500 144223\n\n```\n\n```\n../../social/backends/oauth.py in validate_state\n            raise AuthStateMissing(self, 'state') ...\n\u25bc Local vars\nVariable    Value\nrequest_state   u'eM3VOv6WnpLcneVEuEDGzIublSQiKMez'\nstate     None\nself    <social.backends.facebook.FacebookOAuth2 object at 0x7fe69c3c6a10>\n```\n1. Test some last version django (1.5, 1.6)  + chrome, firefox\n\nThank you.\n", "created_at": "2014-05-16T15:57:53Z"}, {"body": "Implemented in OAuth2\n", "created_at": "2014-05-16T01:31:04Z"}, {"body": "Pip is showing it's on version `0.1.23`, the same as the last release, witch includes updates to the facebook backend (login with API 2.0), but the code does not match the code on the release.\n", "created_at": "2014-05-15T23:28:21Z"}, {"body": "I want to redirect user to page where he came from, but if it is a new user I want to redirect him to special landing page.\nIf I set `SOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/landing/'` and start login from `/login/facebook/?next=/` \u2014 user will be redirected to `/` instead of `/landing/`.\nWhy?\n", "created_at": "2014-05-14T12:35:56Z"}, {"body": "Non-SSL API deprecated: 27 June 2014, 10:00 (PDT)\n", "created_at": "2014-05-13T07:31:56Z"}, {"body": "Some PSA backends can have very sensitive access tokens. For example, a token can give write access to a user's GitHub repositories. I think that's something that should be given extra protection.\n\nThe most reasonable solution, in my opinion, is to encrypt the DB column containing the token. Disk encryption isn't quite the right way to protect this data. Databases are often backed-up or replicated, so protecting sensitive data then requires ensuring everything is encrypted when transmitting to or storing on other machines.\n\nSome cursory searching reveals a couple of handy tools for encrypting fields. https://github.com/defrex/django-encrypted-fields looks like the most promising one. \n\nIf people are OK with this, I might play around with hooking it up. I've built similar things before.\n", "created_at": "2014-05-13T05:06:41Z"}, {"body": "Google is deprecating two scopes that are used by python-social-auth and they will not be supported after 9/1/2014:\n- https://www.googleapis.com/auth/userinfo.profile\n- https://www.googleapis.com/auth/userinfo.email\n\nMore details here: \n- https://developers.google.com/+/api/oauth#login-scopes\n- https://developers.google.com/+/api/auth-migration#timetable\n\nThis was discovered in #258 \n", "created_at": "2014-05-12T22:22:20Z"}, {"body": "I am using Django REST Framework + Python-Social-Auth. I already got Facebook and Google OAuth2 working, but am having a problem using the same code to connect Twitter. I am having the same error as #107, but solution does not work because all work is done on the client and I have to work with keys in the request:\n\n``` python3\n{\n    \"backend\": \"twitter\",\n    \"access_token\": \"2478*************************************tdkiOW\",\n    \"access_token_secret\": \"WgaYaEyHL******************************X6UpzAlTgITPa\"\n}\n```\n\n``` python3\nkwargs = {key: value for key, value in serializer.data.items() if key != 'backend'}\nuser = request.user\nkwargs['user'] = user.is_authenticated() and user or None\nuser = strategy.backend.do_auth(**kwargs)\n```\n\nI also tried to do something like this:\n\n``` python3\nif serializer.is_valid():\n            backend = serializer.data['backend']\n            oauth_token = serializer.data['access_token']\n            oauth_token_secret = serializer.data['access_token_secret']\n...\ntwitter = {'oauth_token': oauth_token, 'oauth_token_secret': oauth_token_secret}\nuser = strategy.backend.do_auth(twitter)\n```\n\nBut no matter what I tried, I always got the same stacktrace\n\n```\nEnvironment:\n\nRequest Method: POST\nRequest URL: http://127.0.0.1:8000/social-auth/\n\nDjango Version: 1.7b3\nPython Version: 3.4.0\nInstalled Applications:\n('django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'rest_framework',\n 'api',\n 'rest_framework.authtoken',\n 'social.apps.django_app.default')\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware')\n\nTraceback:\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/django/core/handlers/base.py\" in get_response\n  113.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/django/views/generic/base.py\" in view\n  69.             return self.dispatch(request, *args, **kwargs)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n  57.         return view_func(*args, **kwargs)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/rest_framework/views.py\" in dispatch\n  400.             response = self.handle_exception(exc)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/rest_framework/views.py\" in dispatch\n  397.             response = handler(request, *args, **kwargs)\nFile \"/Users/maryokhin/Workspace/backend/api/views/auth.py\" in post\n  54.           user = strategy.backend.do_auth(**kwargs)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/social/backends/oauth.py\" in do_auth\n  124.         data = self.user_data(access_token)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/social/backends/twitter.py\" in user_data\n  33.             auth=self.oauth_auth(access_token)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/social/backends/base.py\" in get_json\n  195.         return self.request(url, *args, **kwargs).json()\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/social/backends/base.py\" in request\n  188.             response = request(method, url, *args, **kwargs)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/requests/api.py\" in request\n  44.     return session.request(method=method, url=url, **kwargs)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/requests/sessions.py\" in request\n  349.         prep = self.prepare_request(req)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/requests/sessions.py\" in prepare_request\n  287.             hooks=merge_hooks(request.hooks, self.hooks),\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/requests/models.py\" in prepare\n  291.         self.prepare_auth(auth, url)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/requests/models.py\" in prepare_auth\n  470.             r = auth(self)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/requests_oauthlib/oauth1_auth.py\" in __call__\n  67.                 unicode(r.url), unicode(r.method), None, r.headers)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/oauthlib/oauth1/rfc5849/__init__.py\" in sign\n  280.         request.oauth_params.append(('oauth_signature', self.get_oauth_signature(request)))\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/oauthlib/oauth1/rfc5849/__init__.py\" in get_oauth_signature\n  112.         uri, headers, body = self._render(request)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/oauthlib/oauth1/rfc5849/__init__.py\" in _render\n  186.             headers = parameters.prepare_headers(request.oauth_params, request.headers, realm=realm)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/oauthlib/oauth1/rfc5849/utils.py\" in wrapper\n  32.         return target(params, *args, **kwargs)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/oauthlib/oauth1/rfc5849/parameters.py\" in prepare_headers\n  58.         escaped_value = utils.escape(value)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/oauthlib/oauth1/rfc5849/utils.py\" in escape\n  57.                          'Got %s of type %s.' % (u, type(u)))\n\nException Type: ValueError at /social-auth/\nException Value: Only unicode objects are escapable. Got None of type <class 'NoneType'>.\n```\n\nAny help would be appreciated, thank you.\n", "created_at": "2014-05-12T14:20:23Z"}, {"body": "Since, as far as I can tell, there is no longer any reference to the `oauth2` package in the code.\n", "created_at": "2014-05-10T23:33:59Z"}, {"body": "Although it'll be probably wise to wait until release of Django 1.7, I just wanted to leave this here: http://treyhunner.com/2014/03/migrating-to-django-1-dot-7/. It should be pretty straightforward.\n", "created_at": "2014-05-09T13:43:10Z"}, {"body": "When I change the models.py in the django example to this:\n\n```\nfrom django.db import models\nfrom django.contrib import auth\nfrom django.core import urlresolvers\n\nclass CustomUser(auth.models.AbstractBaseUser, auth.models.PermissionsMixin):\n    email = models.EmailField(unique=True, error_messages={'unique':\n         urlresolvers.reverse(\"example.app.views.logout\")  })\n```\n\nthe following exception gets thrown:\n\n```\nTraceback (most recent call last):\n     File \"/home/ario/.virtualenvs/mdp/lib/python3.3/site-packages/django   /core/urlresolvers.py\", line 358, in urlconf_module\n     return self._urlconf_module\nAttributeError: 'RegexURLResolver' object has no attribute '_urlconf_module'\n```\n\nIn a vanilla django app with above models.py, this does not happen.\n", "created_at": "2014-05-08T23:21:09Z"}, {"body": "I'm trying to get token on client side and send it to server like, but it always gives me the same error: Invalid token:\n\n``` python\nclass ObtainAuthToken(APIView):\n    throttle_classes = ()\n    permission_classes = ()\n    parser_classes = (parsers.FormParser, parsers.MultiPartParser, parsers.JSONParser,)\n    renderer_classes = (renderers.JSONRenderer,)\n    serializer_class = AuthTokenSerializer\n    model = Token\n\n    # Accept backend as a parameter and 'auth' for a login / pass\n    def post(self, request, backend):\n        serializer = self.serializer_class(data=request.DATA)\n\n        if backend == 'auth':\n            if serializer.is_valid():\n                token, created = Token.objects.get_or_create(user=serializer.object['user'])\n                #return Response({'token': token.key})\n                return \"debug\"\n            return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n            #return 'BAD'\n\n        else:\n            # Here we call PSA to authenticate like we would if we used PSA on server side.\n            user = register_by_access_token(request, backend)\n            #user = None\n\n            # If user is active we get or create the REST token and send it back with user data\n            if user and user.is_active:\n                token, created = Token.objects.get_or_create(user=user)\n                return Response({'id': user.id , 'name': user.username, 'userRole': 'user','token': token.key})\n                #return \"msg\"\n\n        @strategy()\n        def register_by_access_token(request, backend):\n            backend = request.strategy.backend\n            auth = get_authorization_header(request).split()\n\n            if not auth or auth[0].lower() != b'token':\n                msg = 'No token header provided.'\n                return msg\n\n            if len(auth) == 1:\n                msg = 'Invalid token header. No credentials provided.'\n                return msg\n\n            access_token=auth[1]\n            user = backend.do_auth(access_token)\n            \"\"\"\n            user = request.user\n            user = backend.do_auth(\n                access_token=request.GET.get('access_token'),\n                user=user.is_authenticated() and user or None\n            )\n            \"\"\"\n            return user\n```\n\n**Edit:** wrapped code in three-tics to style it\n", "created_at": "2014-05-08T15:35:11Z"}, {"body": "it is needed to make available merge user by email when it register by VK and username not email by authentification is by email\n\nSuccesfully tested. Didn't added this fix to VKontakteOpenAPI. Can't test it.\n", "created_at": "2014-05-08T12:41:15Z"}, {"body": "@omab i am using your python social auth code for one of my tornado project.First of all i have faced an error such as...\nTraceback (most recent call last):\n  File \"app.py\", line 17, in <module>\n    import settings\n  File \"/codes/A/tornadososauth/settings.py\", line 47, in <module>\n    from local_settings import *\nImportError: No module named local_settings\nwhile trying to run the code.Then with no idea i have just create a new file namely local_settings.py and copy and paste the code from the settings.py .Then i have succeed to run the code.The home page is showing several social auth option including google,facebook,yahoo,bitbucket etc.But none them is working,that is after clicking any of the link, i am facing an error namely  500: Internal Server Error.Now whats the problem?\n", "created_at": "2014-05-08T05:55:13Z"}, {"body": "The official URL for this is api.xing.com and not www.xing.com\n\nThere is no guarantee, that www. will work in the future\n", "created_at": "2014-05-07T13:52:59Z"}, {"body": "added new backend classes for Facebook that use the Open Graph 2.0 endpoints\n", "created_at": "2014-05-06T19:57:55Z"}, {"body": "After migration from django-social-auth my site can't get extra data from VK.\nI had this string in old version settings.py:\n`VK_EXTRA_DATA = ['photo_big','city', 'country', 'sex', 'contacts', 'bdate', 'education', 'counters']`\nand all worked fine. But now its broken. I compared backend's code and found this string in djang-social-auth.backends.contrib.vk.VKOAuth2.user_data():\n`fields = ','.join(VK_DEFAULT_DATA + setting('VK_EXTRA_DATA', []))`\nHow to return this functionality into python-social-auth?\n", "created_at": "2014-05-02T09:30:29Z"}, {"body": "LoginRadius supports multiple providers and inherits from BaseAuth and BaseOAuth2 because of the need to return HTML.\n", "created_at": "2014-05-01T17:02:56Z"}, {"body": "Implemented after https://developers.kakao.com/docs/restapi\n", "created_at": "2014-04-30T12:49:28Z"}, {"body": "Are http://psa.matiasaguirre.net/docs/backends/amazon.html out of date? Is amazon login still broken from amazons end? I'm wanting to implement it, but if amazon is not working, I'll try something else.\n", "created_at": "2014-04-30T02:53:40Z"}, {"body": "I'm having a problem with the Strava backend and it's been discussed on the Strava API group here: https://groups.google.com/forum/#!topic/strava-api/Tr7mao3S5VM\n\n\"During OAuth2 authorization I am getting redirected to:\n\nhttp://localhost:8000/api/v1/social-auth/complete/strava/?redirect_state=xxxxxxx?code=xxxxxxxxx&state=xxxxxxxxx\n\nNote the query parameter. There is a question make after the redirect_state parameter and before the code. There should be an '&' there.\"\n\nAnyway, it turns out both me and the original poster of that topic are having the same issue and we are both using python-social-auth.  I wondered if you could test it on your end and confirm it's not a python-social-auth issue?\n", "created_at": "2014-04-24T02:34:14Z"}, {"body": "It would be great if we had the ability to customize the AX_SCHEMA_ATTRS in the open_id backend. Then we could limit information sharing to just the email address.\n\nFor example, by default python-social-auth will have Google share email address & basic info:\n\n![email_address_and_basic_info](https://cloud.githubusercontent.com/assets/153107/2785418/ec0b077a-cb53-11e3-9e37-b29378f47eaf.png)\n\nIf you modify backends.open_id to have:\n\n```\nAX_SCHEMA_ATTRS = [\n    ('http://axschema.org/contact/email', 'email'),\n]\n```\n\nThen it prompts for less info:\n![just_email_address](https://cloud.githubusercontent.com/assets/153107/2785424/0ca082bc-cb54-11e3-9c05-7ba1a1e88653.png)\n\nFor this example the Django User was created without any apparent issue. The First Name & Last Name were blank of course, and the username was some sort of hash.\n", "created_at": "2014-04-24T02:02:36Z"}, {"body": "more information this: https://github.com/maxcountryman/flask-login/issues/9\n", "created_at": "2014-04-23T19:47:06Z"}, {"body": "[Yahoo Contacts and Profile APIs move to HTTPS](http://yahoodevelopers.tumblr.com/post/75633763287/yahoo-contacts-and-profile-apis-move-to-https)\n`Yahoo Mail connections are now encrypted with HTTPS by default. To support this move, we have also enabled HTTPS access to Yahoo Contacts and Profile APIs.`\nYahoo Social API Guide:\n[Introspective GUID](https://developer.yahoo.com/social/rest_api_guide/introspective-guid-resource.html)\n[Usercard Profile](https://developer.yahoo.com/social/rest_api_guide/usercard-resource.html)\n\nsee also [this thread](https://developer.yahoo.com/forum/OAuth-General-Discussion-YDN-SDKs/http-social-yahooapis-com-Will-be-right-back/1395509802423-89faffa2-1503-486d-bc29-6505719bd774)\n", "created_at": "2014-04-23T11:21:39Z"}, {"body": "[The docs](http://psa.matiasaguirre.net/docs/configuration/settings.html#tweaking-some-fields-length) mention the 767 byte error, but the recommendation of `SOCIAL_AUTH_UID_LENGTH = 223` does not work for the utf8mb4 character set. A value of 191 was the largest I could use to get around the 767 byte error.\n", "created_at": "2014-04-23T01:15:35Z"}, {"body": "Python Social Auth's Django App [directly references](https://github.com/omab/python-social-auth/blob/099b0881b3f61de9280727f3e75e96a4401b898d/social/apps/django_app/default/models.py#L52) a property that is marked for internal use only. \n\n``` python\nfield = UserSocialAuth.user_model()._meta.get_field(username_field)\n```\n\nThe use of `_meta` here is problematic for applications that are service oriented by nature. If your user store is a service consumed by a client that houses python social auth (like a legacy user store) you should not have to implement all the \"internal\" stuff (like `_meta`) that a Django model has. By adding a simple check this could probably be avoided.\n", "created_at": "2014-04-21T17:37:43Z"}, {"body": "I've got a custom user model like so\u2014\n\n```\nclass User(AbstractBaseUser):\n    email = models.EmailField(unique=True)\n\n    USERNAME_FIELD = 'email'\n```\n\nI've added the appropriate social-auth settings\u2014\n\n```\nAUTHENTICATION_BACKENDS = (\n    'social.backends.persona.PersonaAuth',\n)\n\nAUTH_USER_MODEL = 'accounts.User'\nSOCIAL_AUTH_USER_MODEL = 'accounts.User'\n```\n\nWhen trying to log in, a user with the email `beau@<domain>` gets created, however the email in the database is set to something like `beau1234567890`. That user doesn't authenticate (ie, `request.user` is still `AnonymousUser`).\n\nIf I nuke the `AUTH_USER_MODEL` and `SOCIAL_AUTH_USER_MODEL`, I can log in fine.\n\nI'm speculating the issue is because the user model has a field called `email`, but it's also the `USERNAME_FIELD`. Hence, trying to create a user, social-auth creates a unique username, and overrides the email with that, assuming we'd have separate `email` and `username` fields\u2014which is the case when using the default, `django.contrib.auth.models.User` model.\n\nAny ideas on how to fix this?\n", "created_at": "2014-04-19T16:11:31Z"}, {"body": "First of all: thanks so much for releasing, supporting and documenting this app! I am really pumped to use it, just a little problem in the way.\n\nI am using Django and here are my settings:\n\n``` python\nTEMPLATE_CONTEXT_PROCESSORS = (\n    ...\n    'social.apps.django_app.context_processors.backends',\n    'social.apps.django_app.context_processors.login_redirect',\n)\n\nMIDDLEWARE_CLASSES = (\n    ...\n    'social.apps.django_app.middleware.SocialAuthExceptionMiddleware',\n)\n\nBASE_AND_LIBRARY_APPS = (\n    ...\n    'social.apps.django_app.default',\n    ...\n)\n\nAUTHENTICATION_BACKENDS = (\n   'social.backends.facebook.FacebookOAuth2',\n   'social.backends.google.GoogleOAuth2',\n   'social.backends.twitter.TwitterOAuth',\n   'django.contrib.auth.backends.ModelBackend',\n)\n\nSOCIAL_AUTH_FACEBOOK_KEY = os.environ.get(\"SOCIAL_AUTH_FACEBOOK_KEY \", None)\nSOCIAL_AUTH_FACEBOOK_SECRET = os.environ.get(\"SOCIAL_AUTH_FACEBOOK_SECRET\", None)\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\n\nSOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.environ.get(\"SOCIAL_AUTH_GOOGLE_OAUTH2_KEY\", None)\nSOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.environ.get(\"SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET\", None)\n\nSOCIAL_AUTH_TWITTER_KEY = os.environ.get(\"SOCIAL_AUTH_TWITTER_KEY\", None)\nSOCIAL_AUTH_TWITTER_SECRET = os.environ.get(\"SOCIAL_AUTH_TWITTER_SECRET\", None)\n\nLOGIN_REDIRECT_URL = '/'\n\nAUTH_USER_MODEL = \"user_profile.UserProfile\"\n```\n\nAnd my link like such:\n\n```\n<a href=\"{% url 'social:begin' 'facebook' %}?next={{ request.path }}\">Login with Facebook</a>\n```\n\nI must have fudged something up, I've looked at all the resources I could find and it seems like I am doing this right. I am positive the key is actually set:\n\n```\n(venv) > heroku run echo $SOCIAL_AUTH_FACEBOOK_KEY\nRunning `echo $SOCIAL_AUTH_FACEBOOK_KEY` attached to terminal... up, run.4085\n62342344525454353453452739\n```\n\nbut when I look at the url:\n![image](https://cloud.githubusercontent.com/assets/2185159/2748334/6e8338d6-c7bb-11e3-88fd-68b2f3e2e1b3.png)\n\n`?client_id=None`\n\nAgain, thanks for the lib and I appreciate any help!\n", "created_at": "2014-04-19T12:09:40Z"}, {"body": "Running the provided Django example was impossible with Django 1.6, it gave the following error:\n\n```\npython manage.py syncdb\nCommandError: One or more models did not validate:\napp.customuser: Accessor for m2m field 'groups' clashes with related m2m field 'Group.user_set'. Add a related_name argument to the definition for 'groups'.\napp.customuser: Accessor for m2m field 'user_permissions' clashes with related m2m field 'Permission.user_set'. Add a related_name argument to the definition for 'user_permissions'.\nauth.user: Accessor for m2m field 'groups' clashes with related m2m field 'Group.user_set'. Add a related_name argument to the definition for 'groups'.\nauth.user: Accessor for m2m field 'user_permissions' clashes with related m2m field 'Permission.user_set'. Add a related_name argument to the definition for 'user_permissions'.\n```\n", "created_at": "2014-04-19T12:02:34Z"}, {"body": "Hi\nThere is the line In auth_complete() method:\n\n``` python\nif not 'id' in self.data or not self.strategy.cookie_get(app_cookie):\n            raise ValueError('VK.com authentication is not completed')\n```\n\nBut there is no any cookie_get() methods in whole project.\nHow I can implement this? Can you fix it?\nThanks\n", "created_at": "2014-04-18T11:14:51Z"}, {"body": "Updated passing across the correctly formatted scopes for Vimeo's OAuth2 api\n", "created_at": "2014-04-17T01:41:11Z"}, {"body": "Hi,\nI am having an issue where after authenticating the request gets hung. It gives an error \"No data received\" on chrome.\n\nI pinpointed the issue to the request(method, url ...) in the BaseAuth(actually from OAuth2)\nThe library request works on the shell ... but it always fails at this point.\n\nPlease do help ! I have no clue how to fix it :|\n", "created_at": "2014-04-16T14:36:20Z"}, {"body": "After Migrating to Python social auth, and authenticating user facebook account, instead of Python social-auth to redirect me to \n\n```\nSOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/dashboard/'\n```\n\nIt's redirecting me to the on site login page. which is \n\n```\n   localhost:8000/accounts/login\n```\n\nMy settings_dev.py:\n\n```\nSOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/dashboard/'\n\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/dashboard/'\n\nSOCIAL_AUTH_NEW_ASSOCIATION_REDIRECT_URL = '/dashboard/'\n\nSOCIAL_AUTH_DISCONNECT_REDIRECT_URL = '/accounts/login/'\n\nFACEBOOK_PROFILE_EXTRA_PARAMS = {'locale': 'ru_RU'}\nSOCIAL_AUTH_EXTRA_DATA = False\n\nSOCIAL_AUTH_RAISE_EXCEPTIONS = False\n\nAUTHENTICATION_BACKENDS = (\n    #'social_auth.backends.facebook.FacebookBackend',\n'social.backends.facebook.FacebookOAuth2',\n   'django.contrib.auth.backends.ModelBackend',\n)\n\nTEMPLATE_CONTEXT_PROCESSORS = (\n...\n'social.apps.django_app.context_processors.backends',\n'social.apps.django_app.context_processors.login_redirect',\n...\n)\n```\n\nWhat am I missing?\n", "created_at": "2014-04-15T18:37:57Z"}, {"body": "...nkedin.com/blog/register-your-oauth-2-redirect-urls\n", "created_at": "2014-04-14T22:53:23Z"}, {"body": "Implemented after https://github.com/justintv/Twitch-API/blob/master/authentication.md\n", "created_at": "2014-04-14T14:52:50Z"}, {"body": "Exception: social.exceptions.AuthStateMissing\n\nThis appears to be a duplicate of issue #166 \nI have followed the guidelines in the above issue but SESSION_PROTECTION was set to basic by default. Have played around with it being basic and strong - results are consistently the following traceback. \n\nStack Trace:\nTraceback (most recent call last):\n  File \".../lib/python2.7/site-packages/flask/app.py\", line 1836, in **call**\n    return self.wsgi_app(environ, start_response)\n  File \".../lib/python2.7/site-packages/flask/app.py\", line 1820, in wsgi_app\n    response = self.make_response(self.handle_exception(e))\n  File \".../lib/python2.7/site-packages/flask/app.py\", line 1403, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \".../lib/python2.7/site-packages/flask/app.py\", line 1817, in wsgi_app\n    response = self.full_dispatch_request()\n  File \".../lib/python2.7/site-packages/flask/app.py\", line 1477, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \".../lib/python2.7/site-packages/flask/app.py\", line 1381, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File \".../lib/python2.7/site-packages/flask/app.py\", line 1475, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \".../lib/python2.7/site-packages/flask/app.py\", line 1461, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \".../lib/python2.7/site-packages/social/apps/flask_app/utils.py\", line 37, in wrapper\n    return func(backend, _args, *_kwargs)\n  File \".../lib/python2.7/site-packages/social/apps/flask_app/routes.py\", line 23, in complete\n    _args, *_kwargs)\n  File \".../lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete\n    _args, *_kwargs)\n  File \".../lib/python2.7/site-packages/social/strategies/base.py\", line 67, in complete\n    return self.backend.auth_complete(_args, *_kwargs)\n  File \".../lib/python2.7/site-packages/social/backends/facebook.py\", line 57, in auth_complete\n    state = self.validate_state()\n  File \".../lib/python2.7/site-packages/social/backends/oauth.py\", line 305, in validate_state\n    raise AuthStateMissing(self, 'state')\nAuthStateMissing: Session value state missing.\n\nAffected Browser: Chrome    version: 33.xx, 34.xx\n\nChrome Cookie settings\n![screen shot 2014-04-11 at 8 55 55 pm](https://cloud.githubusercontent.com/assets/1264560/2678841/0781b7b0-c168-11e3-8316-e293ec129319.png)\n\nFlask-Login==0.2.10\nFlask-Principal==0.4.0\nFlask-Security==1.7.1\npython-social-auth==0.1.22\n", "created_at": "2014-04-11T11:05:01Z"}, {"body": "I'm trying to get the re-authentication to work with Facebook:\nhttps://developers.facebook.com/docs/facebook-login/reauthentication\n\nI'm using Django - and I've added the following to my settings.py:\nFACEBOOK_AUTH_EXTRA_ARGUMENTS = {'auth_type': 'reauthenticate'}\n\nThis works fine with the Google Oauth 2 implementation:\nGOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {'approval_prompt': 'force'}\n\nAm I missing something simple?\n", "created_at": "2014-04-10T18:03:26Z"}, {"body": "According to https://dev.twitter.com/docs/application-permission-model#updates\n\n> there is a \"Return to App\" URL on the Deny and Cancel screens that redirects the user to the oauth_callback url with a 'denied' parameter instead of oauth_token.\n", "created_at": "2014-04-08T13:09:06Z"}, {"body": "I could not see in the source code how the parameter SOCIAL_AUTH_DEFAULT_USERNAME is uded.\n\nHow does it work? I thought it was used in the get_username pipeline.\n", "created_at": "2014-04-04T02:27:54Z"}, {"body": "There's a lot of repeated code in backends used to generate the first, last and full name from the values returned by the providers, that code needs refactoring.\n", "created_at": "2014-04-03T16:43:51Z"}, {"body": "Change \"know\" to \"known\".  This caught me off guard when I was reading though the documentation.\n", "created_at": "2014-04-02T13:24:48Z"}, {"body": "I  have successfully authenticated user using direct access token in case of `face-book` but not for `twitter` and `VK`.\n`backend -> twitter` , it gives me the error `401 Client Error: Unauthorized` .\n`backend -> vk-oauth2` , it gives me the error `user_data() takes at least 3 arguments (2 given)` .\nMy function is as follows :\n\n`if backend == 'facebook':\n        user = request.strategy.backend.do_auth(access_token)\n    elif backend == 'twitter':\n        user = request.strategy.backend.do_auth({'oauth_token': '...', 'oauth_token_secret':  '...'})\n    elif backend == 'vk-oauth2':\n        user = request.strategy.backend.do_auth(access_token)`\n", "created_at": "2014-04-02T09:59:04Z"}, {"body": "Currently only supports one additional scope parameter other than the default 'public'.\n", "created_at": "2014-04-02T05:46:47Z"}, {"body": "", "created_at": "2014-04-02T00:59:11Z"}, {"body": "", "created_at": "2014-04-02T00:46:29Z"}, {"body": "Hi Matias,\n\nFirst off, thank you so much for all your work and everyone's contributions to this package.\n\nCould we please update this class to indicate:\n\nREDIRECT_STATE = False\n\nThanks,\nChris\n", "created_at": "2014-04-01T14:53:14Z"}, {"body": "I want to authenticate and create the user by access token where the access token can be sent by the Iphone/android mobile.I have googled this issue and Found some useful info but that was mostly regarding Django social auth not python social auth. I have also find out this one question mostly similar to my question https://github.com/omab/python-social-auth/issues/180 but his problem is related to twitter and I want to know how to register user related any back-end.\nI have used this code but it gives me the error 'unicode' object has no attribute 'do_auth' , I have called this function by \n`url -> url(r'^auth/(?P<backend>[^/]+)/$',register_by_access_token, name=\"test_auth\"),`\nand backend I am using is `facebook`.\n\n```\n@strategy() \ndef register_by_access_token(request, backend, *args, **kwargs):\n    access_token = {pass static token for testing purpose}\n    if not access_token:\n        raise AuthMissingParameter(backend, 'access_token')\n    user = backend.do_auth(access_token)\n    if user and user.is_active:\n        login(request, user)\n    return user\n```\n", "created_at": "2014-03-31T10:42:33Z"}, {"body": "There is probably an easier way to implement this: Authentication is very OAuth-y, but has a few quirks.\n", "created_at": "2014-03-30T17:47:00Z"}, {"body": "I'm guessing this will be trivial to solve, because I'm convinced that the problem is very similar to others that I've seen posted here. [Here is the error page that I'm getting.](https://googledrive.com/host/0B0Yj3Dc-f8OJRnhDbnJVV2syN1k/TypeError%20at%20_social_complete_google_.html)\nI've traced the problem to the serialization of the session, when the following data is being processed:\n\n```\n{\n  'next': '/actividades/activs/',\n  'openid': {},\n  'partial_pipeline': {\n    'args': (),\n    'backend': 'google',\n    'kwargs': {\n      'details': {\n        'email': 'rikhard.martins@gmail.com',\n        'first_name': 'Ricardo',\n        'fullname': 'Ricardo Martins',\n        'last_name': 'Martins',\n        'nickname': None,\n        'username': 'RicardoMartins'\n      },\n      'is_new': True,\n      'new_association': True,\n      'response': < openid.consumer.consumer.SuccessResponse id = 'https://www.google.com/accounts/o8/id?id=AItOawnbktcpgX1_xjtzJJTb39OK-1QZQptjHzE'\n      signed = ['openid.op_endpoint', 'openid.claimed_id', 'openid.identity', 'openid.return_to', 'openid.response_nonce', 'openid.assoc_handle', 'openid.ns.ext1', 'openid.ext1.mode', 'openid.ext1.type.old_email', 'openid.ext1.value.old_email', 'openid.ext1.type.first_name', 'openid.ext1.value.first_name', 'openid.ext1.type.last_name', 'openid.ext1.value.last_name', 'openid.ext1.type.email', 'openid.ext1.value.email'] > ,\n      'social': {\n        'provider': 'google',\n        'uid': 'rikhard.martins@gmail.com'\n      },\n      'uid': 'rikhard.martins@gmail.com',\n      'user': 2,\n      'username': 'rikhard.martins@gmail.com'\n    },\n    'next': 12\n  }\n}\n```\n\nAs you can see, the problem is `'response'` (or so I believe).\n\nThe value in `'response'` comes from the function `auth_complete` in [`social.backends.open_id.OpenIdAuth`](https://github.com/omab/python-social-auth/blob/master/social/backends/open_id.py):\n\n``` python\ndef auth_complete(self, *args, **kwargs):\n    \"\"\"Complete auth process\"\"\"\n    response = self.consumer().complete(dict(self.data.items()),\n                                        self.strategy.absolute_uri(\n                                            self.redirect_uri\n                                        ))\n    self.process_error(response)\n    kwargs.update({'response': response, 'backend': self})\n    return self.strategy.authenticate(*args, **kwargs)\n```\n\nAt this point it deals directly with [`openid`](https://github.com/openid/python-openid), and I'm guessing there's no point investigating beyond that point, since it is working fine when no `@partial` function is being used in the pipeline.\n\nI'd really like to help but I've just recently began learning Python, so a lot of things still look pretty weird to me, but in the meanwhile I'll keep digging to find a solution. Anyway, feel free to ask for anything ;) and thank you for any help you can grant me.\n", "created_at": "2014-03-27T16:19:15Z"}, {"body": "I had an UnboundLocalError exception on connecting bitbucket account if there was any verified email account there.\nBittbucket api disallow get user data by not verified email accounts so I raise AuthForbidden exception then.\n", "created_at": "2014-03-27T10:33:03Z"}, {"body": "I'm using Django app and when next URL parameter contains unicode (UTF-8) string, the authentication fails with following exception:\n\n```\n  File \"/usr/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 114, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/utils.py\", line 45, in wrapper\n    return func(request, backend, *args, **kwargs)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/apps/django_app/views.py\", line 12, in auth\n    return do_auth(request.social_strategy, redirect_name=REDIRECT_FIELD_NAME)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/actions.py\", line 20, in do_auth\n    redirect_uri)\n\n  File \"/usr/local/lib/python2.7/dist-packages/social/utils.py\", line 55, in sanitize_redirect\n    not isinstance(redirect_to.decode(), six.string_types):\n\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xe6' in position 21: ordinal not in range(128)\n```\n", "created_at": "2014-03-27T08:37:03Z"}, {"body": "Implementation of: http://docs.docker.io/en/latest/reference/api/docker_io_oauth_api/\n", "created_at": "2014-03-26T17:56:31Z"}, {"body": "Thanks :)\n", "created_at": "2014-03-24T10:28:54Z"}, {"body": "Hi,\nimagine a following situation:\n- 2 auth methods are supported (let's say fedora and github)\n- user walks in for the first time, authorize with one (fedora)\n- user doesn't pair the account with the second (github)\n- user logs out\n- user walks in for the second time, authorize with second (github)\n- now 2 accounts are there for him, one for each authorisation\n\nHow does the user join the two? Cause when the user tries to pair the account with the first auth method (fedora), the site gives 500 and the following is in the logs:\n\n```\nAuthAlreadyAssociated: This fedora account is already in use.\n```\n\nSo the real questions are:\n- Is it even possible to join two accounts like this\n- If not, how can I catch this exception and at least tell the user something to comport him instead of throwing 500 at him?\n\nThanks in advance\n", "created_at": "2014-03-23T18:13:09Z"}, {"body": "Hi, I'm getting this issue when Dropbox tries to connect to the callback url after authentication:\nAuthentication failed: HTTPSConnectionPool(host='api.dropbox.com', port=443): Max retries exceeded with url: /1/oauth2/token (Caused by <class 'socket.gaierror'>: [Errno -2] Name or service not known)\n\nUsing HTTP over localhost works fine, it's when I use the HTTPS on my server that the exception arises.\n\nI've set up SSL in Django using:\nSESSION_COOKIE_SECURE = True\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTOCOL', 'https')  \nCSRF_COOKIE_SECURE = True\n\nI'm using nginx which is configured properly and my certificate is signed my a trusted site.\n\nThe error is not really precise, that's why I wonder where it could come from.\n", "created_at": "2014-03-23T17:19:19Z"}, {"body": "Steps to reproduce:\n1. run django example app\n2. try to authenticate via Github\n\nExcpected behaviour:\n\nGithub ask me if I really want to do this, and it logs me in.\n\nActual results:\n\nGithub gives 404.\n", "created_at": "2014-03-23T02:13:40Z"}, {"body": "Hello,\n\nFirst of all, good job on this very useful library !\n\nUnfortunately I experience a problem: \nWhen I try to connect to the backend for Dropbox OAuth2, I get a 404: Backend not found when going to /login/dropbox.\nI used the same settings as specified here: http://psa.matiasaguirre.net/docs/backends/dropbox.html\n\nSomehow I manage to make it work my setting name='dropbox' in the dropbox.DropboxOAuth2 class and settings the token parameters as the original ones (i.e. SOCIAL_AUTH_DROPBOX_KEY = '' and SOCIAL_AUTH_DROPBOX_SECRET = '') in the settings.\n\nSeems like a bug to me, or maybe am I doing something wrong or missing some steps.\n\nCheers !\n", "created_at": "2014-03-21T15:36:16Z"}, {"body": "Okay, I'm a little confused.\n\nI don't want to create a user unless they have validated the email. So my `social.pipeline.user.create_user` comes after `social.pipeline.mail.mail_validation`.\n\nI have a custom form for users to sign up with, so I'm setting only the `SOCIAL_AUTH_EMAIL_FORM_URL` setting. The form submits to `complete/email`, and that is how the whole pipeline starts. I take all the details (name, email and password) in this form itself.\n\nSo now, where should the `save_password` function go in the pipeline?\n\nIf it goes after `mail_validation`, the issue is that the password is not set in the session. \n\nIf it goes before `mail_validation`, since `create_user` comes after it, there is no user, so for new users, the `user` keyword is `None`, which means there is no `set_password` for it.\n\nWhat's the standard way of doing this?\n", "created_at": "2014-03-21T03:30:59Z"}, {"body": "SocialAuthExceptionMiddleware.process_exception begins with:\n\n```\n24: self.strategy = getattr(request, 'social_strategy', None)\n25: if self.strategy is None or self.raise_exception(request, exception):\n26:     return\n```\n\nBecause middleware objects are not instantiated per request, assigning to self.strategy is unsafe.\n\nAssume an exception is raised from python-social-auth in one thread, and another exception unrelated to python-social-auth is raised in another thread.  The following sequence is possible:\nThread 1 executes line 24 (assigning a value to self.strategy)\nThread 2 executes line 24 (assigning None to self.strategy)\nThread 1 executes line 25, and thus incorrectly chooses to return rather than process the exception\n", "created_at": "2014-03-20T08:29:30Z"}, {"body": "I've been using this library with Django to authenticate with Google OAuth2 successfully for a while now (~200 users registered with no reported problems). However, today a user reported they were unable to register.\n\nChecking the logs shows an `AuthStateMissing: Session value state missing` was initially raised. However, it looks like they tried again and the error was `HTTPError: 500 Server Error: Internal Server Error` coming from `backends/base.py`. Later, there were several more `AuthStateMissing` exceptions raised, but no further `HTTPError`s. I have included the full logs below.\n\nI have been unable to reproduce the error, and as far as I know, no other users are having the same problem. The user reports having cleared their cache and trying another browser with no change. Looking at the code seems to suggest that the `HTTPError` might be just a temporary service issue with Google. I saw issue #166 also involved a `AuthStateMissing: Session value state missing`, however, the issue seems different since the majority of users seem to have no difficulty with authentication.\n\nAny idea what might be going on? any suggestions would be really appreciated.\n\nFull logs:\n\n```\nMar 17 09:12:10 my-app app/web.1:  Internal Server Error: /complete/google-oauth2/ \nMar 17 09:12:10 my-app app/web.1:  Traceback (most recent call last): \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 114, in get_response \nMar 17 09:12:10 my-app app/web.1:      response = wrapped_callback(request, *callback_args, **callback_kwargs) \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view \nMar 17 09:12:10 my-app app/web.1:      return view_func(*args, **kwargs) \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper \nMar 17 09:12:10 my-app app/web.1:      return func(request, backend, *args, **kwargs) \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete \nMar 17 09:12:10 my-app app/web.1:      redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete \nMar 17 09:12:10 my-app app/web.1:      *args, **kwargs) \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/strategies/base.py\", line 67, in complete \nMar 17 09:12:10 my-app app/web.1:      return self.backend.auth_complete(*args, **kwargs) \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 343, in auth_complete \nMar 17 09:12:10 my-app app/web.1:      data=self.auth_complete_params(self.validate_state()), \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 305, in validate_state \nMar 17 09:12:10 my-app app/web.1:      raise AuthStateMissing(self, 'state') \nMar 17 09:12:10 my-app app/web.1:  AuthStateMissing: Session value state missing. \nMar 17 09:12:10 my-app app/web.1:  ERROR:django.request:Internal Server Error: /complete/google-oauth2/ \nMar 17 09:12:10 my-app app/web.1:  Traceback (most recent call last): \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 114, in get_response \nMar 17 09:12:10 my-app app/web.1:      response = wrapped_callback(request, *callback_args, **callback_kwargs) \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view \nMar 17 09:12:10 my-app app/web.1:      return view_func(*args, **kwargs) \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper \nMar 17 09:12:10 my-app app/web.1:      return func(request, backend, *args, **kwargs) \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete \nMar 17 09:12:10 my-app app/web.1:      redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete \nMar 17 09:12:10 my-app app/web.1:      *args, **kwargs) \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/strategies/base.py\", line 67, in complete \nMar 17 09:12:10 my-app app/web.1:      return self.backend.auth_complete(*args, **kwargs) \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 343, in auth_complete \nMar 17 09:12:10 my-app app/web.1:      data=self.auth_complete_params(self.validate_state()), \nMar 17 09:12:10 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 305, in validate_state \nMar 17 09:12:10 my-app app/web.1:      raise AuthStateMissing(self, 'state') \nMar 17 09:12:10 my-app app/web.1:  AuthStateMissing: Session value state missing. \n\n...\n\nMar 17 12:15:05 my-app app/web.1:  Internal Server Error: /complete/google-oauth2/ \nMar 17 12:15:05 my-app app/web.1:  Traceback (most recent call last): \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 114, in get_response \nMar 17 12:15:05 my-app app/web.1:      response = wrapped_callback(request, *callback_args, **callback_kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view \nMar 17 12:15:05 my-app app/web.1:      return view_func(*args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper \nMar 17 12:15:05 my-app app/web.1:      return func(request, backend, *args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete \nMar 17 12:15:05 my-app app/web.1:      redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete \nMar 17 12:15:05 my-app app/web.1:      *args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/strategies/base.py\", line 67, in complete \nMar 17 12:15:05 my-app app/web.1:      return self.backend.auth_complete(*args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 356, in auth_complete \nMar 17 12:15:05 my-app app/web.1:      *args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 360, in do_auth \nMar 17 12:15:05 my-app app/web.1:      data = self.user_data(access_token, *args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/google.py\", line 35, in user_data \nMar 17 12:15:05 my-app app/web.1:      params={'access_token': access_token, 'alt': 'json'} \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/base.py\", line 195, in get_json \nMar 17 12:15:05 my-app app/web.1:      return self.request(url, *args, **kwargs).json() \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/base.py\", line 191, in request \nMar 17 12:15:05 my-app app/web.1:      response.raise_for_status() \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/requests/models.py\", line 773, in raise_for_status \nMar 17 12:15:05 my-app app/web.1:      raise HTTPError(http_error_msg, response=self) \nMar 17 12:15:05 my-app app/web.1:  HTTPError: 500 Server Error: Internal Server Error \nMar 17 12:15:05 my-app app/web.1:  ERROR:django.request:Internal Server Error: /complete/google-oauth2/ \nMar 17 12:15:05 my-app app/web.1:  Traceback (most recent call last): \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 114, in get_response \nMar 17 12:15:05 my-app app/web.1:      response = wrapped_callback(request, *callback_args, **callback_kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view \nMar 17 12:15:05 my-app app/web.1:      return view_func(*args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper \nMar 17 12:15:05 my-app app/web.1:      return func(request, backend, *args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete \nMar 17 12:15:05 my-app app/web.1:      redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete \nMar 17 12:15:05 my-app app/web.1:      *args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/strategies/base.py\", line 67, in complete \nMar 17 12:15:05 my-app app/web.1:      return self.backend.auth_complete(*args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 356, in auth_complete \nMar 17 12:15:05 my-app app/web.1:      *args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 360, in do_auth \nMar 17 12:15:05 my-app app/web.1:      data = self.user_data(access_token, *args, **kwargs) \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/google.py\", line 35, in user_data \nMar 17 12:15:05 my-app app/web.1:      params={'access_token': access_token, 'alt': 'json'} \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/base.py\", line 195, in get_json \nMar 17 12:15:05 my-app app/web.1:      return self.request(url, *args, **kwargs).json() \nMar 17 12:15:05 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/base.py\", line 191, in request \nMar 17 12:15:06 my-app app/web.1:      response.raise_for_status() \nMar 17 12:15:06 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/requests/models.py\", line 773, in raise_for_status \nMar 17 12:15:06 my-app app/web.1:      raise HTTPError(http_error_msg, response=self) \nMar 17 12:15:06 my-app app/web.1:  HTTPError: 500 Server Error: Internal Server Error\n\n...\n\nMar 17 15:49:31 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 343, in auth_complete \nMar 17 15:49:31 my-app app/web.1:      data=self.auth_complete_params(self.validate_state()), \nMar 17 15:49:31 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 305, in validate_state \nMar 17 15:49:31 my-app app/web.1:      raise AuthStateMissing(self, 'state') \nMar 17 15:49:31 my-app app/web.1:  AuthStateMissing: Session value state missing. \nMar 17 15:49:31 my-app app/web.1:  ERROR:django.request:Internal Server Error: /complete/google-oauth2/ \nMar 17 15:49:31 my-app app/web.1:  Traceback (most recent call last): \nMar 17 15:49:31 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 114, in get_response \nMar 17 15:49:31 my-app app/web.1:      response = wrapped_callback(request, *callback_args, **callback_kwargs) \nMar 17 15:49:31 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view \nMar 17 15:49:31 my-app app/web.1:      return view_func(*args, **kwargs) \nMar 17 15:49:31 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper \nMar 17 15:49:31 my-app app/web.1:      return func(request, backend, *args, **kwargs) \nMar 17 15:49:31 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete \nMar 17 15:49:31 my-app app/web.1:      redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) \nMar 17 15:49:31 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete \nMar 17 15:49:31 my-app app/web.1:      *args, **kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/strategies/base.py\", line 67, in complete \nMar 17 15:49:32 my-app app/web.1:      return self.backend.auth_complete(*args, **kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 343, in auth_complete \nMar 17 15:49:32 my-app app/web.1:      data=self.auth_complete_params(self.validate_state()), \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 305, in validate_state \nMar 17 15:49:32 my-app app/web.1:      raise AuthStateMissing(self, 'state') \nMar 17 15:49:32 my-app app/web.1:  AuthStateMissing: Session value state missing. \nMar 17 15:49:32 my-app app/web.1:  Internal Server Error: /complete/google-oauth2/ \nMar 17 15:49:32 my-app app/web.1:  Traceback (most recent call last): \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 114, in get_response \nMar 17 15:49:32 my-app app/web.1:      response = wrapped_callback(request, *callback_args, **callback_kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view \nMar 17 15:49:32 my-app app/web.1:      return view_func(*args, **kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper \nMar 17 15:49:32 my-app app/web.1:      return func(request, backend, *args, **kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete \nMar 17 15:49:32 my-app app/web.1:      redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete \nMar 17 15:49:32 my-app app/web.1:      *args, **kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/strategies/base.py\", line 67, in complete \nMar 17 15:49:32 my-app app/web.1:      return self.backend.auth_complete(*args, **kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 343, in auth_complete \nMar 17 15:49:32 my-app app/web.1:      data=self.auth_complete_params(self.validate_state()), \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 305, in validate_state \nMar 17 15:49:32 my-app app/web.1:      raise AuthStateMissing(self, 'state') \nMar 17 15:49:32 my-app app/web.1:  AuthStateMissing: Session value state missing. \nMar 17 15:49:32 my-app app/web.1:  ERROR:django.request:Internal Server Error: /complete/google-oauth2/ \nMar 17 15:49:32 my-app app/web.1:  Traceback (most recent call last): \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 114, in get_response \nMar 17 15:49:32 my-app app/web.1:      response = wrapped_callback(request, *callback_args, **callback_kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view \nMar 17 15:49:32 my-app app/web.1:      return view_func(*args, **kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper \nMar 17 15:49:32 my-app app/web.1:      return func(request, backend, *args, **kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete \nMar 17 15:49:32 my-app app/web.1:      redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete \nMar 17 15:49:32 my-app app/web.1:      *args, **kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/strategies/base.py\", line 67, in complete \nMar 17 15:49:32 my-app app/web.1:      return self.backend.auth_complete(*args, **kwargs) \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 343, in auth_complete \nMar 17 15:49:32 my-app app/web.1:      data=self.auth_complete_params(self.validate_state()), \nMar 17 15:49:32 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 305, in validate_state \nMar 17 15:49:32 my-app app/web.1:      raise AuthStateMissing(self, 'state') \nMar 17 15:49:32 my-app app/web.1:  AuthStateMissing: Session value state missing. \nMar 17 15:49:33 my-app app/web.1:  Internal Server Error: /complete/google-oauth2/ \nMar 17 15:49:33 my-app app/web.1:  Traceback (most recent call last): \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 114, in get_response \nMar 17 15:49:33 my-app app/web.1:      response = wrapped_callback(request, *callback_args, **callback_kwargs) \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view \nMar 17 15:49:33 my-app app/web.1:      return view_func(*args, **kwargs) \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper \nMar 17 15:49:33 my-app app/web.1:      return func(request, backend, *args, **kwargs) \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete \nMar 17 15:49:33 my-app app/web.1:      redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete \nMar 17 15:49:33 my-app app/web.1:      *args, **kwargs) \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/strategies/base.py\", line 67, in complete \nMar 17 15:49:33 my-app app/web.1:      return self.backend.auth_complete(*args, **kwargs) \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 343, in auth_complete \nMar 17 15:49:33 my-app app/web.1:      data=self.auth_complete_params(self.validate_state()), \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 305, in validate_state \nMar 17 15:49:33 my-app app/web.1:      raise AuthStateMissing(self, 'state') \nMar 17 15:49:33 my-app app/web.1:  AuthStateMissing: Session value state missing. \nMar 17 15:49:33 my-app app/web.1:  ERROR:django.request:Internal Server Error: /complete/google-oauth2/ \nMar 17 15:49:33 my-app app/web.1:  Traceback (most recent call last): \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\", line 114, in get_response \nMar 17 15:49:33 my-app app/web.1:      response = wrapped_callback(request, *callback_args, **callback_kwargs) \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view \nMar 17 15:49:33 my-app app/web.1:      return view_func(*args, **kwargs) \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper \nMar 17 15:49:33 my-app app/web.1:      return func(request, backend, *args, **kwargs) \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete \nMar 17 15:49:33 my-app app/web.1:      redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/actions.py\", line 44, in do_complete \nMar 17 15:49:33 my-app app/web.1:      *args, **kwargs) \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/strategies/base.py\", line 67, in complete \nMar 17 15:49:33 my-app app/web.1:      return self.backend.auth_complete(*args, **kwargs) \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 343, in auth_complete \nMar 17 15:49:33 my-app app/web.1:      data=self.auth_complete_params(self.validate_state()), \nMar 17 15:49:33 my-app app/web.1:    File \"/app/.heroku/python/lib/python2.7/site-packages/social/backends/oauth.py\", line 305, in validate_state \nMar 17 15:49:33 my-app app/web.1:      raise AuthStateMissing(self, 'state') \nMar 17 15:49:33 my-app app/web.1:  AuthStateMissing: Session value state missing. \n```\n", "created_at": "2014-03-17T23:05:25Z"}, {"body": "I'm saving the `is_new` parameter to the session in one of my partial views, but I can't seem to be able to access it once the pipeline is completed. \n\n```\n@partial\ndef some_partial_view( is_new = False, *args, **kwargs):\n  kwargs['request'].session['is_new'] = is_new\n```\n\nIs there a standard way of accessing is_new in my redirect view (say, /profile) than redirecting it to /profile/new ?\n", "created_at": "2014-03-16T10:18:43Z"}, {"body": "When active the option \"Enhanced security redirection\" and configure the redirection address. always get an error saying that the addresses are not configured in match with microsoft account. The direction of redirection that I put in the account microsoft is for example. \"www.example.com/complete/live/\".\n", "created_at": "2014-03-16T07:55:25Z"}, {"body": "Let me know if I'm missing anything glaring!\n", "created_at": "2014-03-15T21:52:13Z"}, {"body": "", "created_at": "2014-03-13T11:19:40Z"}, {"body": "This adds a backend for Ubuntu One.\n\nI haven't yet added any tests, mainly because this is just sets the URL for the current OpenID backend.\n", "created_at": "2014-03-12T17:44:07Z"}, {"body": "Hi, I've implemented a social auth layer using django-social-auth for this open source project:\nhttps://github.com/hasadna/openmuni-budgets/pull/405\n\nIt includes several custom changes:\n-create user was changed, we use a custom user model that inherits from Django's abstract user class.\n-A strict unique email constraint was implemented, meaning that user can only add social accounts that have the same email as his account, or in case of registration using a social account, all additional accounts added must comply with the strict-identical email restriction.\n\nQuestion is, how complicated should it be to migrate to the new library?.\n\nThe main reason that we are considering to migrate to the new library is the fact that t has a really high test coverage, and from there ,implementing test for our custom use cases should be really easy.\n\nThe down side is that we are an open source project, without resources, and without much time at our disposal.\n\nI am opening this issue for other django-social-auth users as well, as there is not documentation \\ guide available that covers migrating from django-social-auth to python-social-auth.\n\nThanks a lot!,\nOleg.\n", "created_at": "2014-03-10T19:52:06Z"}, {"body": "I'm trying to create a custom pipeline in a Django 1.6 project with a custom user model.\nI am able to import, using a django shell, the UserSocialAuth model:\n\n```\nfrom social.apps.django_app.default.models import UserSocialAuth\n```\n\nBut, when I try to import the same class inside the custom pipeline module, I get this error:\n\nNo module named apps.django_app.default.models\n", "created_at": "2014-03-10T09:50:01Z"}, {"body": "In social/backends/facebook.py:132 is trying to get response['oauth_token'] but in my case the key does not exist so I propose changing it by response.get('oauth_token').\n", "created_at": "2014-03-09T06:04:45Z"}, {"body": "Prior to Django commit [60cf3f2f842b6e56132b8880c70acc87bd753c](https://github.com/django/django/commit/60cf3f2f842b6e56132b8880c70acc87bd753c2e),\nDjango was using `None` as a sentinel value.\n\nThe existing code in place to support Django 1.3 would not actually work.\n\nI would have added some tests with this pull request but couldn't figure out where to put them.\n\nI couldn't find which versions of Django you're supporting either, but note that in 1.6, Django added `__getitem__` and `__setitem__` methods on `LazyObject` so if/when you drop support for older versions, you can use a plain `SimpleLazyObject` instead of your custom `LazyDict`.\n", "created_at": "2014-03-08T18:49:40Z"}, {"body": "Django's messages framework works for authenticated or unauthenticated users, so I propose removing the check in SocialAuthExceptionMiddleware that only uses messages for authenticated users.\n", "created_at": "2014-03-07T19:17:26Z"}, {"body": "", "created_at": "2014-03-06T00:56:05Z"}, {"body": "Hello,\n\nI'm using both python-social-auth and email registration in my project. For the user model I use a subclass of AbstractBaseUser:\n\n``` python\nclass User(AbstractBaseUser):\n    USERNAME_FIELD = 'email'\n```\n\n``` python\nAUTH_USER_MODEL = 'userprofile.User'\n```\n\nBut when a user that is registered with his email (demo@demo.com) and password tries to login with his Facebook account that is associated with the same email address I get the following error:\n\n```\nIntegrityError at /social/complete/facebook/\nduplicate key value violates unique constraint \"userprofile_user_email_key\"\nDETAIL:  Key (email)=(demo@demo.com) already exists.\n\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/core/handlers/base.py in get_response\n                    response = wrapped_callback(request, *callback_args, **callback_kwargs) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/views/decorators/csrf.py in wrapped_view\n        return view_func(*args, **kwargs) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/apps/django_app/utils.py in wrapper\n            return func(request, backend, *args, **kwargs) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/apps/django_app/views.py in complete\n                       redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/actions.py in do_complete\n                                 *args, **kwargs) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/strategies/base.py in complete\n        return self.backend.auth_complete(*args, **kwargs) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/facebook.py in auth_complete\n        return self.do_auth(access_token, response, *args, **kwargs) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/facebook.py in do_auth\n        return self.strategy.authenticate(*args, **kwargs) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/strategies/django_strategy.py in authenticate\n        return authenticate(*args, **kwargs) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/contrib/auth/__init__.py in authenticate\n            user = backend.authenticate(**credentials) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/base.py in authenticate\n        return self.pipeline(pipeline, *args, **kwargs) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/base.py in pipeline\n        out = self.run_pipeline(pipeline, pipeline_index, *args, **kwargs) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/backends/base.py in run_pipeline\n            result = func(*args, **out) or {} ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/pipeline/user.py in user_details\n            strategy.storage.user.changed(user) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/social/storage/django_orm.py in changed\n        user.save() ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/base.py in save\n                       force_update=force_update, update_fields=update_fields) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/base.py in save_base\n            updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/base.py in _save_table\n                                      forced_update) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/base.py in _do_update\n        return filtered._update(values) > 0 ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/query.py in _update\n        return query.get_compiler(self.db).execute_sql(None) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/sql/compiler.py in execute_sql\n        cursor = super(SQLUpdateCompiler, self).execute_sql(result_type) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/models/sql/compiler.py in execute_sql\n        cursor.execute(sql, params) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/debug_toolbar/panels/sql/tracking.py in execute\n        return self._record(self.cursor.execute, sql, params) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/debug_toolbar/panels/sql/tracking.py in _record\n            return method(sql, params) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/backends/util.py in execute\n            return super(CursorDebugWrapper, self).execute(sql, params) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/backends/util.py in execute\n                return self.cursor.execute(sql, params) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/utils.py in __exit__\n                six.reraise(dj_exc_type, dj_exc_value, traceback) ...\n\u25b6 Local vars\n/Users/vera/.virtualenvs/app/lib/python2.7/site-packages/django/db/backends/util.py in execute\n                return self.cursor.execute(sql, params) ...\n\u25b6 Local vars\n```\n", "created_at": "2014-03-05T13:03:02Z"}, {"body": "I am keep getting this 400 Client Error: Bad Request whenever I try to connect to Facebook through python social auth. I have entered correct parameter in Facebook app settings ( localhost:8000 as site URL).\n\nHere's the exception stack : \n\nHTTPError at /complete/facebook/\n400 Client Error: Bad Request\nRequest Method: GET\nRequest URL:    http://localhost:8000/complete/facebook/?redirect_state=znj2c5EEL42tSm7bteQF2HtgOFyDKEDD&code=AQBeVfYEcNM6ehAVgfOLx3B1GHEu48-V8zRh8l-pLvo8Kn43_x85XvFwVDsXsG1i7UWoA56zgbPNKmCMS7veZV85aamR_unPH1lTGmI3H18tf_CiAuLP9kMyDdeumIPtQeIkOnSO6BCivIVfp1TwezoQlpR8Dwksh8aZ389GzEcXeAhf28fzWU9YYs52sIg8zbJ-CQjFk18igGrpj0Iz4Agzxe1LyaiYtOAB8wxkzbfgVYm7s9FBYSKZ-Y0O5OiNTx5-8t0fEcYs2tu2YwssP9A6nXyM58bLWZmVyFZqmbILJxI8yP-dbJ_SkWn0sVFUVxc&state=znj2c5EEL42tSm7bteQF2HtgOFyDKEDD\nDjango Version: 1.5.5\nException Type: HTTPError\nException Value:  \n400 Client Error: Bad Request\nException Location: /Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/site-packages/requests/models.py in raise_for_status, line 773\nPython Executable:  /Users/mayankbhola/nobles0ul_progr/venvs/resumizr/bin/python\nPython Version: 2.7.6\nPython Path:  \n['../..',\n '/Users/mayankbhola/Downloads/python-social-auth-master/examples/django_example',\n '/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/site-packages/mongoengine-0.8.7-py2.7.egg',\n '/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/site-packages/pymongo-2.6.3-py2.7-macosx-10.9-x86_64.egg',\n '/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python27.zip',\n '/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7',\n '/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/plat-darwin',\n '/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/plat-mac',\n '/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/plat-mac/lib-scriptpackages',\n '/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/lib-tk',\n '/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/lib-old',\n '/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/lib-dynload',\n '/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7',\n '/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin',\n '/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk',\n '/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac',\n '/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages',\n '/Users/mayankbhola/nobles0ul_progr/venvs/resumizr/lib/python2.7/site-packages']\nServer time:    Wed, 5 Mar 2014 08:00:44 -0200\n", "created_at": "2014-03-05T10:09:19Z"}, {"body": "I don't use any of the supported frameworks.\nAre there any docs/examples how to use the module as a library?\n\nI looked a bit at the code and from what i understand one has to do something like:\n- write a strategy class\n- write a storage class \n- use the auth/login/disconnect methods in social.actions\n\nBut to do that, i think i have to reverse engineer one of the supported framework in social.apps..\n. \n", "created_at": "2014-03-01T13:11:20Z"}, {"body": "Fixes #204\n", "created_at": "2014-02-28T18:56:32Z"}, {"body": "I get the following error:\n\n```\n'Code' object has no attribute 'save'\n```\n\n`code.save()` is not implemented in `storage.sqlalchemy_orm.SQLAlchemyCodeMixin`, but is called from `storage.base.CodeMixin`.\n\nPerhaps it should be defined in `SQLAlchemyMixin` as:\n\n```\ndef save(self):\n    self._save_instance(self)\n```\n\nAfter doing this fix, I get another error, because `apps.webpy_app.models.Code` is missing `_session` class method.\n", "created_at": "2014-02-27T20:48:32Z"}, {"body": "adding extra data as stated here: http://apidocs.mendeley.com/home/authentication\n", "created_at": "2014-02-27T17:38:35Z"}, {"body": "It seems that, for django at least, it isn't mentioned in the docs that you have to set the SOCIAL_AUTH_STRATEGY setting ... here's a quick fix for django.\n", "created_at": "2014-02-27T15:00:44Z"}, {"body": "Hi,\nI'm using your package in my project, configured with Email and Facebook backends and with this auth pipeline\n\n```\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details', \n    'social.pipeline.social_auth.social_uid',   \n    'social.pipeline.social_auth.auth_allowed',     \n    'social.pipeline.social_auth.social_user', \n    'social.pipeline.user.get_username', \n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.user.create_user', \n    'profiles.pipeline.set_user_password',          \n    'profiles.pipeline.mail_validation',\n    'social.pipeline.social_auth.associate_user'\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n\nI am also using a custom User class where `email` field is unique too, and email = username.\n\nI have found a problem with `associate_by_email` step.\nMaybe it's done this way by design, but the method doesn't return the `is_new` flag when an user is found (and of course it should be set to `False`).\n\nLet's suppose I have already created an user using the Email backend.\nIn my unit tests I was trying to signup again using the same email, and an exception was expected.\nBut since the user is found by `associate_by_email`, `create_user` step is properly skipped, while my `set_user_password` method inspired by the [example](http://python-social-auth.readthedocs.org/en/latest/backends/email.html#password-handling) in your documentation tries to reset user's password, because `is_new` value hasn't changed till the beginning.\n\nI have found a workaround just creating a custom method adding the flag\n\n```\ndef associate_by_email(strategy, details, user=None, *args, **kwargs):\n    if user:\n        return None\n\n    email = details.get('email')\n    if email:\n        # Try to associate accounts registered with the same email address,\n        # only if it's a single object. AuthException is raised if multiple\n        # objects are returned.\n        users = list(strategy.storage.user.get_users_by_email(email))\n        if len(users) == 0:\n            return None\n        elif len(users) > 1:\n            raise AuthException(\n                strategy.backend,\n                'The given email address is associated with multiple accounts'\n            )\n        else:\n            return {'user': users[0],\n                        'is_new': False}\n```\n\nThis way I check for the password in `set_user_password` instead of trying to reset it, receiving an error (password not valid, even if it was not the one I was checking for, but seems more reasonable than resetting the password).\n\nI could submit a pull request if you find this change acceptable.\n\nCheers.\n", "created_at": "2014-02-26T16:49:18Z"}, {"body": "Logging in with Steam and the Django app prints an exception to the Django console:\n\n```\nERROR:root:Missing required parameter in response from https://steamcommunity.com/openid/login: ('http://specs.openid.net/auth/2.0', 'assoc_type')\nTraceback (most recent call last):\n  File \"~/py3VirtualEnv/local/lib/python3.3/dist-packages/openid/message.py\", line 455, in getArg\n    return self.args[args_key]\nKeyError: ('http://specs.openid.net/auth/2.0', 'assoc_type')\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"~/py3VirtualEnv/local/lib/python3.3/dist-packages/openid/consumer/consumer.py\", line 1280, in _requestAssociation\n    assoc = self._extractAssociation(response, assoc_session)\n  File \"~/py3VirtualEnv/local/lib/python3.3/dist-packages/openid/consumer/consumer.py\", line 1397, in _extractAssociation\n    OPENID_NS, 'assoc_type', no_default)\n  File \"~/py3VirtualEnv/local/lib/python3.3/dist-packages/openid/message.py\", line 458, in getArg\n    raise KeyError((namespace, key))\nKeyError: ('http://specs.openid.net/auth/2.0', 'assoc_type')\n```\n\nUsing stateless mode makes the exception go away. This should probably be the default for the Steam backend.\n", "created_at": "2014-02-25T17:32:13Z"}, {"body": "oauth calls do_auth which tries to get user_data, but if the default scope of 'balance' is used for coinbase, the /user path is denied. Not a huge deal, but made getting started difficult. Perhaps consider using 'user' as the default scope or using the 'balance' endpoint? \n", "created_at": "2014-02-25T06:10:23Z"}, {"body": "Hello. You've made a really good library. I am not very experienced in Python, but it took me only one day to integrate social login into my small web.py app. Very productive!\n\nToday I took another step and wanted to implement regular email+password login/registration. So I created two pipeline items: `user_password` and `mail_validation` that only work with `email` backend. The first one sets password for new user and validates password if user exists. It needs user model to exist, so I have placed it right after `create_user`. And the second one is partial, its a copy of default  `mail_validation` except that it runs validation only for the new users.\n\nI have a problem that `user` is not restored after resuming `mail_validation` partial pipeline, and if `user` is `None` then authentication doesn't happen. I've checked the code and found that `user=user_id` is saved to session with all data from partial pipeline, but then it is overridden by the `user` from `do_complete` call.\n\n`do_complete` action has the following line\n\n```\npartial = partial_pipeline_data(strategy, user, *args, **kwargs)\n```\n\nAnd inside `partial_pipeline_data` is the code that replaces user from session with value passed from do_complete which may be None (please check my comments in the following bit of code): \n\n```\n    idx, backend, xargs, xkwargs = strategy.partial_from_session(partial)\n    if backend == strategy.backend.name:\n        kwargs.setdefault('pipeline_index', idx)\n        kwargs.setdefault('user', user) # if I remove this line, then everything works\n        kwargs.setdefault('request', strategy.request)\n        print 'partial_pipeline_data before', xkwargs.get('user') # here user is present\n        xkwargs.update(kwargs)\n        print 'partial_pipeline_data after', xkwargs.get('user') # here user is None\n        return xargs, xkwargs\n```\n\nHere is my complete pipeline:\n\n```\n'social.pipeline.social_auth.social_details',\n'social.pipeline.social_auth.social_uid',\n'social.pipeline.social_auth.auth_allowed',\n'social.pipeline.social_auth.social_user',\n'social.pipeline.social_auth.associate_by_email',\n'social.pipeline.user.get_username',\n'social.pipeline.user.create_user',\n'modules.social_auth.user_password',\n'modules.social_auth.mail_validation', # <- this item is partial \n'social.pipeline.social_auth.associate_user',\n'social.pipeline.social_auth.load_extra_data',\n'social.pipeline.user.user_details',\n```\n", "created_at": "2014-02-24T20:19:25Z"}, {"body": "The mongoengine backend does not handle the username field like the default django impl. \n\nIs there a reason for such behavior ?\n", "created_at": "2014-02-23T17:43:38Z"}, {"body": "When attempting to authenticate a provider/user that has already been authenticated an Internal Server Error 500 is being thrown due to not managing the exception thrown by strategy.complete.  Specifically the exception of \"This mendeley account is already in use.\"\n\nCould we possibly consider providing another URL setting to allow implementation to customize treatment?\n", "created_at": "2014-02-21T20:05:38Z"}, {"body": "I'm thinking of using python-social-auth for a new project, but I also want to use some of the more advanced facebook integrations provided by https://github.com/tschellenbach/Django-facebook\n\nIs it possible to achieve this? Well... anything is possible but, does anybody know a easy way? Does it work out-of-the-box?\n\nThanks!\n", "created_at": "2014-02-20T18:20:58Z"}, {"body": "I added 3 more pipelines, in one i get user email, and then continue to last pipeline where i map data from social vendor to my user model. Here i send registration email, and save the user as `is_active = False`, doing this causes upon finish a redirect to login error. No exception is thrown, everything is created as it should, but the user ends up in login error screen.\nThis appeared after last update, `python-social-auth==0.1.21`.\n", "created_at": "2014-02-20T12:05:20Z"}, {"body": "redirect with the given \"next\" parameter not works if there was upper characters\nfor example http://127.0.0.1:8000/social/login/vk-oauth2/?next=/truaction/blablabla/diK8k7ijM3LZMdSqxaX4/\n", "created_at": "2014-02-19T03:58:00Z"}, {"body": "", "created_at": "2014-02-18T17:04:35Z"}, {"body": "python-social-auth 0.1.21, django 1.6, python 2.7\n\nWhen trying to login with python-social-auth specifying a redirection url parameter next= that contains international characters, then a UnicodeEncodeError is raised. If the next= parameter has only ascii characters, then everything works as expected without problem.\n\nAttached traceback:\n\n``` Python_traceback\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: https://mydomain.is.here/external/social_auth/login/facebook/?next=/user/%CE%B5%CF%80%CE%B9%CE%BB%CE%BF%CE%B3%CE%AD%CF%82/\n\nDjango Version: 1.6.2.dev20140130114236\nPython Version: 2.7.3\nInstalled Applications:\n[ 'debug_toolbar',\n  'some of my custom apps'\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.messages',\n 'django.contrib.humanize',\n 'django.contrib.sites',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'django.contrib.sitemaps',\n 'django.contrib.admindocs',\n 'django.contrib.gis',\n 'registration',\n 'captcha',\n 'djcelery',\n 'multilangdatetime',\n 'compressor',\n 'social.apps.django_app.default',\n 'south',\n 'debug_toolbar_htmltidy',\n 'rosetta',\n 'kombu.transport.django',]\nInstalled Middleware:\n['django_statsd.middleware.GraphiteRequestTimingMiddleware',\n 'django_statsd.middleware.GraphiteMiddleware',\n 'debug_toolbar.middleware.DebugToolbarMiddleware',\n 'django.middleware.cache.UpdateCacheMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.locale.LocaleMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'social.apps.django_app.middleware.SocialAuthExceptionMiddleware',\n 'django.middleware.common.BrokenLinkEmailsMiddleware',\n 'django.middleware.transaction.TransactionMiddleware',\n 'django.middleware.cache.FetchFromCacheMiddleware']\n\n\nTraceback:\nFile \"/usr/local/systemwide-editable-pip-installed-packages/django/django/core/handlers/base.py\" in get_response\n  114.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/home/soulman/.virtualenvs/myvirtualenv/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/home/soulman/.virtualenvs/myvirtualenv/local/lib/python2.7/site-packages/social/apps/django_app/views.py\" in auth\n  12.     return do_auth(request.social_strategy, redirect_name=REDIRECT_FIELD_NAME)\nFile \"/home/soulman/.virtualenvs/myvirtualenv/local/lib/python2.7/site-packages/social/actions.py\" in do_auth\n  20.                                              redirect_uri)\nFile \"/home/soulman/.virtualenvs/myvirtualenv/local/lib/python2.7/site-packages/social/utils.py\" in sanitize_redirect\n  55.        not isinstance(redirect_to.decode(), six.string_types):\n\nException Type: UnicodeEncodeError at /external/social_auth/login/facebook/\nException Value: 'ascii' codec can't encode characters in position 6-13: ordinal not in range(128)\n```\n", "created_at": "2014-02-17T09:22:50Z"}, {"body": "```\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://localhost:8000/complete/facebook/?redirect_state=sGJcpBJYrR7EPzX3ATNMBeLPZP9rKse8&code=AQCFaLPqPLOyw0_tL23fb0-sg_0E4d4Dtng_XnPvpDG5jg8vHH2I31M_XGsUOFBcu6KaJjeXsY-yWIH26H-_X1_1X5fYauzhJ8dS0uo2p1uS7nS3HUykIJADbm6a7Gmcey_8Ehh94RJXFdixpZfu-irUSryamD4f9xMbkOOLvdzzwWd35qZGtTLlwWYGJktxTDaynl6qAlf_aE8-8t6f5zI7y4TdoiCk7VP2HdM6CtXJJ8Qu53U-HYlUuKL-F_v_WzvO6Fq-5bYbMCgofCGM0-dNZd8getQsGTQtQTW3rD1nNDvn0oQQnbmw1P95Ssz0yjQ&state=sGJcpBJYrR7EPzX3ATNMBeLPZP9rKse8\n\nDjango Version: 1.6\nPython Version: 2.7.4\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'app1',\n 'south',\n 'django_extensions',\n 'social.apps.django_app.default')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\n\n\nTraceback:\nFile \"/home/mohit/.virtualenvs/app1/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  114.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/home/mohit/.virtualenvs/app1/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n  57.         return view_func(*args, **kwargs)\nFile \"/home/mohit/.virtualenvs/app1/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/home/mohit/.virtualenvs/app1/local/lib/python2.7/site-packages/social/apps/django_app/views.py\" in complete\n  21.                        redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/home/mohit/.virtualenvs/app1/local/lib/python2.7/site-packages/social/actions.py\" in do_complete\n  61.             login(strategy, user)\nFile \"/home/mohit/.virtualenvs/app1/local/lib/python2.7/site-packages/social/apps/django_app/views.py\" in _do_login\n  44.         expiration = social_user.expiration_datetime()\n\nException Type: AttributeError at /complete/facebook/\nException Value: 'NoneType' object has no attribute 'expiration_datetime'\n```\n", "created_at": "2014-02-15T11:36:05Z"}, {"body": "Adds a backend for [Clef](https://getclef.com/)\n", "created_at": "2014-02-13T20:07:47Z"}, {"body": "Missed `include` function.\n", "created_at": "2014-02-13T18:28:19Z"}, {"body": "```\ndef get_scope(self):\n    \"\"\"Return list with needed access scope\"\"\"\n    return (self.DEFAULT_SCOPE or []) + \\\n           self.setting('SCOPE', [])\n```\n\nWhen the user has a 'SCOPE' set part after + is a string. That in turn\ntries to do:\n\n[] + ''\n\nThat isn't valid python and throws an error, this fixes that.\n", "created_at": "2014-02-13T09:15:51Z"}, {"body": "https://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py#L41\n\n``` python\n    def get_scope(self):\n        \"\"\"Return list with needed access scope\"\"\"\n        return (self.DEFAULT_SCOPE or []) + \\\n               self.setting('SCOPE', [])\n```\n\ncauses\n\n``` pythontraceback\nTypeError: can only concatenate list (not \"str\") to list\n```\n\nFix:\n\n``` python\n    def get_scope(self):\n        \"\"\"Return list with needed access scope\"\"\"\n        return (self.DEFAULT_SCOPE or '') + \\\n               self.setting('SCOPE', '')\n```\n", "created_at": "2014-02-13T09:06:55Z"}, {"body": "Pull request made by @omab at https://bitdeli.com\n", "created_at": "2014-02-13T03:15:38Z"}, {"body": "If different code needs to be executed in different instances of 'login' buttons, this might come in handy. And it's found nowhere in the existing docs.\n", "created_at": "2014-02-12T20:10:01Z"}, {"body": "Windows live support had some fields wrong and others missing.\n\nThe most important one was the \"reset_token\" that now is \"refresh_token\", without it is not possible to refresh that connection, which is pretty bad. Also to be able to get the email you need to access a dictionary inside a dictionary so I fixed that by overriding the extra_data function.\n\nHere is an example response from windows live:\n\n```\n{u'access_token': u'MYACCESSTOKEN',\n u'authentication_token': u'MYAUTHTOKEN',\n u'emails': {u'account': u'someemail@outlook.com',\n         u'business': None,\n         u'personal': None,\n         u'preferred': u'someemail@outlook.com'},\n u'expires_in': 3600,\n u'first_name': u'Tomas',\n u'gender': None,\n u'id': u'9999999999999999',\n u'last_name': u'Henriquez',\n u'link': u'https://profile.live.com/',\n u'locale': u'en_US',\n u'name': u'Tomas Henriquez',\n u'refresh_token': u'MYREFRESHTOKEN',\n u'scope': u'wl.basic wl.emails wl.offline_access wl.imap',\n u'token_type': u'bearer',\n u'updated_time': u'2014-02-10T20:58:15+0000'}\n```\n", "created_at": "2014-02-11T17:58:06Z"}, {"body": "I'm moving from django-social-auth directly to p-s-a and am unable to login with any of our standard providers (LinkedIn, Twitter, Github). It's hard to spot where things are going wrong, so I'm walking it through and noticed that there doesn't appear to be support for these two post-auth redirects to custom views: \n\n`SOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/accounts/socialauth/new/'`\n`SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/accounts/socialauth/welcome-back/'`\n\nI hope i've just missed something in the docs - is there still this distinction made somewhere?\n", "created_at": "2014-02-11T11:24:38Z"}, {"body": "Hi There,\n\nSeems like a lot of other users have had problems w/ LinkedIn's oauth implementation too.  I just rant in to the issue that many users have described at the following link.  The LinkedIn engineer recommends the following workaround but I'm not sure how/if I can do that w/ PSA.  Any pointers?\n\nhttps://developer.linkedin.com/comment/28935#comment-28935\n\nI wanted to give an update on this. I've narrowed down how to reproduce this every time on my end:\n\nNot all users are affected. Only certain users who happen to hit a specific data center. If one of your users happens to be hitting this data center (we have certain logic that determines which DC to hit), and this user is authorizing your application for the FIRST TIME, they revoked your application but want to use it again, or their existing access token has expired and you're taking them through the auth flow again, you may run into this error if:\n\nIn the second step of your OAuth2 flow, when you make a POST call to the /accessToken endpoint, if you're passing the OAuth parameters in your request body (i.e. auth code, client id, client secret), when you get an access token back for that user your calls will continually fail with the 401 mentioned above. This will fail for about 5-10 minutes, then that same token should start to work again.\n\nNow, in the step above, if you were to make a POST call to the /accessToken endpoint but pass the OAuth parameters as QUERY parameters (as mentioned in our docs: Authentication) instead of passing in the body of the message as described above, you should not run into the error.\n\nWe understand that most OAuth2 libraries will make a POST call to the /accessToken endpoint and pass the parameters in the body of the message. We're currently working on a fix on our end to not break this compatibility. As soon as I have an update I'll let everyone know. I just wanted to keep all of you in the loop that a fix has been identified and we're doing what we can to get it into production ASAP.\n\nThanks for working with us on this and providing details. It helped narrow it down.\n", "created_at": "2014-02-08T09:40:56Z"}, {"body": "I want to register user by access token and i have the following code.\n\n```\ndef register_by_access_token(self, access_token, backend):\n    backend = get_backend(settings.AUTHENTICATION_BACKENDS, backend)\n    strategy = load_strategy(backend=backend.name)\n    social_auth = backend(strategy=strategy)\n\n    user = social_auth.do_auth(access_token=access_token, user=None)\n    if user and user.is_active:\n        return user\n```\n\nI have the access token as social access token of user to social backend as a string like 'foo12311231123asda'. And i get the error. `unicode' object has no attribute 'get`. Should access_token be something else, how can i fix this issue, any ideas? This is happening especially for twitter social auth, working quite well for facebook\n\n`/social/backends/oauth.py`\n\nline 203 - this is where i get  the error, when authenticating with twitter\n\n```\n    resource_owner_key=token.get('oauth_token'),\n    resource_owner_secret=token.get('oauth_token_secret'),\n```\n", "created_at": "2014-02-06T18:03:33Z"}, {"body": "The method inside the class social/storage/django_orm.py:\n\n```\n    @classmethod\n    def get_users_by_email(cls, email):\n        return cls.user_model().objects.filter(email=email)\n```\n\nshould be:\n\n```\n    @classmethod\n    def get_users_by_email(cls, email):\n        return cls.user_model().objects.filter(email_iexact=email)\n```\n\nin order to avoid user duplication with same email when using a case sensitive collation (I'm using PostgreSQL).\n", "created_at": "2014-02-05T09:55:37Z"}, {"body": "I am trying to use python-social-auth on GAE(http://djangotestsa.appspot.com/) using Django. While connecting via facebook, I am getting this error.\n\n```\n400 Client Error: Bad Request\nTraceback:\nFile \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/django-1.4/django/core/handlers/base.py\" in get_response\n  111.                         response = callback(request, *callback_args, **callback_kwargs)\nFile \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/django-1.4/django/views/decorators/csrf.py\" in wrapped_view\n  77.         return view_func(*args, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499582296198408/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499582296198408/social/apps/django_app/views.py\" in complete\n  21.                        redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499582296198408/social/actions.py\" in do_complete\n  44.                                  *args, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499582296198408/social/strategies/base.py\" in complete\n  67.         return self.backend.auth_complete(*args, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499582296198408/social/backends/facebook.py\" in auth_complete\n  64.             'code': self.data['code']\nFile \"/base/data/home/apps/s~djangotestsa/1.373499582296198408/social/backends/base.py\" in get_querystring\n  194.         return parse_qs(self.request(url, *args, **kwargs).text)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499582296198408/social/backends/base.py\" in request\n  187.         response.raise_for_status()\nFile \"/base/data/home/apps/s~djangotestsa/1.373499582296198408/requests/models.py\" in raise_for_status\n  771.             raise HTTPError(http_error_msg, response=self)\n\n```\n\nTried to login using google and getting this error\n\n```\nTooManyRedirects at /complete/google-oauth2/\nTraceback:\nFile \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/django-1.4/django/core/handlers/base.py\" in get_response\n  111.                         response = callback(request, *callback_args, **callback_kwargs)\nFile \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/django-1.4/django/views/decorators/csrf.py\" in wrapped_view\n  77.         return view_func(*args, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499872455707719/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499872455707719/social/apps/django_app/views.py\" in complete\n  21.                        redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499872455707719/social/actions.py\" in do_complete\n  44.                                  *args, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499872455707719/social/strategies/base.py\" in complete\n  67.         return self.backend.auth_complete(*args, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499872455707719/social/backends/oauth.py\" in auth_complete\n  343.                 method=self.ACCESS_TOKEN_METHOD\nFile \"/base/data/home/apps/s~djangotestsa/1.373499872455707719/social/backends/oauth.py\" in request_access_token\n  324.         return self.get_json(*args, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499872455707719/social/backends/base.py\" in get_json\n  191.         return self.request(url, *args, **kwargs).json()\nFile \"/base/data/home/apps/s~djangotestsa/1.373499872455707719/social/backends/base.py\" in request\n  186.         response = request(method, url, *args, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499872455707719/requests/api.py\" in request\n  44.     return session.request(method=method, url=url, **kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499872455707719/requests/sessions.py\" in request\n  396.         resp = self.send(prep, **send_kwargs)\nFile \"/base/data/home/apps/s~djangotestsa/1.373499872455707719/requests/sessions.py\" in send\n  525.         history = [resp for resp in gen] if allow_redirects else []\nFile \"/base/data/home/apps/s~djangotestsa/1.373499872455707719/requests/sessions.py\" in resolve_redirects\n  99.                 raise TooManyRedirects('Exceeded %s redirects.' % self.max_redirects)\n\nException Type: TooManyRedirects at /complete/google-oauth2/\nException Value: Exceeded 30 redirects.\n```\n", "created_at": "2014-02-03T02:31:22Z"}, {"body": "TLDR is \"error: can't copy 'social\\apps\\django_app\\default\\tests.py': doesn't exist or not a regular file\"\n\nIt seems that the symbolic link that is committed does not play well with virtual environments. When I download the tar.gz file and extract it, the symbolic link works as expected (this is on Windows). However, trying to install to the virtual environment yields the below error.\n\nInstall packages failed: Error occurred when installing package python-social-auth. \n\nThe following command was executed:\n\npackaging_tool.py install --build-dir C:\\Users\\Michael\\AppData\\Local\\Temp\\pycharm-packaging7430035467726148887.tmp python-social-auth\n\nThe error output of the command:\n\nDownloading/unpacking python-social-auth\n  Running setup.py (path:C:\\Users\\Michael\\AppData\\Local\\Temp\\pycharm-packaging7430035467726148887.tmp\\python-social-auth\\setup.py) egg_info for package python-social-auth\n\nDownloading/unpacking requests>=1.1.0 (from python-social-auth)\nDownloading/unpacking oauthlib>=0.3.8 (from python-social-auth)\n  Running setup.py (path:C:\\Users\\Michael\\AppData\\Local\\Temp\\pycharm-packaging7430035467726148887.tmp\\oauthlib\\setup.py) egg_info for package oauthlib\n\nDownloading/unpacking six>=1.2.0 (from python-social-auth)\n  Downloading six-1.5.2-py2.py3-none-any.whl\nDownloading/unpacking python3-openid>=3.0.1 (from python-social-auth)\n  Running setup.py (path:C:\\Users\\Michael\\AppData\\Local\\Temp\\pycharm-packaging7430035467726148887.tmp\\python3-openid\\setup.py) egg_info for package python3-openid\n\n```\nwarning: no files found matching 'NOTICE'\nwarning: no files found matching 'CHANGELOG'\nwarning: no files found matching 'README.md' under directory 'examples'\nwarning: no files found matching '*.css' under directory 'doc'\nwarning: no files found matching '*.html' under directory 'doc'\n```\n\nDownloading/unpacking requests-oauthlib>=0.3.0,<0.3.2 (from python-social-auth)\n  Downloading requests-oauthlib-0.3.1.tar.gz\n  Running setup.py (path:C:\\Users\\Michael\\AppData\\Local\\Temp\\pycharm-packaging7430035467726148887.tmp\\requests-oauthlib\\setup.py) egg_info for package requests-oauthlib\n\nInstalling collected packages: python-social-auth, requests, oauthlib, six, python3-openid, requests-oauthlib\n  Running setup.py install for python-social-auth\n    error: can't copy 'social\\apps\\django_app\\default\\tests.py': doesn't exist or not a regular file\n    Complete output from command C:\\Users\\Michael\\mvmstats\\Scripts\\python.exe -c \"import setuptools, tokenize;**file**='C:\\Users\\Michael\\AppData\\Local\\Temp\\pycharm-packaging7430035467726148887.tmp\\python-social-auth\\setup.py';exec(compile(getattr(tokenize, 'open', open)(**file**).read().replace('\\r\\n', '\\n'), **file**, 'exec'))\" install --record c:\\users\\michael\\appdata\\local\\temp\\pip-53tlxu-record\\install-record.txt --single-version-externally-managed --compile --install-headers C:\\Users\\Michael\\mvmstats\\include\\site\\python3.3:\n    running install\n\nrunning build\n\nrunning build_py\n\ncreating build\n\ncreating build\\lib\n\ncreating build\\lib\\social\n\ncopying social\\actions.py -> build\\lib\\social\n\ncopying social\\exceptions.py -> build\\lib\\social\n\ncopying social\\p3.py -> build\\lib\\social\n\ncopying social\\store.py -> build\\lib\\social\n\ncopying social\\utils.py -> build\\lib\\social\n\ncopying social__init__.py -> build\\lib\\social\n\ncreating build\\lib\\social\\apps\n\ncopying social\\apps__init__.py -> build\\lib\\social\\apps\n\ncreating build\\lib\\social\\apps\\django_app\n\ncopying social\\apps\\django_app\\context_processors.py -> build\\lib\\social\\apps\\django_app\n\ncopying social\\apps\\django_app\\middleware.py -> build\\lib\\social\\apps\\django_app\n\ncopying social\\apps\\django_app\\tests.py -> build\\lib\\social\\apps\\django_app\n\ncopying social\\apps\\django_app\\urls.py -> build\\lib\\social\\apps\\django_app\n\ncopying social\\apps\\django_app\\utils.py -> build\\lib\\social\\apps\\django_app\n\ncopying social\\apps\\django_app\\views.py -> build\\lib\\social\\apps\\django_app\n\ncopying social\\apps\\django_app__init__.py -> build\\lib\\social\\apps\\django_app\n\ncreating build\\lib\\social\\apps\\django_app\\default\n\ncopying social\\apps\\django_app\\default\\admin.py -> build\\lib\\social\\apps\\django_app\\default\n\ncopying social\\apps\\django_app\\default\\fields.py -> build\\lib\\social\\apps\\django_app\\default\n\ncopying social\\apps\\django_app\\default\\models.py -> build\\lib\\social\\apps\\django_app\\default\n\nerror: can't copy 'social\\apps\\django_app\\default\\tests.py': doesn't exist or not a regular file\n---\n\nCleaning up...\nCommand C:\\Users\\Michael\\mvmstats\\Scripts\\python.exe -c \"import setuptools, tokenize;**file**='C:\\Users\\Michael\\AppData\\Local\\Temp\\pycharm-packaging7430035467726148887.tmp\\python-social-auth\\setup.py';exec(compile(getattr(tokenize, 'open', open)(**file**).read().replace('\\r\\n', '\\n'), **file**, 'exec'))\" install --record c:\\users\\michael\\appdata\\local\\temp\\pip-53tlxu-record\\install-record.txt --single-version-externally-managed --compile --install-headers C:\\Users\\Michael\\mvmstats\\include\\site\\python3.3 failed with error code 1 in C:\\Users\\Michael\\AppData\\Local\\Temp\\pycharm-packaging7430035467726148887.tmp\\python-social-auth\nStoring debug log for failure in C:\\Users\\Michael\\pip\\pip.log\n", "created_at": "2014-02-02T09:02:53Z"}, {"body": "Foursquare API requires \"v\" parameter now.\nSee https://developer.foursquare.com/overview/versioning\n", "created_at": "2014-02-01T01:25:22Z"}, {"body": "Since upgrading to version 0.1.19.\nI do get a mail saying someone is receiving a 500 error, due to (ImproperlyConfigured: Module \"social.apps.django_app.utils\" does not define a \"BackendWrapper\" authentication backend).\n\nIt is not permanent. Meaning I don't get frequently, which means only in some specific cases this happen. Plz note I never got this error when using the older version 0.1.14\n", "created_at": "2014-01-28T10:09:38Z"}, {"body": "Hi,\nI have this problem and I can't find any help.\nWe struggled with the issue of usernames that are shorter then 30 chars, as we put emails in usernames.\nWe added a migration step in django, so now everyone who registers through our site, can have a 70 character email/username.\n\nPython social-auth however, takes the \"max_length\" of username, straight from the ORM, which is 30 characters.\n\nI propose making the max_length configurable, like every other setting in that pipeline.\n\n```\nemail_as_username = strategy.setting('USERNAME_IS_FULL_EMAIL', False)\n        uuid_length = strategy.setting('UUID_LENGTH', 16)\n        max_length = storage.user.username_max_length()\n        do_slugify = strategy.setting('SLUGIFY_USERNAMES', False)\n        do_clean = strategy.setting('CLEAN_USERNAMES', True)\n```\n\nWill become\n\n```\nemail_as_username = strategy.setting('USERNAME_IS_FULL_EMAIL', False)\n        uuid_length = strategy.setting('UUID_LENGTH', 16)\n        max_length = strategy.setting('USERNAME_MAX_LENGTH',storage.user.username_max_length())\n        do_slugify = strategy.setting('SLUGIFY_USERNAMES', False)\n        do_clean = strategy.setting('CLEAN_USERNAMES', True)\n\n```\n", "created_at": "2014-01-26T11:36:41Z"}, {"body": "With the change to #139 now Dropbox connections fail. Dropbox doesn't seem to have the encoding set in the Requests library which causes the decode method to fail with: \"TypeError: decode() argument 1 must be string, not None\" on line 174 of social.backends.oauth in `unauthorized_token`. I'd suggest just using the old behavior in the case of no encoding or possibly use `response.apparent_encoding` but I'm not really sure what all that does.\n", "created_at": "2014-01-22T18:24:54Z"}, {"body": "When I try to log in as a completely new Tumblr user with no existing account, I get the error in the title. I'm using social.apps.django_app.default and django.contrib.auth for my auth, nothing custom. An Auth.User object is created successfully, but not a Default.User Social Auth object.\n\nIn [the function](https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/views.py#L38) where the error occurs, user.social_user (and therefor social_user) is None. Which is why social_user.expiration_datetime() raises an uncaught exception.\n\nAny idea what's going on?\n\n```\nTraceback (most recent call last):\n  File \"/Users/tklovett/.virtualenvs/telescope/lib/python2.7/site-packages/django/contrib/staticfiles/handlers.py\", line 67, in __call__\n    return self.application(environ, start_response)\n  File \"/Users/tklovett/.virtualenvs/telescope/lib/python2.7/site-packages/dj_static.py\", line 59, in __call__\n    return self.application(environ, start_response)\n  File \"/Users/tklovett/.virtualenvs/telescope/lib/python2.7/site-packages/django/core/handlers/wsgi.py\", line 206, in __call__\n    response = self.get_response(request)\n  File \"/Users/tklovett/.virtualenvs/telescope/lib/python2.7/site-packages/django/core/handlers/base.py\", line 196, in get_response\n    response = self.handle_uncaught_exception(request, resolver, sys.exc_info())\n  File \"/Users/tklovett/.virtualenvs/telescope/lib/python2.7/site-packages/django/core/handlers/base.py\", line 231, in handle_uncaught_exception\n    return debug.technical_500_response(request, *exc_info)\n  File \"/Users/tklovett/.virtualenvs/telescope/lib/python2.7/site-packages/django_extensions/management/technical_response.py\", line 5, in null_technical_500_response\n    six.reraise(exc_type, exc_value, tb)\n  File \"/Users/tklovett/.virtualenvs/telescope/lib/python2.7/site-packages/django/core/handlers/base.py\", line 114, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/Users/tklovett/.virtualenvs/telescope/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 57, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"/Users/tklovett/.virtualenvs/telescope/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 45, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"/Users/tklovett/.virtualenvs/telescope/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 21, in complete\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\n  File \"/Users/tklovett/.virtualenvs/telescope/lib/python2.7/site-packages/social/actions.py\", line 72, in do_complete\n    login(strategy, user)\n  File \"/Users/tklovett/.virtualenvs/telescope/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 44, in _do_login\n    expiration = social_user.expiration_datetime()\nAttributeError: 'NoneType' object has no attribute 'expiration_datetime'\n```\n", "created_at": "2014-01-21T20:09:55Z"}, {"body": "HI good day, \n\nI was trying out tornado's example, and it didnt work.\n\nI ran the python app.py and got the following error:\n\nTraceback (most recent call last):\n  File \"app.py\", line 14, in <module>\n    from social.apps.tornado_app.models import init_social\nImportError: No module named tornado_app.models\n\nany idea how do i go about fixing this ?\n", "created_at": "2014-01-21T16:12:57Z"}, {"body": "Modified front readme for PixelPin\n", "created_at": "2014-01-21T15:41:48Z"}, {"body": "PixelPin is a new authentication method that uses pictures instead of passwords. This is the provider for OAuth2. See http://pixelpin.co.uk\n", "created_at": "2014-01-21T12:08:21Z"}, {"body": "mailru.py backend in user_data():\n\nmd5(''.join(param_list) + secret).hexdigest()\n\nshould be\n\nmd5((''.join(param_list) + secret).encode('utf-8')).hexdigest()\n", "created_at": "2014-01-20T19:25:50Z"}, {"body": "Hi good day, I've just tried out Python Social Auth and it works great!\n\nI was checking out the documentation, and it seems that I couldn't find any instructions on getting the access token from the extra_data fields or from the complete/{social_network} view. I was trying out Facebook, Twitter and Weibo.\n\nam i missing anything ? How do i go about getting the access token ?\n\nThanks!\n", "created_at": "2014-01-20T12:25:45Z"}, {"body": "I'm getting weird `AuthStateMissing: Session value state missing.` error with every backend using Flask. When I sent pull request last time everything was working, probably something were updated in my environment and I'm getting this error now. I have no ideas why it is not working, already spent some time, but it can be possible something very obvious. \n\nStep to reproduce:\n1. Fresh clone\n2. Initiate virtualenv inside `python-social-auth/examples/flask_example` folder\n3. Install all required packages.\n4. Define several `SOCIAL_AUTH_*` backend keys inside `settings.py`. \n5. Run `(venv)$ python manage.py runserver`\n6. Login via any Auth backend with working SECRET/KEYS \n7. I'm getting this traceback after target backend redirect:\n\n```\n127.0.0.1 - - [20/Jan/2014 05:42:03] \"GET /complete/github/?code=b83e7c35d6dd2746029c&redirect_state=xZYhrm2WpRlVSLarEneuP0EYAGXmBWfq&state=xZYhrm2WpRlVSLarEneuP0EYAGXmBWfq HTTP/1.1\" 500 -\nTraceback (most recent call last):\n  File \"/Users/xen/Dev/test/python-social-auth/examples/flask_example/venv/lib/python2.7/site-packages/flask/app.py\", line 1836, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/Users/xen/Dev/test/python-social-auth/examples/flask_example/venv/lib/python2.7/site-packages/flask/app.py\", line 1820, in wsgi_app\n    response = self.make_response(self.handle_exception(e))\n  File \"/Users/xen/Dev/test/python-social-auth/examples/flask_example/venv/lib/python2.7/site-packages/flask/app.py\", line 1403, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/Users/xen/Dev/test/python-social-auth/examples/flask_example/venv/lib/python2.7/site-packages/flask/app.py\", line 1817, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/Users/xen/Dev/test/python-social-auth/examples/flask_example/venv/lib/python2.7/site-packages/flask/app.py\", line 1477, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/Users/xen/Dev/test/python-social-auth/examples/flask_example/venv/lib/python2.7/site-packages/flask/app.py\", line 1381, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/Users/xen/Dev/test/python-social-auth/examples/flask_example/venv/lib/python2.7/site-packages/flask/app.py\", line 1475, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/Users/xen/Dev/test/python-social-auth/examples/flask_example/venv/lib/python2.7/site-packages/flask/app.py\", line 1461, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"/Users/xen/Dev/test/python-social-auth/social/apps/flask_app/utils.py\", line 37, in wrapper\n    return func(backend, *args, **kwargs)\n  File \"/Users/xen/Dev/test/python-social-auth/social/apps/flask_app/routes.py\", line 23, in complete\n    *args, **kwargs)\n  File \"/Users/xen/Dev/test/python-social-auth/social/actions.py\", line 44, in do_complete\n    *args, **kwargs)\n  File \"/Users/xen/Dev/test/python-social-auth/social/strategies/base.py\", line 67, in complete\n    return self.backend.auth_complete(*args, **kwargs)\n  File \"/Users/xen/Dev/test/python-social-auth/social/backends/oauth.py\", line 335, in auth_complete\n    data=self.auth_complete_params(self.validate_state()),\n  File \"/Users/xen/Dev/test/python-social-auth/social/backends/oauth.py\", line 297, in validate_state\n    raise AuthStateMissing(self, 'state')\nAuthStateMissing: Session value state missing.\n```\n\nPackages versions list (`pip freeze`):\n\n```\nFlask==0.10.1\nFlask-Login==0.2.9\nFlask-SQLAlchemy==1.0\nFlask-Script==0.6.6\nJinja2==2.7.2\nMarkupSafe==0.18\nSQLAlchemy==0.9.1\nWerkzeug==0.9.4\nitsdangerous==0.23\noauthlib==0.6.0\npysqlite==2.6.3\npython-openid==2.2.5\n-e git+https://github.com/omab/python-social-auth@ea8a42a9fcfe4e6de41c009272aae19879db8a97#egg=python_social_auth-master\nrequests==2.2.0\nrequests-oauthlib==0.4.0\nsix==1.5.2\nwsgiref==0.1.2\n```\n", "created_at": "2014-01-20T03:54:12Z"}, {"body": "", "created_at": "2014-01-20T00:29:17Z"}, {"body": "```\nIndex: social/backends/weibo.py\n===================================================================\n--- social/backends/weibo.py    (revision 101)\n+++ social/backends/weibo.py    (working copy)\n@@ -27,7 +27,7 @@\n         \"\"\"Return user details from Weibo. API URL is:\n         https://api.weibo.com/2/users/show.json/?uid=<UID>&access_token=<TOKEN>\n         \"\"\"\n-        return {'username': response.get(\"name\", \"\"),\n+        return {'username': response.get(\"domain\", \"\"),\n                 'first_name': response.get('screen_name', '')}\n```\n\nplease change the username column in admin from \"name\" to \"domain\" for weibo backend. the response key \"name\" from weibo usually contain chinese characters, which is not allow to be the username 's content of table auth_user. it may cause an invalid warning when people try to change it to another chinese word. the \"domain\" key contain an weibo account name whom the user register for themself as an identity string which always just contain english alphabet word [a-zA-Z]+ and digit [0-9]+ is a more proper choice for the username .\n\nsince i don't have the permission to merge this fix to the master branch, i wish someone can help me apply this fix code to the master branch.\n", "created_at": "2014-01-17T19:33:51Z"}, {"body": "Hello I have seen this issue occurring a bit lately.\n\nI ran into this: https://github.com/omab/django-social-auth/issues/501\n\nAnd I too am behind nginx, although, I'm not sure if that's still an issue with python-social-auth. I did not see any option for \"SOCIAL_AUTH_REDIRECT_IS_HTTPS\" in the docs (and it appears I have it set to True in my settings anyhow)\n\nAlso, it seems odd that it's working some of the time but not others. Any pointers for me on where to look?\n", "created_at": "2014-01-17T18:30:43Z"}, {"body": "", "created_at": "2014-01-16T15:47:34Z"}, {"body": "Either I'm doing something wrong or there is a bug. I have tested with latest master and in 0.1.17.\n\nAfter sucessfully created a user the extra_data field contains this:\n\n```\n{\n\"first_name\": null,\n\"last_name\": null,\n\"access_token\": {\n  \"oauth_token_secret\": \"****scramled****\",\n  \"oauth_authorization_expires_in\": \"5183998\",\n  \"oauth_token\": \"****scramled****\",\n  \"oauth_expires_in\": \"5183998\"\n},\n\"picture_url\": null,\n\"email_address\": null,\n\"id\": \"****scramled****\"\n\"profile_url\": null\n}\n```\n\nI have these settings in my settings.py file:\n\n```\nSOCIAL_AUTH_LINKEDIN_SCOPE = ['r_basicprofile', 'r_emailaddress']\nSOCIAL_AUTH_LINKEDIN_FIELD_SELECTORS = ['email-address', 'picture-url',\n                                        'public-profile-url']\nSOCIAL_AUTH_LINKEDIN_EXTRA_DATA = [\n  ('id', 'id'),\n  ('first-name', 'first_name'),\n  ('last-name', 'last_name'),\n  ('email-address', 'email_address'),\n  ('picture-url', 'picture_url'),\n  ('public-profile-url', 'profile_url'),\n]\n```\n\nAnd the `SOCIAL_AUTH_PIPELINE` setting contains `'social.pipeline.social_auth.load_extra_data',`\n\nAny clues of why the extra_data fields are blank? Is there something I'm missing?\n", "created_at": "2014-01-16T08:09:56Z"}, {"body": "Reference: https://dev.twitter.com/discussions/24239\n", "created_at": "2014-01-15T08:52:17Z"}, {"body": "(working with python-social-auth v0.1.17)\n\nI'm working on a project with facebook, twitter and g+ backends and I have found an issue with g+.\n\nGooglePlusAuth backend stores 'code' on extra_data, but as it is said on [1] this code is for only one-time use and should be exchanged for an access_token. I expect PSA to do this step.\n\nI'm trying to figure out how to solve this issue but I'm a little bit confused about the oauth2 thing; I'll update this issue if I manage to solve it.\n\nThanks.\n\nNOTE.- Related to this, when the user disconnect g+ there is an unexpected behaviour because 'access_token' is not found at [2] and tokens are not removed.\n\n[1] https://developers.google.com/+/web/signin/server-side-flow#step_6_send_the_authorization_code_to_the_server\n\n[2] https://github.com/omab/python-social-auth/blob/v0.1.17/social/pipeline/disconnect.py#L23\n", "created_at": "2014-01-14T18:37:32Z"}, {"body": "When revoking tokens for twitter and facebook I came across some errors than this PR solves:\n- Twitter backend had no \"revoke_token\" method\n- Facebook backend had a typo o n \"process_revoke_token_response\"\n", "created_at": "2014-01-14T17:05:07Z"}, {"body": "(working with python-social-auth v0.1.17)\n\nI'm working on a project with facebook, twitter and g+ backends and I have found an issue with g+.\n\nGooglePlusAuth backend stores 'code' on extra_data, but as it is said on [1] this code is for only one-time use and should be exchanged for an access_token. I expect PSA to do this step.\n\nI'm trying to figure out how to solve this issue but I'm a little bit confused about the oauth2 thing; I'll update this issue if I manage to solve it.\n\nThanks.\n\nNOTE.- Related to this, when the user disconnect g+ there is an unexpected behaviour because 'access_token' is not found at [2] and tokens are not removed.\n\n[1] https://developers.google.com/+/web/signin/server-side-flow#step_6_send_the_authorization_code_to_the_server\n\n[2] https://github.com/omab/python-social-auth/blob/v0.1.17/social/pipeline/disconnect.py#L23\n", "created_at": "2014-01-14T16:23:44Z"}, {"body": "Odnoklassniki backend iframe app was broken in PSA compared to DSA. This patch fixes it.\n", "created_at": "2014-01-13T15:11:34Z"}, {"body": "If facebook happen to be unavailable from python social I would expect one of the social exceptions to be raised. Instead ConnectionError pops unhandled.\n\nThis probably applies for all OAuth backends. Used master-ish version of python social.\n\n```\nFile \"/usr/lib/python2.7/dist-packages/social/actions.py\", line 44, in do_complete\n  *args, **kwargs)\n\nFile \"/usr/lib/python2.7/dist-packages/social/strategies/base.py\", line 67, in complete\n  return self.backend.auth_complete(*args, **kwargs)\n\nFile \"/usr/lib/python2.7/dist-packages/social/backends/facebook.py\", line 61, in auth_complete\n  'code': self.data['code']\n\nFile \"/usr/lib/python2.7/dist-packages/social/backends/base.py\", line 194, in get_querystring\n  return parse_qs(self.request(url, *args, **kwargs).text)\n\nFile \"/usr/lib/python2.7/dist-packages/social/backends/base.py\", line 186, in request\n  response = request(method, url, *args, **kwargs)\n\nFile \"/usr/lib/python2.7/dist-packages/requests/api.py\", line 44, in request\n  return session.request(method=method, url=url, **kwargs)\n\nFile \"/usr/lib/python2.7/dist-packages/requests/sessions.py\", line 279, in request\n  resp = self.send(prep, stream=stream, timeout=timeout, verify=verify, cert=cert, proxies=proxies)\n\nFile \"/usr/lib/python2.7/dist-packages/requests/sessions.py\", line 374, in send\n  r = adapter.send(request, **kwargs)\n\nFile \"/usr/lib/python2.7/dist-packages/requests/adapters.py\", line 206, in send\n  raise ConnectionError(sockerr)\n\nConnectionError: [Errno 110] Connection timed out\n```\n", "created_at": "2014-01-13T09:48:09Z"}, {"body": "I was debugging an additional pipeline function with the steam backend of python-social-auth 0.1.17, and was seeing an abort of the login pipeline whenever my function ran (which failed to log in the user).  I saw no errors in my logs, but eventually discovered that my function was raising an exception.  It appeared that the exception was being taken as an HTTP response.  This makes sense under the literal interpretation of \"non-dictionary responses will be taken as HTTP responses,\" but is counterintuitive and promotes wrapping all your functions in try-except block to get logging.  Is there a more maintainable way of seeing when exceptions are occurring, and perhaps differentiating exceptions from normal function returns?\n", "created_at": "2014-01-13T00:40:09Z"}, {"body": "I am getting this 500 error mail frequently, stating that on /complete/facebook/ a KeyError is raised. I don't get what is the reason causing it, and how to avoid it.\n\nI am using it on a deployed version so I can't track the scenario that caused so.\n", "created_at": "2014-01-12T10:20:01Z"}, {"body": "I installed the django example in my computer and found out the partial pipeline could not render to next pipeline.\n\nOn the page of http://127.0.0.1:8000/email/, after I input the email and click the Save, the page direct back to http://127.0.0.1:8000/email/.\n\nHope someone can work on it.\n", "created_at": "2014-01-10T18:11:06Z"}, {"body": "When I tried to run tests for django app or use them to test my version of the app I run into other dependencies which were not noted. This time I checked the requirements file.\n\nMissing dependencies:\n- sure\n- httpretty\n", "created_at": "2014-01-10T09:34:20Z"}, {"body": "Recently I found this library and read documentation. But found that real code isn't follow what said in docs. Also I found that Flask-SQLAlchemy API is outdated in examples and updated to most recent versions. Now code should looks more clean and readable. \n", "created_at": "2014-01-09T23:58:44Z"}, {"body": "Regarding issue #148\n", "created_at": "2014-01-08T22:19:13Z"}, {"body": "Hi,\n\nFirst I wanna thank you for such great job with this project, it has been a real help for me. I have been using python-social-auth for a couple of months in my django project, and I realized that if I am setting up a redirect_uri with https in my Google app for google-oauth2 auth it was automatically changed to a uri with http, so I dive into this. And realized of the following:\n\nOn your documentation you said that we must set in settings.py:\n\nSOCIAL_AUTH_REDIRECT_IS_HTTPS = True\n\nSo all redirects uses https, for some reason this setting is not being used, instead if you go into social.strategies.base you can see on line 188 the following code for the function absolute_uri:\n\n uri = self.build_absolute_uri(path)\n        if self.setting('ON_HTTPS'):\n            uri = uri.replace('http://', 'https://')\n        return uri\n\nI couldn't find any information on your documentation regarding that ON_HTTPS setting, so I added it, and it solved the first problem with the redirect_uri with https.\n\nBut after that If for some reason I need to execute again on my Django app a load_strategy function, it raises an Exception telling me that None object has replace function. So I come to the following fix that at least on my case and using many API social providers works perfectly for me:\n\nreplace on social.strategies.base.py\n   def absolute_uri(self, path=None):\n        uri = self.build_absolute_uri(path)\n        if self.setting('ON_HTTPS'):\n            uri = uri.replace('http://', 'https://')\n        return uri\n\nwith this:\n\n```\ndef absolute_uri(self, path=None):\n    uri = self.build_absolute_uri(path)\n    if uri and self.setting('SOCIAL_AUTH_REDIRECT_IS_HTTPS'):\n        uri = uri.replace('http://', 'https://')\n    return uri\n```\n\nPlease tell me If I am missing something on this problem and should avoid this patch for my problem.\n\nPD: Sorry for my bad english.\n\nThanks!\n", "created_at": "2014-01-08T21:34:38Z"}, {"body": "", "created_at": "2014-01-08T04:49:31Z"}, {"body": "**settings**:\n\nSOCIAL_AUTH_USER_MODEL = 'apps.custom_auth.models.User'\n\n**traceback**:\n\n  File \"/home/alexander/.envs/base/local/lib/python2.7/site-packages/social/apps/django_app/default/admin.py\", line 7, in <module>\n    _User = UserSocialAuth.user_model()\n  File \"/home/alexander/.envs/base/local/lib/python2.7/site-packages/social/apps/django_app/default/models.py\", line 59, in user_model\n    app_label, model_name = user_model.split('.')\nValueError: too many values to unpack\n", "created_at": "2014-01-07T14:56:57Z"}, {"body": "Add support for taobao.com oauth2\n", "created_at": "2014-01-07T09:43:16Z"}, {"body": "if a user cancels the oauth, he gets 500, instead of being redirected to error urls defined in settings according to this http://psa.matiasaguirre.net/docs/configuration/settings.html#urls-options.\n\nshould i override `social:complete` to handle errors? or is there some other setting i'm missing?\nwhat is the best way to catch/handle those errors?\n\nAfter browsing a bit, i found this issue https://github.com/omab/django-social-auth/issues/445, tho its in python-social-oauth predecessor, but looks like the issue persists here as well.\n", "created_at": "2014-01-07T07:15:22Z"}, {"body": "", "created_at": "2014-01-07T03:43:29Z"}, {"body": "", "created_at": "2014-01-06T21:37:38Z"}, {"body": "The drupal openid provider seems to  use a 65 character salt, which is too large to fit into the salt field on the None object.\n", "created_at": "2014-01-06T21:35:39Z"}, {"body": "I found this library requires following libraries, which are not noted in documentation:\n- python-six\n- python-requests\n", "created_at": "2014-01-06T15:36:54Z"}, {"body": "(Perhaps this also affects all OAuth1 based backends)\n\nI got the following error\n\n```\nb'oauth_token=TOKEN&oauth_token_secret=SECRET&oauth_callback_confirmed=true' is not JSON serializable\n```\n\nThe error arises when Django saves the session data (encoded in JSON) that contains that unauthorized token from Twitter. The type of the token is byte so the `json` module refuses to encode it. I see that the token value is retrieved from the `requests` module.\n\nOther libs that are also installed in my setup:\n\n```\n$ pip list\nDjango (1.6)\ngeojson (1.0.5)\nipython (1.1.0)\nlxml (3.2.4)\noauthlib (0.6.0)\npip (1.4.1)\npsycopg2 (2.5.1)\npykml (0.1.0)\npython-social-auth (0.1.17)\npython3-openid (3.0.3)\nraven (3.5.2)\nrequests (2.1.0)\nrequests-oauthlib (0.3.1)\nsetuptools (0.9.8)\nShapely (1.2.18)\nsix (1.4.1)\nSouth (0.8.4)\nvirtualenv (1.10.1)\n```\n", "created_at": "2014-01-03T03:38:02Z"}, {"body": "Hey folks,\n\nI've been struggling with this problem since just before new year, so in desperation am looking to see if I can get a bit more light shed on it when I cannot seem to find any.\n\nI am running Django 1.6.1 on Python 2.7.5 using PyCharm, if that helps at all.\n\nI'm getting the GitHub approval page open, then when I hit 'allow access', I hit an exception as follows from my console output:\n\n```\nAuthFailed: Authentication failed: incorrect_client_credentials\n[02/Jan/2014 21:50:21] \"GET /complete/github/?code=aa3d418efda7655289e6&redirect_state=gHBfjKazw1Ker6XUUm9wmilZKV6SoiKW&state=gHBfjKazw1Ker6XUUm9wmilZKV6SoiKW HTTP/1.1\" 500 116616\n```\n\nI get this issue on both the example provided, and with my own set up, so I am at a bit of a loss. I can't even seem to find out what 'incorrect_client_credentials' means as an exception! No-one else seems to have hit this.\n\nMy GitHub application seems to successfully register the user as having been issued a token, however nothing gets to my database at all.\n\nAny help is greatly appreciated, thanks in advance.\n\nEDIT: Turns out I was stupendously stupid and had written SECRET_KEY rather than just SECRET. Tedious,\n", "created_at": "2014-01-02T21:58:42Z"}, {"body": "I've searched it for a long time, but I don't find a configuration for it.\n", "created_at": "2014-01-01T04:20:57Z"}, {"body": "The method get_user_id refers to details here:\n\nhttps://github.com/omab/python-social-auth/blob/master/social/backends/base.py#L121\n\nYet it's looking up the value in response. This is causing an issue for us on Tumblr.\n\nIs the docs incorrect or is the code incorrect?\n\nMichael\n", "created_at": "2013-12-30T22:37:59Z"}, {"body": "Add support for OpenStreetMap OAuth 1.0a, examples to django_example and document backend\n", "created_at": "2013-12-27T23:16:09Z"}, {"body": "Tries to address the issue described in http://stackoverflow.com/questions/18947938/python-social-auth-fails-with-mongoengine-django\n", "created_at": "2013-12-26T10:21:06Z"}, {"body": "", "created_at": "2013-12-26T06:53:26Z"}, {"body": "Say, site has no icons for backends (yet). What is an expected workflow to display full backend/provider name to the user? The backend class only stores `name`, which is good for the slug or db value, not for a title.\n\nThe temporary dirty workaround for Django looks like: `{{ backend|split:'-'|first|capfirst }}` (split is a custom filter). Not all backend names are properly displayed in such a way.\n\n Don't you plan to add a nice (translatable) title to the class or store it in DB?\n", "created_at": "2013-12-25T12:52:16Z"}, {"body": "For some reason, in \n\nhttps://github.com/omab/python-social-auth/blob/master/social/apps/django_app/utils.py#L22\n\n```\ndef load_strategy(*args, **kwargs):\n    return get_strategy(BACKENDS, STRATEGY, STORAGE, *args, **kwargs)\n```\n\nBACKENDS only has the default value for AUTHENTICATION BACKENDS. ('django.contrib.auth.backends.ModelBackend',), thus ending in \"Backend not found\" for all settings in AUTHENTICATION_BACKENDS.\n\nThe value of BACKENDS should either be global or settings.AUTHENTICATION_BACKENDS should be passed to get_strategy there.\n\n(python 2.7.3, django 1.6.1, python-social-auth 0.1.17) \n", "created_at": "2013-12-22T13:25:03Z"}, {"body": "", "created_at": "2013-12-17T16:49:19Z"}, {"body": "vk backend uses expires_in param and not expires with access token expiration information\n", "created_at": "2013-12-16T12:16:15Z"}, {"body": "The objective is to migrate server and have the app working. However I get an error, not sure my fault or a bug. / python-social-auth (0.1.17)\n\nFirstly what I did (and possibly the replication):\n- Setup PSA with e.g. Facebook on a server \n- login\n- migrate the application to another server (in my occasion just change an openshift gear/ different IP)\n- try to open the page again\n\nIf I have an open/logged-in section (?) with the previous server I get a Server Error 500 on DEBUG=False, and a `ImproperlyConfigured at /` error on DEBUG=True which I will attach its trace at the end of this post.\n\nThis can be solved / is not happening if:\n1) I open an incognito window or \n2) clear my cookies or\n3) have been logged-out on the previous server\n\nIt looks like that the CSRF or the authentication pipeline expects the backend to correspond with the token created on the previous server (sorry I do know much about http requests).\n\nThe traceback:\n\n```\nFile \"/var/lib/openshift/52a5dd185973cab949000006/python/virtenv/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  115.                         response = callback(request, *callback_args, **callback_kwargs)\nFile \"/var/lib/openshift/52a5dd185973cab949000006/app-root/runtime/repo/wsgi/project/apps/views.py\" in start\n  76.     print request.user\nFile \"/var/lib/openshift/52a5dd185973cab949000006/python/virtenv/lib/python2.7/site-packages/django/utils/functional.py\" in inner\n  204.             self._setup()\nFile \"/var/lib/openshift/52a5dd185973cab949000006/python/virtenv/lib/python2.7/site-packages/django/utils/functional.py\" in _setup\n  270.         self._wrapped = self._setupfunc()\nFile \"/var/lib/openshift/52a5dd185973cab949000006/python/virtenv/lib/python2.7/site-packages/django/contrib/auth/middleware.py\" in <lambda>\n  18.         request.user = SimpleLazyObject(lambda: get_user(request))\nFile \"/var/lib/openshift/52a5dd185973cab949000006/python/virtenv/lib/python2.7/site-packages/django/contrib/auth/middleware.py\" in get_user\n  10.         request._cached_user = auth.get_user(request)\nFile \"/var/lib/openshift/52a5dd185973cab949000006/python/virtenv/lib/python2.7/site-packages/django/contrib/auth/__init__.py\" in get_user\n  138.         backend = load_backend(backend_path)\nFile \"/var/lib/openshift/52a5dd185973cab949000006/python/virtenv/lib/python2.7/site-packages/django/contrib/auth/__init__.py\" in load_backend\n  25.         raise ImproperlyConfigured('Module \"%s\" does not define a \"%s\" authentication backend' % (module, attr))\n\nException Type: ImproperlyConfigured at /\nException Value: Module \"social.apps.django_app.utils\" does not define a \"BackendWrapper\" authentication backend\n```\n\nThe line 76 on project/apps/views.py is just a print. The error appears on request.user.is_authenticated() as well (which is later on my code).\n\nBoth `print request.user` and `print request.user.is_authenticated()` return correct values: AnonymousUser and False.\n", "created_at": "2013-12-13T16:01:06Z"}, {"body": "...in resolve_url before giving the url to tje HttpResponseRedirect. See also https://code.djangoproject.com/ticket/15552\n\nThis is a follow-up of https://github.com/omab/django-social-auth/pull/733\n", "created_at": "2013-12-12T00:54:58Z"}, {"body": "See http://stackoverflow.com/questions/20504515/associate-only-authentication-with-python-social-authentication-and-django\n", "created_at": "2013-12-11T17:41:57Z"}, {"body": "I am getting the following error:\n\nEnvironment:\n\nRequest Method: GET\nRequest URL: http://localhost/api/social/complete/yahoo-oauth/?oauth_token=qgf9qgm&oauth_verifier=xqmcyd\n\nDjango Version: 1.6\nPython Version: 2.7.3\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'corsheaders',\n 'yahoo_app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n 'debug_toolbar.middleware.DebugToolbarMiddleware',\n 'corsheaders.middleware.CorsMiddleware',\n 'middleware.crossdomainxhr.XsSharing')\n\nTraceback:\nFile \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n   File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n2.         return view_func(_args, *_kwargs)\n   File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n3.             return func(request, backend, _args, *_kwargs)\n   File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/social/apps/django_app/views.py\" in complete\n4.                        redirect_name=REDIRECT_FIELD_NAME, _args, *_kwargs)\n   File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/social/actions.py\" in do_complete\n5.                                  _args, *_kwargs)\n   File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/social/strategies/base.py\" in complete\n6.         return self.backend.auth_complete(_args, *_kwargs)\n   File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/social/backends/oauth.py\" in auth_complete\n7.         return self.do_auth(access_token, _args, *_kwargs)\n   File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/social/backends/oauth.py\" in do_auth\n8.         return self.strategy.authenticate(_args, *_kwargs)\n   File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/social/strategies/django_strategy.py\" in authenticate\n9.         return authenticate(_args, *_kwargs)\n   File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/django/contrib/auth/**init**.py\" in authenticate\n10.             user = backend.authenticate(**credentials)\n    File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/social/backends/base.py\" in authenticate\n11.         return self.pipeline(pipeline, _args, *_kwargs)\n    File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/social/backends/base.py\" in pipeline\n12.         out = self.run_pipeline(pipeline, pipeline_index, _args, *_kwargs)\n    File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/social/backends/base.py\" in run_pipeline\n13.             result = func(_args, *_out) or {}\n    File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/social/pipeline/social_auth.py\" in social_details\n14.     return {'details': strategy.backend.get_user_details(response)}\n    File \"/home/lladmin/hanu_api/shared/env/local/lib/python2.7/site-packages/social/backends/yahoo.py\" in get_user_details\n15.             email = response.get('emails')[0]['handle']\n\nException Type: KeyError at /social/complete/yahoo-oauth/\nException Value: 'handle'\n\nAbove error comes because the response from yahoo contains a list with emails like the following:\n\nresponse  \n{'access_token': {u'oauth_authorization_expires_in': u'******_667',\n                  u'oauth_expires_in': u'3600',\n                  u'oauth_session_handle': u'**_***_',\n                  u'oauth_token': u'**_***_',\n                  u'oauth_token_secret': u'**_***_39b',\n                  u'xoauth_yahoo_guid': u'**_***_6GM'},\n u'created': u'2010-01-22T08:24:16Z',\n u'emails': [{u'id': 1, u'type': u'HOME'},\n             {u'handle': u'**_***_ter@yahoo.com',\n              u'id': 2,\n              u'primary': True,\n              u'type': u'HOME'},\n             {u'id': 7, u'type': u'HOME'}],\n u'familyName': u'**_****',\n...}\n\nI suggest iterate over the list of emails and check which element contains the handle key.\n", "created_at": "2013-12-09T23:08:29Z"}, {"body": "python-requests 2.0 has many backwards-incompatible changes and is not currently compatible with python-social-auth.\n", "created_at": "2013-12-09T01:42:44Z"}, {"body": "Trying to install python-social-auth on a system where the default encoding is NOT ascii or latin1, installation fails with UnicodeDecodeError.  \n\nIt seems that the PKG-INFO format requires that header values are in ASCII following RFC-822. (I'm not sure, but it seems that PKG-INFO is auto-generated from this setup.py).\n\nMy appologies to Matias.\n\nC:\\Python33\\Scripts>python3 pip-3.3-script.py install python-social-auth\nDownloading/unpacking python-social-auth\n  Downloading python-social-auth-0.1.17.tar.gz (71kB): 71kB downloaded\n  Running setup.py egg_info for package python-social-auth\n\nCleaning up...\nException:\nTraceback (most recent call last):\n  File \"C:\\Python33\\lib\\site-packages\\pip-1.4.1-py3.3.egg\\pip\\basecommand.py\", line 134, in main\n    status = self.run(options, args)\n  File \"C:\\Python33\\lib\\site-packages\\pip-1.4.1-py3.3.egg\\pip\\commands\\install.py\", line 236, in run\n    requirement_set.prepare_files(finder, force_root_egg_info=self.bundle, bundle=self.bundle)\n  File \"C:\\Python33\\lib\\site-packages\\pip-1.4.1-py3.3.egg\\pip\\req.py\", line 1139, in prepare_files\n    req_to_install.assert_source_matches_version()\n  File \"C:\\Python33\\lib\\site-packages\\pip-1.4.1-py3.3.egg\\pip\\req.py\", line 394, in assert_source_matches_version\n    version = self.installed_version\n  File \"C:\\Python33\\lib\\site-packages\\pip-1.4.1-py3.3.egg\\pip\\req.py\", line 390, in installed_version\n    return self.pkg_info()['version']\n  File \"C:\\Python33\\lib\\site-packages\\pip-1.4.1-py3.3.egg\\pip\\req.py\", line 357, in pkg_info\n    data = self.egg_info_data('PKG-INFO')\n  File \"C:\\Python33\\lib\\site-packages\\pip-1.4.1-py3.3.egg\\pip\\req.py\", line 297, in egg_info_data\n    data = fp.read()\nUnicodeDecodeError: 'cp932' codec can't decode byte 0xef in position 184: illegal multibyte sequence\n", "created_at": "2013-12-07T01:39:38Z"}, {"body": "social.backend.facebook compares HMAC signatures with '=='. That's insecure and may leak information. You should use a function like http://docs.python.org/3/library/hmac.html#hmac.compare_digest. Django has a Python implementation of the function, too.\n", "created_at": "2013-12-06T20:32:48Z"}, {"body": "", "created_at": "2013-12-06T18:42:14Z"}, {"body": "Hi,\n\nIf the django config attribute APPEND_SLASH is set to false, then the example does not work.\n\nAdding the trailing slash solve it.\n", "created_at": "2013-12-06T10:12:01Z"}, {"body": "I can't run all the django tests for my app because the python-social-auth unittests are not installed by default.\n\nIs there any reason why setup.py is missing the social.tests.backend package?\n\nThanks :)\n", "created_at": "2013-12-06T07:36:23Z"}, {"body": "Hi,\n\nFirst, let me tell you that I really like your work with this app.\nI am trying to use only the email for now to make it simple (No Facebook, Google etc, I just want a User to sign up with an email and log in with an email)\nI decided to give it a try via the django example app included in the repository but I have some issues...\n\nFirst, there were several errors about missing settings. I think you must have a couple of settings defined in your local file \"local_settings.py\" and since it is not in the repository, some of the settings are missing.  Could you give us an example of the \"local_settings.py\" file to see what settings need to be setup?\n\nAfter I resolved the missing settings errors, I went to this page to register an account with an email address: http://localhost:8051/signup-email/\nIt worked and I was logged in.\n\nThen I had a hard time logging out and I finally added a view on the views.py file.`\n`from django.contrib.auth import views as auth_views\nurl(r'^logout/$', auth_views.logout, name='auth_logout'),``\n\nNow, when I want to log in with the email I used to register, it creates a new account instead of logging me in, why ?  http://localhost:8051/login/email/\n\nThanks\n", "created_at": "2013-12-05T16:26:15Z"}, {"body": "I have sucessfull facebook connection but, \nI have extra_data like below.\n\n{\"access_token\": \"CAAH6hVCrlMgBAIeRxNjdC9oqolZA482LlKtbdFZB3u1R28WcRFPbU4VDkNKptZCTZCX7sVtpyiZCZASafy619ke3ZCtZBd2zmZAWWWoZCA92i0ogGAvM0JA8eFRzkVD96GL82tqnZCB9hPpT4SpsekxNp5bR50gcY04pEylYUw1NUp7j\", \"expires\": \"5183999\", \"id\": \"513697145\"}\n\nIs there an easy way to access to users facebook username\n", "created_at": "2013-12-04T15:29:40Z"}, {"body": "", "created_at": "2013-12-03T10:20:37Z"}, {"body": "when we access te  /accounts/login  and make a login redirect\n\n```\n&redirect_uri=http://xxx.aaa.com/complete/weibo/\n```\n\nwhat i need is to escape the value of redirect_uri to \n\n```\nhttp%3A%2F%2Fxxx.aaa.com%2Fcomplete%2Fweibo%2F\n```\n", "created_at": "2013-12-02T03:39:24Z"}, {"body": "I am currently using python-social-auth and added a backend MyOAuth which BaseOAuth1, inside the BaseOAuth1 class there is a handy oauth_request instance method which I would like to make use of outside of the class.\n\nhttps://github.com/omab/python-social-auth/blob/master/social/backends/oauth.py\n\nI tried instantiate the class directly but looks like I am missing some context.\n\nIs there a way reference that MyOAuth backend instance? I am expecting something like\n\nrequest.user.social_auth.get(provider='MyOAuth').backend.oauth_request(...)\n", "created_at": "2013-12-01T18:46:13Z"}, {"body": "This allows for better-named South migrations; rather than the models coming under the \"default\" app_label, they come under the \"social_auth\" app_label.\n", "created_at": "2013-11-29T20:49:41Z"}, {"body": "I am able to connect different multiple facebook and twitter accounts to my account.\nIs there a way to avoid user. When user is already connected his facebook, he shouldnt be able to connect a new facebook account. Is there a quick way to do this other than manipulating the pipeline.\n", "created_at": "2013-11-29T13:12:56Z"}, {"body": "I am authenticating users on the client with a few social auth providers. GPlus, Facebook and Linkedin. Once authenticated I am sending the key back to the server to complete the authentication process on the server too. I have created a custom view that essentially gets a strategy and then calls:\n\n```\nuser = strategy.backend.do_auth(access_token=access_token)\n_do_login(strategy, user)\n```\n\nThis is working perfect for GPlus and Facebook but I am having trouble with Linkedin. Here is the docs for the linkedin process. http://developer.linkedin.com/documents/exchange-jsapi-tokens-rest-api-oauth-tokens  I have started writing a custom backend that inherets from LinkedinOAuth backend to exchange the Client-side Bearer Token for a OAuth 1.0a  token in do_auth before continuing the process. Is this the right direction or is there something I have missed?\n\nSimon\n", "created_at": "2013-11-28T14:35:17Z"}, {"body": "I am still getting this error when using Django + python social auth and using a `@strategy` decorator for a function:\n\n`TypeError: \"get_strategy() got multiple values for keyword argument 'request'\"`\n\nThe code I am using is as follows:\n\n```\n@strategy() \ndef register_by_access_token(request, backend, *args, **kwargs):\n    access_token = kwargs.get('access_token')\n    if not access_token:\n        raise AuthMissingParameter(backend, 'access_token')\n    user = backend.do_auth(access_token)\n    if user and user.is_active:\n        login(request, user)\n    return user\n```\n\nIt looks like `load_strategy` https://github.com/omab/python-social-auth/blob/master/social/apps/django_app/utils.py#L22 has request in its `kwargs` which gets passed to `get_strategy` along with the `request=None` parameter https://github.com/omab/python-social-auth/blob/master/social/strategies/utils.py#L14\n", "created_at": "2013-11-27T06:32:09Z"}, {"body": "", "created_at": "2013-11-27T01:43:51Z"}, {"body": "This change is required to support properly the USERNAME_FIELD setting\nof the AbstractBaseUser class. See\n\nhttps://docs.djangoproject.com/en/1.6/topics/auth/customizing/#django.contrib.auth.models.CustomUser.USERNAME_FIELD\n\nPrevious code was losing the 'username' field, and overwriting the\nUSERNAME_FIELD with the 'username' initial value.\n", "created_at": "2013-11-26T13:24:03Z"}, {"body": "Hello,\n\nI'm currently trying to setup Twitter OAuth with Django + Python-Social-Auth, but cannot get it to work due to a ValueError that is being raised on login action (the Twitter auth screen is now yet shown).\n\nI could replicate this with a proper Twitter backend configuration (following your docs), and a proper Twitter app configuration, both on MacOS w/ Python 2.7.6 and a Debian server. All running Django v1.6c1\n\n_I suspect an OAuth lib issue due to some kind of Twitter API change, but still unsure._\n\nHere's the full trace:\n\n```\nRequest Method: GET\nRequest URL: http://waaave.com.dev/account/login/twitter/\n\nDjango Version: 1.6c1\nPython Version: 2.7.6\n\nTraceback:\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/Django-1.6c1-py2.7.egg/django/core/handlers/base.py\" in get_response\n  114.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/Users/valerian/Documents/Web/waaave.com/app/account/views.py\" in login_social\n  128.     return social_auth(request, backend)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/python_social_auth-0.1.17-py2.7.egg/social/apps/django_app/utils.py\" in wrapper\n  45.             return func(request, backend, *args, **kwargs)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/python_social_auth-0.1.17-py2.7.egg/social/apps/django_app/views.py\" in auth\n  12.     return do_auth(request.social_strategy, redirect_name=REDIRECT_FIELD_NAME)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/python_social_auth-0.1.17-py2.7.egg/social/actions.py\" in do_auth\n  25.     return strategy.start()\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/python_social_auth-0.1.17-py2.7.egg/social/strategies/base.py\" in start\n  57.             return self.redirect(self.backend.auth_url())\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/python_social_auth-0.1.17-py2.7.egg/social/backends/oauth.py\" in auth_url\n  93.         token = self.unauthorized_token()\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/python_social_auth-0.1.17-py2.7.egg/social/backends/oauth.py\" in unauthorized_token\n  160.                                 method=self.REQUEST_TOKEN_METHOD)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/python_social_auth-0.1.17-py2.7.egg/social/backends/base.py\" in request\n  183.         response = request(method, url, *args, **kwargs)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/requests-1.2.3-py2.7.egg/requests/api.py\" in request\n  44.     return session.request(method=method, url=url, **kwargs)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/requests-1.2.3-py2.7.egg/requests/sessions.py\" in request\n  324.         prep = req.prepare()\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/requests-1.2.3-py2.7.egg/requests/models.py\" in prepare\n  226.         p.prepare_auth(self.auth, self.url)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/requests-1.2.3-py2.7.egg/requests/models.py\" in prepare_auth\n  428.             r = auth(self)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/requests_oauthlib-0.3.2-py2.7.egg/requests_oauthlib/core.py\" in __call__\n  65.                 unicode(r.url), unicode(r.method), None, r.headers)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/oauthlib-0.6.0-py2.7.egg/oauthlib/oauth1/rfc5849/__init__.py\" in sign\n  280.         request.oauth_params.append(('oauth_signature', self.get_oauth_signature(request)))\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/oauthlib-0.6.0-py2.7.egg/oauthlib/oauth1/rfc5849/__init__.py\" in get_oauth_signature\n  112.         uri, headers, body = self._render(request)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/oauthlib-0.6.0-py2.7.egg/oauthlib/oauth1/rfc5849/__init__.py\" in _render\n  186.             headers = parameters.prepare_headers(request.oauth_params, request.headers, realm=realm)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/oauthlib-0.6.0-py2.7.egg/oauthlib/oauth1/rfc5849/utils.py\" in wrapper\n  32.         return target(params, *args, **kwargs)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/oauthlib-0.6.0-py2.7.egg/oauthlib/oauth1/rfc5849/parameters.py\" in prepare_headers\n  58.         escaped_value = utils.escape(value)\nFile \"/Users/valerian/Documents/Web/waaave.com/env/lib/python2.7/site-packages/oauthlib-0.6.0-py2.7.egg/oauthlib/oauth1/rfc5849/utils.py\" in escape\n  57.                          'Got %s of type %s.' % (u, type(u)))\n\nException Type: ValueError at /account/login/twitter/\nException Value: Only unicode objects are escapable. Got None of type <type 'NoneType'>.\n```\n\nThanks in advance ;)\n", "created_at": "2013-11-26T13:03:11Z"}, {"body": "Hello,\n\nI noticed a regression between django-social-auth and python-social-auth (latest package version distributed on PyPi), which affects the Facebook Auth scope data.\n\nSeems that it's not being set anymore. I checked the source code and found out that the FACEBOOK_EXTENDED_PERMISSIONS settings is not being read (originally affected as a SCOPE in the strategy.py file in django-social-auth).\n\nThis breaks the associate_by_email pipeline which silently fails without storing any user email when we configure FACEBOOK_EXTENDED_PERMISSIONS to ['email']\n", "created_at": "2013-11-25T06:23:27Z"}, {"body": "Also fix_django examples, fix various documentation errors and grammar\n", "created_at": "2013-11-23T20:46:23Z"}, {"body": "", "created_at": "2013-11-23T17:41:30Z"}, {"body": "Hi, I'm a developer for [django-oscar](https://github.com/tangentlabs/django-oscar/), an e-commerce framework for Django. A user [reported](https://groups.google.com/forum/#!msg/django-oscar/Jcz6C09JeIk/SkkM6cQTL6UJ) that both django-oscar and python-social-auth set a `strategy` attribute on Django's request object. This means the projects are conflicting and can't be used together.\n\nWe will introduce namespacing for Oscar's attributes in the near future (https://github.com/tangentlabs/django-oscar/issues/979). I raised the issue here, because namespacing probably makes good sense for your project as well.\n", "created_at": "2013-11-22T15:39:34Z"}, {"body": "Hi,\n\nSome backends, for example vk or odnoklassniki provide a function (vk_api and odnoklassniki_api) to make additional API calls. In python-social-auth compared to django-social-auth this function now accepts additional backend param, which should be the backend object.\n\nWhat is the recommended way of getting this object outside the pipeline so that I could pass it to the function to make additional API calls. Should I just import a class and instantiate it or this object is already stored somewhere inside the user object ?\n\nThx\n", "created_at": "2013-11-22T10:59:14Z"}, {"body": "I can't find a way for LinkedIn to work.\n\nI get this error even in example (django_example):\n\nValueError at /login/linkedin/\nOnly unicode objects are escapable. Got None of type <type 'NoneType'>.\n", "created_at": "2013-11-22T03:16:41Z"}, {"body": "Fix weibo authentication issue.\n", "created_at": "2013-11-21T11:40:07Z"}, {"body": "Now we need to inlude all the default\n\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n    'myproject.models.user_profile_data',\n)\n\ninto settings to add a single line.\n\nBut the default SOCIAL_AUTH_PIPELINE can be changed in the future. \nSo it would be better to provide some option to add (or remove) just one line.\nSomething like:\nSOCIAL_AUTH_PIPELINE += ('myproject.models.user_profile_data',)\n", "created_at": "2013-11-21T10:14:08Z"}, {"body": "Hi,  I am trying to integrate python-social-auth into my application. I meet some problems when enable weibo backend.\n\nThe configurations like below.\n1. \n\n```\nAUTHENTICATION_BACKENDS = (\n    'social.backends.weibo.WeiboOAuth2',\n    'django.contrib.auth.backends.ModelBackend',\n) \n```\n1. \n\n```\nSOCIAL_AUTH_WEIBO_KEY = '*****'  // repalce the confidential key with star \nSOCIAL_AUTH_WEIBO_SECRET = '***' // remove the confidential secret with star\n```\n1. use the Django example to run the social authentication.\n\nAfter I enter my weibo account and click on login, the authentication failed at the step of http://test.com/complete/weibo/?state=A5aliysJJjDpLyPLdxjVZQirhPaPkAHs&code=9ea8dc11dba1b494415ad82d2b48e804\n\nSome exceptions thrown:\n\n```\nHTTPError at /complete/weibo/\n405 Client Error: Method Not Allowed\n```\n\nStacktrace:\n\n```\n/Library/Python/2.7/site-packages/social/apps/django_app/utils.py in wrapper\n            return func(request, backend, *args, **kwargs) ...\n\u25b6 Local vars\n/Library/Python/2.7/site-packages/social/apps/django_app/views.py in complete\n                       redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs) ...\n\u25b6 Local vars\n/Library/Python/2.7/site-packages/social/actions.py in do_complete\n                                 *args, **kwargs) ...\n\u25b6 Local vars\n/Library/Python/2.7/site-packages/social/strategies/base.py in complete\n        return self.backend.auth_complete(*args, **kwargs) ...\n\u25b6 Local vars\n/Library/Python/2.7/site-packages/social/backends/oauth.py in auth_complete\n                method=self.ACCESS_TOKEN_METHOD ...\n\u25b6 Local vars\n/Library/Python/2.7/site-packages/social/backends/oauth.py in request_access_token\n        return self.get_json(*args, **kwargs) ...\n\u25b6 Local vars\n/Library/Python/2.7/site-packages/social/backends/base.py in get_json\n        return self.request(url, *args, **kwargs).json() ...\n\u25b6 Local vars\n/Library/Python/2.7/site-packages/social/backends/base.py in request\n        response.raise_for_status() ...\n\u25b6 Local vars\n/Library/Python/2.7/site-packages/requests/models.py in raise_for_status\n\n```\n\nCould you help to trouble shooting this issue? Thanks. \n\nJoseph\n", "created_at": "2013-11-21T10:10:01Z"}, {"body": "We have three values in settings:\n\nSOCIAL_AUTH_ODNOKLASSNIKI_OAUTH2_KEY = ''\nSOCIAL_AUTH_ODNOKLASSNIKI_OAUTH2_SECRET = ''\nSOCIAL_AUTH_ODNOKLASSNIKI_PUBLIC_NAME = ''\n\nFrom documentation it's not clear what are they.\nOdnoklassniki provided such info:\nApplication ID: 195....\n\u041f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0439 \u043a\u043b\u044e\u0447 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: CB....\n\u0421\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:  98CE...\n\nI tried to set as follows:\nSOCIAL_AUTH_ODNOKLASSNIKI_OAUTH2_KEY = [Application ID]\nSOCIAL_AUTH_ODNOKLASSNIKI_OAUTH2_SECRET = '\u0421\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f'\nSOCIAL_AUTH_ODNOKLASSNIKI_PUBLIC_NAME = '\u041f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0439 \u043a\u043b\u044e\u0447 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f'\n\nBut I'm getting the error:\n{u'access_token': u'4....',\n u'error_code': 101,\n u'error_data': None,\n u'error_msg': u'PARAM_API_KEY : No application key',\n u'refresh_token': u'b82...',\n u'token_type': u'session'}\n", "created_at": "2013-11-21T09:49:11Z"}, {"body": "", "created_at": "2013-11-20T17:14:03Z"}, {"body": "[Documentation](http://psa.matiasaguirre.net/docs/pipeline.html#email-validation) points to SOCIAL_AUTH_BACKEND_FORCE_EMAIL_VALIDATION style setting, which seems to be ignored at [email_validation](https://github.com/omab/python-social-auth/blob/bfea859a738c09f6c6d8d179a7fbecfa96a1976a/social/pipeline/mail.py#L15).\n\nExtending the condition with something like `strategy.backend.setting('FORCE_EMAIL_VALIDATION', False)` fixes this issue for me.\n", "created_at": "2013-11-18T19:35:14Z"}, {"body": "Since django_social_auth is going to be deprecated in favor of this library, is there a way to migrate pre-existing apps to this library without losing any functionality.\nFor example, there was support for `pipelines` and `view decorators (dsa_view)` which I didn't find in the code (I might have not looked in the correct place).\nAlso, will the social_auth tables need to be dropped and recreated if moving the django project to this library?\n\nThanks!\n", "created_at": "2013-11-17T19:33:49Z"}, {"body": "The docs on the website are not up to date.\n\nFor ex: At the bottom of http://psa.matiasaguirre.net/docs/configuration/django.html an interim fix is mentioned for an issue with Django 1.6 but this is no longer needed. The docs in the repo were also updated in bb2f08127005091544a69208e9adf0aeccce9479 to reflect the same, but the website wasn't.\n", "created_at": "2013-11-17T06:37:48Z"}, {"body": "1) Fix a bug where extra data passed via Google+ were mostly ignored\n\n2) Enable \"offline\" mode by taking the additional step to exchange the code for a server-side access token and a refresh token. See https://developers.google.com/+/web/signin/server-side-flow\n", "created_at": "2013-11-17T06:31:21Z"}, {"body": "After authentication\n\n```\n File \".../python2.7/site-packages/social/backends/mailru.py\", line 36, in get_user_details\n   values['last_name'])\n\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 0-5: ordinal not in range(128)\n```\n\nLast name in russian.\n", "created_at": "2013-11-14T17:55:52Z"}, {"body": "Provide a user UID for fitbit provider.\n", "created_at": "2013-11-14T08:51:43Z"}, {"body": "Taking a look at the code, in OpenIdAuth.setup_request, a max_age of 0 will fail the 'if any(...)' check when preferred_policies and preferred_level_types evaluate to False.\n", "created_at": "2013-11-13T22:55:44Z"}, {"body": "", "created_at": "2013-11-13T09:01:31Z"}, {"body": "", "created_at": "2013-11-13T09:00:13Z"}, {"body": "", "created_at": "2013-11-13T08:52:56Z"}, {"body": "Hi, I got the problem when using weibo backend in `Django 1.4.5`\n\nI configured like this(Already created a web app in weibo developer site `sae.sina.com.cn`)\n\nin `settings.py`\n\n```\n  WEIBO_CLIENT_KEY=\"\"\n  WEIBO_CLIENT_SECRET=\"\"\n\n\nAUTHENTICATION_BACKENDS = (\n    'social.backends.weibo.WeiboOAuth2',\n    'django.contrib.auth.backends.ModelBackend',\n)\n```\n\nand edit a template `home.html` with this code:\n\n```\n{% load url from future %}\n          <a href=\"{% url 'social:begin' \"weibo\" %}\">Weibo Login</a> <br />\n```\n\n`views.py`\n\n```\ndef loginTest(request):\n    if request.user.is_authenticated():\n        return redirect('done')\n    return render_to_response('home.html', {\n            'client_id': getattr(settings, 'WEIBO_CLIENT_KEY', None),\n            'user': request.user,\n            },\n                              RequestContext(request))\n```\n\nit generate a url `http://127.0.0.1:8000/login/weibo/`\n\nclick it , will redirect to \n\n`https://api.weibo.com/oauth2/authorize?state=msHi0CsZbiAYjJGIo8ALBXYAEZ5NjWQ9&redirect_uri=http://127.0.0.1:8000/complete/weibo/&response_type=code&client_id=None`\n\nthe problem is the Parameter **client_id=None** , it surpose to be **client_id={WEIBO_CLIENT_KEY}**,  but it just failed to pass to the GET request here.\n", "created_at": "2013-11-12T05:48:30Z"}, {"body": "I have the following pipeline settings\n\n```\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details'\n)\n```\n\nI have the email address as tunav@gmail.com as registered and i have the google  plus account as tunav@gmail.com. \nWhen i log out and try to signup with google plus account, it creates a new account with same email address even  `'social.pipeline.social_auth.associate_by_email'` is added. Any ideas?\n", "created_at": "2013-11-11T13:50:58Z"}, {"body": "Currently, /login/non-existing-backend/ raises ValueError which presents itself as a 500 error to the user, which isn't nice. 404 is better.\n", "created_at": "2013-11-11T08:47:19Z"}, {"body": "Stopped work authorization through steam\nDjango==1.6\npython-social-auth==0.1.16\npython-openid==2.2.5\n\nhttp://awesomescreenshot.com/0c91xupqcf\n", "created_at": "2013-11-10T21:22:29Z"}, {"body": "How can I unit test authentication on my Django app using python-social-auth?\n\nI attempted this:\n\n```\n    self.c = Client()\n    self.u = User.objects.create(username=\"testuser\", password=\"password\", is_staff=True, is_active=True, is_superuser=True)\n    self.u.save()\n    self.auth = UserSocialAuth(user=self.u, provider=\"Facebook\")\n    self.auth.save()\n    self.c.login(username=self.u.username, password=self.u.password) \n```\n\nbut this call to login returns False and the user is not authenticated\n", "created_at": "2013-11-10T18:48:31Z"}, {"body": "I had a question, How to store the facebook profile picture of a user while logging in through facebook.\n\nI found this link which says how to do so using django-social-app, https://gist.github.com/kalamhavij/1662930.\n\nHow can I do the same using python-social-app ??\n", "created_at": "2013-11-10T14:14:28Z"}, {"body": "Fixed the URL for registering a Windows Live application.\n", "created_at": "2013-11-08T23:49:34Z"}, {"body": "The fix to #76 isn't correct. It causes another error when you have an expired association:\n\nhttps://github.com/omab/python-social-auth/blob/8b5894222b65e8aa3e18c0db56eab144b96cc961/social/store.py#L43-L48\n\n``` python\n        for assoc_id, association in self.assoc.oids(server_url, handle):\n            expires = self.expiresIn(association)\n            if expires > 0:\n                associations.append(association)\n            elif expires == 0:\n                expired.append(association.id)\n```\n\nThe last line here assumes `association` is an `Association` (Django model), but it's not. It's an `OpenIdAssociation`, and therefore has no `id` member.\n\n``` python\n                expired.append(association.id)\n```\n\nshould be:\n\n``` python\n                expired.append(assoc_id)\n```\n\nTraceback:\n\n```\nFile \"/Users/kbussell/.virtualenvs/tcdc/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  111.                         response = callback(request, *callback_args, **callback_kwargs)\nFile \"/Users/kbussell/.virtualenvs/tcdc/lib/python2.7/site-packages/social/apps/django_app/utils.py\" in wrapper\n  32.             return func(request, backend, *args, **kwargs)\nFile \"/Users/kbussell/.virtualenvs/tcdc/lib/python2.7/site-packages/social/apps/django_app/views.py\" in auth\n  12.     return do_auth(request.strategy, redirect_name=REDIRECT_FIELD_NAME)\nFile \"/Users/kbussell/.virtualenvs/tcdc/lib/python2.7/site-packages/social/actions.py\" in do_auth\n  25.     return strategy.start()\nFile \"/Users/kbussell/.virtualenvs/tcdc/lib/python2.7/site-packages/social/strategies/base.py\" in start\n  56.         if self.backend.uses_redirect():\nFile \"/Users/kbussell/.virtualenvs/tcdc/lib/python2.7/site-packages/social/backends/open_id.py\" in uses_redirect\n  215.         return self.openid_request().shouldSendRedirect()\nFile \"/Users/kbussell/.virtualenvs/tcdc/lib/python2.7/site-packages/social/backends/open_id.py\" in openid_request\n  221.                                          params))\nFile \"/Users/kbussell/.virtualenvs/tcdc/lib/python2.7/site-packages/openid/consumer/consumer.py\" in begin\n  353.             return self.beginWithoutDiscovery(service, anonymous)\nFile \"/Users/kbussell/.virtualenvs/tcdc/lib/python2.7/site-packages/openid/consumer/consumer.py\" in beginWithoutDiscovery\n  376.         auth_req = self.consumer.begin(service)\nFile \"/Users/kbussell/.virtualenvs/tcdc/lib/python2.7/site-packages/openid/consumer/consumer.py\" in begin\n  598.             assoc = self._getAssociation(service_endpoint)\nFile \"/Users/kbussell/.virtualenvs/tcdc/lib/python2.7/site-packages/openid/consumer/consumer.py\" in _getAssociation\n  1158.         assoc = self.store.getAssociation(endpoint.server_url)\nFile \"/Users/kbussell/.virtualenvs/tcdc/lib/python2.7/site-packages/social/store.py\" in getAssociation\n  48.                 expired.append(association.id)\n\nException Type: AttributeError at /user/login/yahoo/\nException Value: 'Association' object has no attribute 'id'\n```\n", "created_at": "2013-11-08T06:19:09Z"}, {"body": "Otherwise it is not possible to run testsuite on distributed tarball.\n", "created_at": "2013-11-07T11:03:50Z"}, {"body": "It's only started happening since 0.1.15, and it's kind of frustrating.\nDjango==1.5.5\npython-openid==2.2.5\nrequests==2.0.1\noauthlib==0.6.0\nrequests-oauthlib==0.4.0\nsix==1.4.1\n\nI'm not sure if there was a small bug in my code that got exacerbated by any changes in the latest release, but figured I'd post this anyways in case someone is seeing something similar.\n\nHere is the traceback:\nTypeError at /auth/login/google/\n\n<pre>\nTypeError: int() argument must be a string or a number, not 'Association'\n\nStacktrace (most recent call last):\n\n  File \"django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n  File \"social/apps/django_app/utils.py\", line 32, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"social/apps/django_app/views.py\", line 16, in auth\n    return do_auth(request.strategy, redirect_name=REDIRECT_FIELD_NAME)\n  File \"social/actions.py\", line 25, in do_auth\n    return strategy.start()\n  File \"social/strategies/base.py\", line 56, in start\n    if self.backend.uses_redirect():\n  File \"social/backends/open_id.py\", line 215, in uses_redirect\n    return self.openid_request().shouldSendRedirect()\n  File \"social/backends/open_id.py\", line 221, in openid_request\n    params))\n  File \"openid/consumer/consumer.py\", line 353, in begin\n    return self.beginWithoutDiscovery(service, anonymous)\n  File \"openid/consumer/consumer.py\", line 376, in beginWithoutDiscovery\n    auth_req = self.consumer.begin(service)\n  File \"openid/consumer/consumer.py\", line 598, in begin\n    assoc = self._getAssociation(service_endpoint)\n  File \"openid/consumer/consumer.py\", line 1158, in _getAssociation\n    assoc = self.store.getAssociation(endpoint.server_url)\n  File \"social/store.py\", line 51, in getAssociation\n    self.assoc.remove(expired)\n  File \"social/storage/django_orm.py\", line 127, in remove\n    cls.objects.filter(pk__in=ids_to_delete).delete()\n  File \"django/db/models/manager.py\", line 155, in filter\n    return self.get_query_set().filter(*args, **kwargs)\n  File \"django/db/models/query.py\", line 669, in filter\n    return self._filter_or_exclude(False, *args, **kwargs)\n  File \"django/db/models/query.py\", line 687, in _filter_or_exclude\n    clone.query.add_q(Q(*args, **kwargs))\n  File \"django/db/models/sql/query.py\", line 1271, in add_q\n    can_reuse=used_aliases, force_having=force_having)\n  File \"django/db/models/sql/query.py\", line 1202, in add_filter\n    connector)\n  File \"django/db/models/sql/where.py\", line 71, in add\n    value = obj.prepare(lookup_type, value)\n  File \"django/db/models/sql/where.py\", line 339, in prepare\n    return self.field.get_prep_lookup(lookup_type, value)\n  File \"django/db/models/fields/__init__.py\", line 324, in get_prep_lookup\n    return [self.get_prep_value(v) for v in value]\n  File \"django/db/models/fields/__init__.py\", line 555, in get_prep_value\n    return int(value)\n</pre>\n", "created_at": "2013-11-07T00:08:11Z"}, {"body": "If I redirect from the connect pipeline to a login page which on success redirects back to complete the pipeline, the `user` kwarg retains its previously set value of `None`, when I expect it to be replaced with the logged in user. This fix handles my use case, and it feels consistent\u2014treating the outcome of the redirect as another stage in the pipeline, overwriting previously set kwargs\u2014but I'm not sure if this breaks existing use cases that aren't covered by the tests.\n", "created_at": "2013-11-05T22:56:23Z"}, {"body": "This pull-request add tox configuration to test against all supported Python versions.\n\nHTTPretty is upgraded to 0.6.5 to support requests 2.0 (see https://github.com/gabrielfalcao/HTTPretty/pull/101).\nHTTPretty 0.7.0 is broken with Python 3 (see https://github.com/gabrielfalcao/HTTPretty/issues/119).\n\nThis allow to see failures locally without the need to wait for Travis CI to run tests.\n", "created_at": "2013-11-05T14:06:41Z"}, {"body": "Avoid error in Django middleware when building redirect URL message parameter.\n", "created_at": "2013-11-05T13:44:49Z"}, {"body": "Hi, I got the problem when using douban backend. \n\nI configured like this(Already created a web app in douban developer site)\n\n```\nSOCIAL_AUTH_DOUBAN_OAUTH2_KEY = ''\nSOCIAL_AUTH_DOUBAN_OAUTH2_SECRET = ''\nAdd 'social.backends.douban.DoubanOAuth2' into SOCIAL_AUTH_AUTHENTICATION_BACKENDS.\n```\n\nbut I got the exception  when I tried to login with douban account.\nAuthCanceled at /complete/douban-oauth2/\nAuthentication process canceled \n\nI didn't get some ideas why authentication process canceled. Could you help my trouble shooting? Thanks. \n", "created_at": "2013-11-05T04:03:25Z"}, {"body": "", "created_at": "2013-11-05T02:43:22Z"}, {"body": "I need some help creating a custom User model, in order to extend it.\n\nMy models.py is :\n\n```\nfrom mongoengine.django.auth import User \n\nclass User(User):\n    \"\"\"Extend Mongo Engine User model\"\"\"\n    foo = ListField(default=[])\n```\n\nSo I have updated the settings.py with:\n\n```\nMONGOENGINE_USER_DOCUMENT = 'apps.models.User'\nAUTH_USER_MODEL =  'mongo_auth.MongoUser'\nSOCIAL_AUTH_USER_MODEL =  'apps.models.User'\n```\n\nHowever on login I get:\n\n```\nValidationError: ValidationError (UserSocialAuth:526fab8ac36b440b4a8f080b) (A ReferenceField only accepts DBRef or documents: ['user'])\n```\n\nI checked I saw that the `526fab8ac36b440b4a8f080b` id is the user id in `user_social_auth` collection.\n", "created_at": "2013-11-05T00:54:44Z"}, {"body": "Tornado Support.\n", "created_at": "2013-11-02T08:41:33Z"}, {"body": "I have a web client (Javascript) that authenticates users with G+ and Facebook. The client then needs to authenticate with a REST API implemented with django-rest-framework. I have seen the previous discussions implementing this with dsa. But could not get this working with psa. Do you have any pointers?\n", "created_at": "2013-10-28T15:54:46Z"}, {"body": "...nds/oauth.py (line 340): \"ValueError, dictionary update sequence element #0 has length 31; 2 is required\". Taking 1st elementt of that list fixes the error.\n", "created_at": "2013-10-28T09:01:58Z"}, {"body": "In order to get my app to work with github I need to set the callback url to:\n\nhttp://<app url>/complete/github/\n\nCurrently the docs only say:\n\n> Register a new application at GitHub Developers, set your site domain as the callback URL or it might cause some troubles when associating accounts,\n\nI think it should read \n\n> Register a new application at GitHub Developers, setting the callback URL to \"http://<app url>/complete/github/\".\n\nIf this seems like the right idea I'll be happy to do the work.\n", "created_at": "2013-10-27T17:55:42Z"}, {"body": "This is just a conversation starter at this point. This is working locally, but I'm having a terrible time getting tests to run. I've followed [the directions](https://github.com/omab/python-social-auth/tree/master/social/tests) with no luck and am getting lots of errors like the one below.\n\n```\nAssertionError: <bound method EvernoteOAuth1ErrorTest.do_login of <social.apps.django_app.tests.EvernoteOAuth1ErrorTest testMethod=test_login>> should raise <class 'requests.exceptions.HTTPError'>, but raised <type 'exceptions.ValueError'>\n```\n", "created_at": "2013-10-24T05:49:48Z"}, {"body": "With django 1.6 the default session serializer is changed from `django.contrib.sessions.serializers.PickleSerializer` to `django.contrib.sessions.serializers.JSONSerializer` this causes an exception when partial pipelines is used. \n\nThe error that is thrown is:\n\n``` python\nTypeError: MergeDict(<QueryDict: {u'password1': [u'test'], u'password2': [u'test'], u'email': [test@example.com']}>, <QueryDict: {}>) is not JSON serializable\n```\n\nThis happens when the `response` key of the partial of saved to the session with a `MergeDict` as the value. I've added a conversion from `MergeDict` to `dict` in `DjangoStrategy`.\n", "created_at": "2013-10-23T16:08:31Z"}, {"body": "I have a custom model where I use email as the unique identification. When I have created a user with the email address example@example.com and then register a new user with the facebook social backend I get a dupicate entry error.\n\nAs I recall using the older django-social-auth 7.28 the existing user got updated. Now this doesn't happen, and it doesn't matter if I use username or email as the identification. I get the error.\n\nIf you need some more info please ask me.\n\n(1062, \"Duplicate entry 'example@example.com' for key 'email'\")\n\nHere is the traceback\n\n```\n[22/Oct/2013 11:41:39] \"GET /login/facebook/ HTTP/1.1\" 302 0\nInternal Server Error: /complete/facebook/\nTraceback (most recent call last):\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/social/apps/django_app/utils.py\", line 32, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/social/apps/django_app/views.py\", line 25, in complete\n    redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/social/actions.py\", line 54, in do_complete\n    *args, **kwargs)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/social/strategies/base.py\", line 69, in complete\n    return self.backend.auth_complete(*args, **kwargs)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/social/backends/facebook.py\", line 74, in auth_complete\n    return self.do_auth(access_token, response, *args, **kwargs)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/social/backends/facebook.py\", line 106, in do_auth\n    return self.strategy.authenticate(*args, **kwargs)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/social/strategies/django_strategy.py\", line 69, in authenticate\n    return authenticate(*args, **kwargs)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/django/contrib/auth/__init__.py\", line 60, in authenticate\n    user = backend.authenticate(**credentials)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/social/backends/base.py\", line 78, in authenticate\n    return self.pipeline(pipeline, *args, **kwargs)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/social/backends/base.py\", line 81, in pipeline\n    out = self.run_pipeline(pipeline, pipeline_index, *args, **kwargs)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/social/backends/base.py\", line 107, in run_pipeline\n    result = func(*args, **out) or {}\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/social/pipeline/user.py\", line 91, in user_details\n    strategy.storage.user.changed(user)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/social/storage/django_orm.py\", line 13, in changed\n    user.save()\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/django/db/models/base.py\", line 546, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/django/db/models/base.py\", line 626, in save_base\n    rows = manager.using(using).filter(pk=pk_val)._update(values)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/django/db/models/query.py\", line 605, in _update\n    return query.get_compiler(self.db).execute_sql(None)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/django/db/models/sql/compiler.py\", line 1014, in execute_sql\n    cursor = super(SQLUpdateCompiler, self).execute_sql(result_type)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/django/db/models/sql/compiler.py\", line 840, in execute_sql\n    cursor.execute(sql, params)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/django/db/backends/util.py\", line 41, in execute\n    return self.cursor.execute(sql, params)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/django/db/backends/mysql/base.py\", line 122, in execute\n    six.reraise(utils.IntegrityError, utils.IntegrityError(*tuple(e.args)), sys.exc_info()[2])\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/django/db/backends/mysql/base.py\", line 120, in execute\n    return self.cursor.execute(query, args)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/MySQLdb/cursors.py\", line 174, in execute\n    self.errorhandler(self, exc, value)\n  File \"/Users/marinopallvaldimarsson/.virtualenvs/gracipe/lib/python2.7/site-packages/MySQLdb/connections.py\", line 36, in defaulterrorhandler\n    raise errorclass, errorvalue\nIntegrityError: (1062, \"Duplicate entry 'marinopv@gmail.com' for key 'email'\")\n```\n\nThis is my user model\n\n``` python\nclass MyUserManager(BaseUserManager):\n    def create_user(self, email, username=None, password=None, date_of_birth=None, **extra_fields):\n        \"\"\"\n        Creates and saves a User with the given email, date of\n        birth and password.\n        \"\"\"\n        username=email\n        if not email:\n            raise ValueError('Users must have an email address')\n\n        # if not password:\n        #     raise ValueError('Users must have an password')\n\n        user = self.model(\n            email=self.normalize_email(email),\n            date_of_birth=date_of_birth,\n        )\n\n        user.set_password(password)\n        user.save(using=self._db)\n        return user\n\n\n\n    def create_superuser(self, email, password, date_of_birth=None):\n        \"\"\"\n        Creates and saves a superuser with the given email, date of\n        birth and password.\n        \"\"\"\n        user = self.create_user(email,\n            password=password,\n            date_of_birth=date_of_birth\n        )\n        user.is_admin = True\n        user.save(using=self._db)\n        return user\n\n\nclass MyUser(AbstractBaseUser):\n    email = models.EmailField(\n        verbose_name='email address',\n        max_length=255,\n        unique=True,\n        db_index=True,\n    )\n    first_name = models.CharField(_('first name'), max_length=30, blank=True)\n\n    last_name = models.CharField(_('last name'), max_length=30, blank=True)\n    date_of_birth = models.DateField(default=None,blank=True,null=True)\n    is_admin = models.BooleanField(default=False)\n    is_superuser = models.BooleanField(default=False)\n    is_staff = models.BooleanField(_('staff status'), default=False,\n        help_text=_('Designates whether the user can log into this admin '\n                    'site.'))\n    is_active = models.BooleanField(_('active'), default=True,\n        help_text=_('Designates whether this user should be treated as '\n                    'active. Unselect this instead of deleting accounts.'))\n    date_joined = models.DateTimeField(_('date joined'), default=timezone.now)\n    username = models.CharField(_('username'), max_length=30,\n        help_text=_('Required. 30 characters or fewer. Letters, numbers and '\n                    '@/./+/-/_ characters'),\n        validators=[\n            validators.RegexValidator(re.compile('^[\\w.@+-]+$'), _('Enter a valid username.'), 'invalid')\n        ])\n    objects = MyUserManager()\n\n    USERNAME_FIELD = 'email'\n\n    def is_authenticated(self):\n        \"\"\"\n        Always return True. This is a way to tell if the user has been\n        authenticated in templates.\n        \"\"\"\n        return True\n    def get_full_name(self):\n        # The user is identified by their email address\n        return self.email\n\n    def get_short_name(self):\n        # The user is identified by their email address\n        return self.email\n\n    # On Python 3: def __str__(self):\n    def __unicode__(self):\n        return self.email\n\n    def has_perm(self, perm, obj=None):\n        \"Does the user have a specific permission?\"\n        # Simplest possible answer: Yes, always\n        return True\n\n    def has_module_perms(self, app_label):\n        \"Does the user have permissions to view the app `app_label`?\"\n        # Simplest possible answer: Yes, always\n        return True\n\n    @property\n    def is_staff(self):\n        \"Is the user a member of staff?\"\n        # Simplest possible answer: All admins are staff\n        return self.is_admin\n```\n", "created_at": "2013-10-22T10:05:28Z"}, {"body": "I have a logged in user and want to connect a social auth to existing user. Is there a way to do that?\n", "created_at": "2013-10-21T16:32:08Z"}, {"body": "SOCIAL_AUHT_FACEBOOK_KEY --> SOCIAL_AUTH_FACEBOOK_KEY\n\nhttps://github.com/omab/python-social-auth/blob/master/social/backends/facebook.py#L5\n\nnoticed that when copy pasting + using the variable ;)\n", "created_at": "2013-10-15T09:59:43Z"}, {"body": "**v01.1.12**\n\nhttps://github.com/omab/python-social-auth/releases/tag/v01.1.12\n\nand v0.1.13 and v0.1.14 are missing\n", "created_at": "2013-10-15T09:22:48Z"}, {"body": "", "created_at": "2013-10-14T09:15:40Z"}, {"body": "I have a working django LinkedIn OAuth1 setup. I have tried to switch to OAuth2 by updating all my settings from SOCIAL_AUTH_LINKEDIN_\\* to SOCIAL_AUTH_LINKEDIN_OAUTH2_\\* and switching the backend to social.backends.linkedin.LinkedinOAuth2\n\nI get an AuthCancelled Exception. Triggered I think by by HTTPError('400 Client Error: Bad Request',)\n\nThe inbound URL looks like:\n\nhttp://bbm-dev.local:8000/complete/linkedin-oauth2/?redirect_state=c230xy4n04oSAG9x3xwcbEUgudTewZA1&code=AQShEKzGzz2n8lcfl7n9IxLwzWKs2R2g3kwFl5skR04z6Bk_LxYFQF3nrKSalI7Jk3mRGbFZAs60Csd2SW9yNwKZmPY39Iz7fx-E7T_2d2JIRvI7A-c&state=c230xy4n04oSAG9x3xwcbEUgudTewZA1\n\nHave I missed anything in my setup changes? Any other ideas? Thanks.\n", "created_at": "2013-10-14T08:25:01Z"}, {"body": "Hi,\n\nI have settings:\n\nSOCIAL_AUTH_LINKEDIN_SCOPE = ['r_basicprofile', 'r_emailaddress',]\nSOCIAL_AUTH_LINKEDIN_FIELD_SELECTORS = ['email-address', 'headline', 'industry', 'picture-url']\nSOCIAL_AUTH_LINKEDIN_EXTRA_DATA = [('id', 'id'),\n                                   ('first-name', 'first_name'),\n                                   ('last-name', 'last_name'),\n                                   ('email-address', 'email_address'),\n                                   ('picture-url', 'picture_url'),\n                                   ('headline', 'headline'),\n                                   ('industry', 'industry'),]\n\nThe linkedIn login works fine and I see the correct permissions scope on the linkedIn login dialogue.\n\nWhen I look in the database post logging in my extra_data contains:\n\n{\"first_name\": null, \"last_name\": null, \"access_token\": {\"oauth_token_secret\": \"xxxxxxxxxxx\", \"oauth_authorization_expires_in\": \"5183999\", \"oauth_token\": \"xxxxxxxxxxx\", \"oauth_expires_in\": \"5183999\"}, \"industry\": \"Computer Software\", \"picture_url\": null, \"headline\": \"Co-Founder at Bought By Many\", \"email_address\": null, \"id\": \"N_Nd_fVZMB\"}\n\nAs you can see most fields are null except industry and headline.\n\nThanks, Guy.\n", "created_at": "2013-10-11T16:12:22Z"}, {"body": "I seem to be having an issue with social auth and logging in via Facebook OAuth2 from Django.\n\nWhen logging in the browser appears to get stuck in an infinite loop from the app to Facebook and back again, but only when the view Facebook is returning to takes longer than a certain time to complete (normally a longer than a few seconds).\n\nIt is repeatable using the example Django app, it requires a next parameter is added initially:\n\n``` django\n<a href=\"{% url 'social:begin' \"facebook\" %}?next=/done/\">Facebook</a>\n```\n\nThis in itself will work, however if the view is delayed from completing (a simple time.sleep will do) it will begin to loop. Test view looks like this:\n\n``` python\n@login_required\ndef done(request):\n    \"\"\"Login complete view, displays user data\"\"\"\n\n    import time\n    time.sleep(5)\n\n    scope = ' '.join(GooglePlusAuth.DEFAULT_SCOPE)\n    return render_to_response('done.html', {\n        'user': request.user,\n        'plus_id': getattr(settings, 'SOCIAL_AUTH_GOOGLE_PLUS_KEY', None),\n        'plus_scope': scope\n    }, RequestContext(request))\n```\n\nIt does need to be a time >4 seconds it seems but it can vary. The console doesn't give much indication other than the requests are going through. However on odd occasions it will throw a \"error: [Errno 32] Broken pipe\" but continue looping. It's almost as if two requests are running simultaneously and competing with each other.\n\nIt's not overly clear why this is occurring, any thoughts where this might be going wrong? \n\n(Running latest version of social auth and Django 1.5.4 - also tried 1.4.8 & 1.4.5 and it is consistent)\n", "created_at": "2013-10-10T22:26:53Z"}, {"body": "If in config set `PROTECTED_USER_FIELDS = ['first_name', 'last_name']` then when user just registered through social network (facebook, linkedin etc) those fields will not be set and details for new users are empty.\n\nIn `SOCIAL_AUTH_PIPELINE` `'social.pipeline.user.user_details'` is below create_user pipeline\n", "created_at": "2013-10-10T07:53:20Z"}, {"body": "There's a lot of coupling in the classes, specially strategy and backend, this needs to be reduced.\n", "created_at": "2013-10-10T05:28:44Z"}, {"body": "I can't being logged with any social backend with Django 1.6b4.\n\nI have debugged and I realized that the `request` var (`strategy.request`) is not the same when accessing to final view (\"example.app.views.done\") as the `strategy.request`, which is modified with the real logged user.\n\nPS: The account association seems to work properly\n", "created_at": "2013-10-09T15:23:20Z"}, {"body": "How do I refresh token?\n\nWriting old django-social-auth style\n\nuser = User.objects.get(...)\nsocial = user.social_auth.filter(provider='google-oauth2')[0]\nsocial.refresh_token()\n\nbut,\n<type 'exceptions.TypeError'> refresh_token() takes at least 2 arguments (1 given)\n\nat /social/storage/base/UserMixin.refresh_token()\nHow do I get strategy param?\n", "created_at": "2013-10-09T02:33:16Z"}, {"body": "Pretty simple backend adding support for login used for openSUSE services.\n", "created_at": "2013-10-08T12:22:58Z"}, {"body": "Sorry, maybe it's a dumb question.\nBut after /done/, after everything ok, how can I get the user details, something like: {{ user.social_auth.gender }}. Thank you!\n", "created_at": "2013-10-08T02:37:33Z"}, {"body": "Hello,\n\nThere's an issue when working with Django and setting some of the SOCIAL_AUTH_*_URL to `reverse_lazy` proxies. The problem is caused in two functions:\n\n`sanitize_redirect`: Does a quick check first where ask if the given `redirect_to` is a True-able value and if it's instance of a string type (`six.string_types`). The problem here is that `reverse_lazy` returns a Django proxy (`reverse_lazy ~= lazy(reverse, str)`) and this is not validated by this first check, hence returning None.\n\n`do_complete`: Here we call `sanitize_redirect` if the settings say so, but there's no checking if `sanitize_redirect` returns `None`. So, if this is the case, a misleading Exception is raised (`'NoneType' object has no attribute 'find'`) since url is set to None and after that, somewhere in the way, a `url.find(...)` is called.\n\nI forked the project to provided solutions. For `sanitize_redirect` I'm using the `str.decode` method to force a `reverse_lazy` string to get evaluated. This was suggested as one of the solutions for this ticket: https://code.djangoproject.com/ticket/18776 The actual solution is better but is very django-dependent.\n\nFor `do_complete` I'm just adding the extra check after calling `sanitize_redirect`, maybe that check can be set in a lower indentation level.\n\nHope this helps.\n", "created_at": "2013-10-07T22:50:09Z"}, {"body": "I can't use with django, check the error when I try to use a fresh installation:\n\nWhen I try to run ./manage.py:\nhttps://dpaste.de/O6j0\n\nSorry because it could be a dumb question.\n\nAnyway,\nThx!\n", "created_at": "2013-10-07T22:16:05Z"}, {"body": "I am attempting to use Django oauth with Amazon. \nI have setup an application with amazon and placed my key/secret in settings.py\n\n```\nSOCIAL_AUTH_AMAZON_OAUTH2_KEY = ''blahkey'\nSOCIAL_AUTH_AMAZON_OAUTH2_SECRET = 'blahblahblabhsecret' \n```\n\nThe request (which returns an Error from Amazon) is made to amazon with url like so:\n\n```\nhttps://www.amazon.com/ap/oa?ie=UTF8&response_type=code&scope=profile&redirect_uri=http%3A%2F%2Flocalhost%3A8000%2Fcomplete%2Famazon%2F&state=oRNdyN6ewMMA6zqkkPc2k8ntR20JNtp2&client_id=None\n```\n\nNotice the client_id=None in the url. Could this be an issue?\n", "created_at": "2013-10-05T18:36:36Z"}, {"body": "Under some conditions `UserSocialAuth._meta.get_field('user').rel.to` does not return a Model class but a string of the form `'<app_label>.<model_name>'`. This results in an AttributeError in the Django admin.py which ultimately triggers an error in Django's RegexURLResolver. This is fixed by properly resolving the user model and return a class rather than a string.\n\n``` ipdb\nipdb> /home/markus/Coding/python-social-auth/social/apps/django_app/default/admin.py(5)<module>()\n      4 \n----> 5 from django.contrib import admin\n      6 from social.apps.django_app.default.models import UserSocialAuth, Nonce, \\\n\nipdb> n\n> /home/markus/Coding/python-social-auth/social/apps/django_app/default/admin.py(6)<module>()\n      5 from django.contrib import admin\n----> 6 from social.apps.django_app.default.models import UserSocialAuth, Nonce, \\\n      7                                                   Association\n\nipdb> \n> /home/markus/Coding/python-social-auth/social/apps/django_app/default/admin.py(10)<module>()\n      9 \n---> 10 _User = UserSocialAuth.user_model()\n     11 \n> /home/markus/Coding/python-social-auth/social/apps/django_app/default/models.py(59)user_model()\n     58 \n---> 59     @classmethod\n     60     def user_model(cls):\n\nipdb> n\n> /home/markus/Coding/python-social-auth/social/apps/django_app/default/models.py(61)user_model()\n     60     def user_model(cls):\n---> 61         return UserSocialAuth._meta.get_field('user').rel.to\n     62 \n\nipdb> UserSocialAuth._meta\n<Options for UserSocialAuth>\nipdb> UserSocialAuth._meta.get_field('user')\n<django.db.models.fields.related.ForeignKey: user>\nipdb> UserSocialAuth._meta.get_field('user').rel\n<django.db.models.fields.related.ManyToOneRel object at 0x7f8d29848fd0>\nipdb> UserSocialAuth._meta.get_field('user').rel.to\n'auth.BakeryUser'\n```\n", "created_at": "2013-10-04T13:40:01Z"}, {"body": "``` python\nTraceback (most recent call last):\n  File \"/home/markus/.venvs/bakery/lib/python3.3/site-packages/django/core/urlresolvers.py\", line 340, in urlconf_module\n    return self._urlconf_module\nAttributeError: 'RegexURLResolver' object has no attribute '_urlconf_module'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/markus/.venvs/bakery/lib/python3.3/site-packages/gunicorn/workers/sync.py\", line 131, in handle_request\n    respiter = self.wsgi(environ, resp.start_response)\n  File \"/home/markus/.venvs/bakery/lib/python3.3/site-packages/django/core/handlers/wsgi.py\", line 255, in __call__\n    response = self.get_response(request)\n  File \"/home/markus/.venvs/bakery/lib/python3.3/site-packages/django/core/handlers/base.py\", line 178, in get_response\n    response = self.handle_uncaught_exception(request, resolver, sys.exc_info())\n  File \"/home/markus/.venvs/bakery/lib/python3.3/site-packages/django/core/handlers/base.py\", line 220, in handle_uncaught_exception\n    if resolver.urlconf_module is None:\n  File \"/home/markus/.venvs/bakery/lib/python3.3/site-packages/django/core/urlresolvers.py\", line 342, in urlconf_module\n    self._urlconf_module = import_module(self.urlconf_name)\n  File \"/home/markus/.venvs/bakery/lib/python3.3/site-packages/django/utils/importlib.py\", line 35, in import_module\n    __import__(name)\n  File \"/home/markus/Coding/bakery/bakery/urls.py\", line 7, in <module>\n    admin.autodiscover()\n  File \"/home/markus/.venvs/bakery/lib/python3.3/site-packages/django/contrib/admin/__init__.py\", line 29, in autodiscover\n    import_module('%s.admin' % app)\n  File \"/home/markus/.venvs/bakery/lib/python3.3/site-packages/django/utils/importlib.py\", line 35, in import_module\n    __import__(name)\n  File \"/home/markus/Coding/python-social-auth/social/apps/django_app/default/admin.py\", line 13, in <module>\n    all_names = _User._meta.get_all_field_names()\nAttributeError: 'str' object has no attribute '_meta'\n```\n\nPull request follows.\n", "created_at": "2013-10-04T13:35:37Z"}, {"body": "I added python 3 compatible metaclass definition in JSONField and fix for strange error with django 1.6 and double-quote json.\n", "created_at": "2013-10-02T17:07:06Z"}, {"body": "Documentation states SOCIAL_AUTH_YAHOO_KEY, SOCIAL_AUTH_YAHOO_SECRET, but the library really wants SOCIAL_AUTH_YAHOO_OAUTH_KEY, SOCIAL_AUTH_YAHOO_OAUTH_SECRET.\n", "created_at": "2013-10-02T11:35:36Z"}, {"body": "thinking maybe this needs to change from:\nclass UserSocialAuth(Document, DjangoUserMixin):\n    \"\"\"Social Auth association model\"\"\"\n    user = ReferenceField(USER_MODEL, dbref=True)\n    provider = StringField(max_length=32)\n    uid = StringField(max_length=255, unique_with='provider')\n    extra_data = DictField()\n\nto:\nclass UserSocialAuth(Document, DjangoUserMixin):\n    \"\"\"Social Auth association model\"\"\"\n    user = ReferenceField(USER_MODEL)\n    provider = StringField(max_length=32)\n    uid = StringField(max_length=255, unique_with='provider')\n    extra_data = DictField()\n", "created_at": "2013-09-27T18:41:24Z"}, {"body": "I'm building a django application where I want users to be able to log in with their google accounts, do stuff, and logout. I am not wanting to keep data or anything like that, so I overrode the default disconnect pipeline and just removed the 'social.pipeline.disconnect.allowed_to_disconnect' check so that they would be able to disconnect without having any other information in the db (like a password). I modified the example app you provide to test this functionality but ran into a snag. When I click disconnect, it does not actually disconnect the user and still says \"You are logged in as [username].\" Here is some data for you.\n\n[27/Sep/2013 09:17:56] \"GET /login/google-oauth2/ HTTP/1.1\" 302 0\n[27/Sep/2013 09:17:57] \"GET /complete/google-oauth2/?state=2elSzt1mWspvP9MuUc6mFAuzSarns0j5&code=4/RvBkG11KwhtQr9X_qOGqeGW1iSOe.Qur7pBQX2wAWmmS0T3UFEsO6zJG_ggI HTTP/1.1\" 302 0\n[27/Sep/2013 09:17:57] \"GET /done/ HTTP/1.1\" 200 1208\n[27/Sep/2013 09:18:06] \"POST /disconnect/google-oauth2/1/ HTTP/1.1\" 302 0\n[27/Sep/2013 09:18:06] \"GET /done/ HTTP/1.1\" 200 1169\n\n![image](https://f.cloud.github.com/assets/4226546/1226410/de455de8-277f-11e3-8d8c-5051ed2af807.png)\n\n![image](https://f.cloud.github.com/assets/4226546/1226403/baf394b8-277f-11e3-8f6e-caea2bee4f99.png)\n\nIf you need any more info, or if I am just doing something wrong, please let me know! Thanks!\n", "created_at": "2013-09-27T14:20:26Z"}, {"body": "```\nTraceback:\nFile \"/Users/mlowicki/Projects/buildout/eggs/Django-1.5.4-py2.7.egg/django/core/handlers/base.py\" in get_response\n  115.                         response = callback(request, *callback_args, **callback_kwargs)\nFile \"/Users/mlowicki/Projects/buildout/eggs/Django-1.5.4-py2.7.egg/django/views/decorators/csrf.py\" in wrapped_view\n  77.         return view_func(*args, **kwargs)\nFile \"/Users/mlowicki/Projects/buildout/eggs/python_social_auth-0.1.13-py2.7.egg/social/apps/django_app/utils.py\" in wrapper\n  32.             return func(request, backend, *args, **kwargs)\nFile \"/Users/mlowicki/Projects/buildout/eggs/python_social_auth-0.1.13-py2.7.egg/social/apps/django_app/views.py\" in complete\n  25.                        redirect_name=REDIRECT_FIELD_NAME, *args, **kwargs)\nFile \"/Users/mlowicki/Projects/buildout/eggs/python_social_auth-0.1.13-py2.7.egg/social/actions.py\" in do_complete\n  54.                                  *args, **kwargs)\nFile \"/Users/mlowicki/Projects/buildout/eggs/python_social_auth-0.1.13-py2.7.egg/social/strategies/base.py\" in complete\n  71.         return self.backend.auth_complete(*args, **kwargs)\nFile \"/Users/mlowicki/Projects/buildout/eggs/python_social_auth-0.1.13-py2.7.egg/social/backends/facebook.py\" in auth_complete\n  68.             'code': self.data['code']\nFile \"/Users/mlowicki/Projects/buildout/eggs/Django-1.5.4-py2.7.egg/django/utils/datastructures.py\" in __getitem__\n  23.         raise KeyError\n\nException Type: KeyError at /complete/facebook/\nException Value: \n```\n\nself.data is set to:\n\n```\n{u'redirect_state': u'[snap]', u'state': u'[snap]', u'error_message': u'Potwierd\\u017a adres e-mail: Podany przez Ciebie adres e-mail zosta\\u0142 ju\\u017c zarejestrowany, ale Twoje konto nie zosta\\u0142o jeszcze potwierdzone. Wkr\\xf3tce otrzymasz wiadomo\\u015b\\u0107 e-mail z informacjami na temat sposobu potwierdzania konta.', u'error_code': u'1348058'}\n```\n", "created_at": "2013-09-26T16:14:39Z"}, {"body": "I'm using Django 1.5.4 and Django Social Auth 0.7.28 without a problem but wanted to make a switch because of deprecation. During connecting procedure with facebook i can never complete the procedure. I've tried going throught python-social-auth code to see what was going on but couldn't figure it out beside the django authenticate() returning None. \n\nConnecting procedure:\n\nclick on: <a href=\"{% url 'social:begin' 'facebook' %}\">\n\n127.0.0.1 - - [26/Sep/2013 11:33:52] \"GET /login/facebook/ HTTP/1.1\" 302 -\n127.0.0.1 - - [26/Sep/2013 11:33:53] \"GET /complete/facebook/?redirect_state=n4Bm...SeNJw&code=AQASofC...MRa57z3o&state=n4Bm...SeNJw HTTP/1.1\" 302 -\n127.0.0.1 - - [26/Sep/2013 11:33:53] \"GET /accounts/login-error/ HTTP/1.1\" 404 - (i dont have login-error currently implemented)\n\nThis is roughly the state of the various functions that python-social-auth calls\n1. do_auth facebook -> redirect /dialog/oauth\n2. complete facebook\n\ndo_complete\n\n```\nstrategy.request_data()\ndata:  {u'state': u'n4Bm...SeNJw', u'code': u'AQASofC...MRa57z3o', u'redirect_state': u'n4Bm...SeNJw'}\n\npartial is None\n\n- FacebookOAuth2 auth_complete\n    state: n4BmS...SeNJw\n    key: 211331415633513\n    url: https://graph.facebook.com/oauth/access_token\n    access_token:  CAAD...yDE\n\n- FacebookOAuth2 do_auth ---\n\n    - FacebookOAuth2 user_data ---\n        data:  {u'username': u'ho...c', ..., u'id': u'100...92'}\n\n    - DjangoStrategy authenticate--\n        args: ()\n        kwargs contains complete request\n        kwargs response: {\n            u'username': u'ho...c', ..., # other profile data\n            'access_token': u'CAAD...yDE',\n            u'id': u'100004043024192'\n        }\n        kwargs user: None\n        kwargs backend:  social.backends.facebook.FacebookOAuth2\n        DjangoStrategy backend:  social.backends.facebook.FacebookOAuth2\n\n        django.contrib.auth.authenticate returns  None\n\nnot authenticated, not user hence\nurl = login_error_url  # /accounts/login-error/\n```\n\nI've also documented all the changes from django-social-auth (OLD) to python-social-auth (NEW):\n\nDjango==1.5.4\ndjango-social-auth==0.7.28\npython-social-auth==0.1.13\n\n/accounts/middleware.py\n\nOLD:\nfrom social_auth.middleware import SocialAuthExceptionMiddleware\nfrom social_auth.exceptions import AuthCanceled\n\nNEW:\nfrom social.apps.django_app.middleware import SocialAuthExceptionMiddleware\nfrom social.exceptions import AuthCanceled\n\naccounts/templates/accounts/index.html\n\nOLD\n  {% if not social_auth.facebook %}\n    a href=\"{% url 'socialauth_associate_begin' 'facebook' %}\"\nNEW\n  {% if not social.facebook %}\n    a href=\"{% url 'social:begin' 'facebook' %}\"\n\naccounts/templates/accounts/login.html\n\nOLD:\nhref=\"{% url 'socialauth_begin' 'facebook' %}\"\n\nNEW:\nhref=\"{% url 'social:begin' 'facebook' %}\"\n\ncstorm/settings/base.py\n\nOLD INSTALLED_APPS\n'social_auth',\n\nNEW INSTALLED_APPS\n'social.apps.django_app.default',\n\nOLD:\nAUTHENTICATION_BACKENDS = (\n    'social_auth.backends.facebook.FacebookBackend',\n    'accounts.auth_backends.EmailOrUsernameBackend',\n )\n\nNEW:\nAUTHENTICATION_BACKENDS = (\n    'social.backends.facebook.FacebookOAuth2',\n    'accounts.auth_backends.EmailOrUsernameBackend',\n    # 'django.contrib.auth.backends.ModelBackend', #doesnt make a difference\n )\n\nOLD:\nLOGIN_REDIRECT_URL = '/accounts/postlogin/'\nLOGIN_ERROR_URL = '/accounts/login-error/'\n\nNEW:\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/accounts/postlogin/'\nSOCIAL_AUTH_LOGIN_ERROR_URL = '/accounts/login-error/'\n\nOLD:\nTEMPLATE_CONTEXT_PROCESSORS = (\n    'django.core.context_processors.tz',\n    'django.core.context_processors.request',\n    'django.contrib.messages.context_processors.messages',\n    'social_auth.context_processors.social_auth_by_name_backends',\n )\n\nNEW:\nTEMPLATE_CONTEXT_PROCESSORS = (\n    'django.core.context_processors.tz',\n    'django.core.context_processors.request',\n    'django.contrib.messages.context_processors.messages',\n    'social.apps.django_app.context_processors.backends',\n )\n\nOLD:\nSOCIAL_AUTH_PIPELINE = (\n    'social_auth.backends.pipeline.social.social_auth_user',\n    'social_auth.backends.pipeline.associate.associate_by_email',\n    'social_auth.backends.pipeline.user.get_username',\n    'social_auth.backends.pipeline.user.create_user',\n    'social_auth.backends.pipeline.social.associate_user',\n    'social_auth.backends.pipeline.social.load_extra_data',\n    'social_auth.backends.pipeline.user.update_user_details',\n    'accounts.social_auth_pipeline.get_profile_data',   # custom\n    'accounts.social_auth_pipeline.get_profile_avatar', # custom\n)\n\nNEW:\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_user',\n    'social.pipeline.social_auth.associate_by_email',\n    'social.pipeline.user.get_username',\n    'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n    'accounts.social_auth_pipeline.get_profile_data',   # custom\n    'accounts.social_auth_pipeline.get_profile_avatar', # custom\n)\n\nOLD:\nFACEBOOK_EXTENDED_PERMISSIONS = ['email', 'user_birthday']\n\nNEW:\n #FACEBOOK_EXTENDED_PERMISSIONS = ['email', 'user_birthday']\nSOCIAL_AUTH_FACEBOOK_EXTENDED_PERMISSIONS = ['email', 'user_birthday']\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email', 'user_birthday']\n\nOLD:\nFACEBOOK_APP_ID = '...'\nFACEBOOK_API_SECRET = '...'\n\nNEW:\nSOCIAL_AUTH_FACEBOOK_KEY = '...'\nSOCIAL_AUTH_FACEBOOK_SECRET = '...'\n\nurls.py\n\nOLD:\n(r'^sso/', include('social_auth.urls')),\n\nNEW:\n(r'^sso/', include('social.apps.django_app.urls', namespace='social')),\n", "created_at": "2013-09-26T10:14:36Z"}, {"body": "I recently upgraded from django-social-auth to python-social-auth (version  0.1.12) and a bit of code that had worked before is no longer working. I've got a model that points to UserSocialAuth or one of my own custom models through a generic FK, and it throws an error when I try to access it.\n\nHere is the traceback I get (and please let me know if there's any other information I could provide that would be helpful):\n\n```\nTraceback (most recent call last):\nFile \"/var/venvs/project_name/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\nFile \"/var/venvs/project_name/local/lib/python2.7/site-packages/django/contrib/auth/decorators.py\", line 25, in _wrapped_view\n    return view_func(request, *args, **kwargs)\nFile \"/var/venvs/project_name/local/lib/python2.7/site-packages/django/views/generic/base.py\", line 68, in view\n    return self.dispatch(request, *args, **kwargs)\nFile \"/var/venvs/project_name/local/lib/python2.7/site-packages/django/views/generic/base.py\", line 86, in dispatch\n    return handler(request, *args, **kwargs)\nFile \"/var/venvs/project_name/local/lib/python2.7/site-packages/django/views/generic/edit.py\", line 218, in get\n    return super(BaseUpdateView, self).get(request, *args, **kwargs)\nFile \"/var/venvs/project_name/local/lib/python2.7/site-packages/django/views/generic/edit.py\", line 154, in get\n    form = self.get_form(form_class)\nFile \"/var/sites/project_name/project_name/user_settings/views.py\", line 102, in get_form\n    return form_class(self.request.user, **self.get_form_kwargs())\nFile \"/var/sites/project_name/project_name/user_settings/forms.py\", line 75, in __init__\n    if user.fb_account:\nFile \"/var/venvs/project_name/local/lib/python2.7/site-packages/django/utils/functional.py\", line 205, in inner\n    return func(self._wrapped, *args)\nFile \"/var/venvs/project_name/local/lib/python2.7/site-packages/django/contrib/contenttypes/generic.py\", line 124, in __get__\n    ct = self.get_content_type(id=ct_id, using=instance._state.db)\nFile \"/var/venvs/project_name/local/lib/python2.7/site-packages/django/contrib/contenttypes/generic.py\", line 60, in get_content_type\n    return ContentType.objects.db_manager(using).get_for_id(id)\nFile \"/var/venvs/project_name/local/lib/python2.7/site-packages/django/contrib/contenttypes/models.py\", line 107, in get_for_id\n    self._add_to_cache(self.db, ct)\nFile \"/var/venvs/project_name/local/lib/python2.7/site-packages/django/contrib/contenttypes/models.py\", line 122, in _add_to_cache\n    key = (model._meta.app_label, model._meta.object_name.lower())\nAttributeError: 'NoneType' object has no attribute '_meta'\n```\n", "created_at": "2013-09-25T04:23:03Z"}, {"body": "When I try to setup the library with the mongoengine it fails with a `ImportError: No module named auth`.\n\nI have explained the problem in stackoverflow, <a  href='http://stackoverflow.com/questions/18947938/python-social-auth-fails-with-mongoengine-django'> here </a> .\n\nIs it a compatibility bug or have I missed something? Thanks\n", "created_at": "2013-09-22T20:08:57Z"}, {"body": "Sorry, but I have really strong integration of this plugin with my project, and I've been struggling with this problem and i can't found the solution.\n- When I login with twitter working properly.\n- When I associate my current account to my facebook working properly\n- But when I try to login with my facebook account without user login it redirects to /complete/facebook/?redirect_state=(to big param) when should redirect me to \"/\" path and it throw me a error i think this it's a bug but maybe not.\n\n```\nTypeError at /complete/facebook/\n\ndatetime.datetime(2013, 11, 19, 8, 1, 8, 318871, tzinfo=<UTC>) is not JSON serializable\n\nRequest Method: GET\nRequest URL: (url)/complete/facebook/?redirect_state=(long param)\nDjango Version: 1.5.4\nException Type: TypeError\nException Value:    \ndatetime.datetime(2013, 11, 19, 8, 1, 8, 318871, tzinfo=<UTC>) is not JSON serializable\nException Location: (path)/python/lib/python2.7/json/encoder.py in default, line 178\n```\n\n-----EDIT\nI think it might be a problem with the redirect, in facebook app there is a other different a /complete/facebook/ maybe it ignores it for some reason\n\nThanks\n", "created_at": "2013-09-20T22:04:00Z"}, {"body": "When I try to install the databases in django 1.5.4  I get this: \nPicklingError: Can't pickle <class 'django.db.models.fields.subclassing.JSONField'>: attribute lookup django.db.models.fields.subclassing.JSONField failed \n\n--EDIT\nThis error appears when not use south\n", "created_at": "2013-09-20T19:23:57Z"}, {"body": "w/ the following configuration, first, last, and email are showing up in the mongoengine user documents but not in the user_social_auth documents\n\nSOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE = ['r_fullprofile', 'r_emailaddress', 'rw_nus']\nSOCIAL_AUTH_LINKEDIN_OAUTH2_FIELD_SELECTORS = ['summary', 'positions', 'email-address', 'headline', 'industry', 'educations']\nSOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [('id', 'id'),\n                                          ('first-name', 'first_name'),\n                                          ('last-name', 'last_name'),\n                                          ('summary', 'summary'),\n                                          ('email-address', 'email-address'),\n                                          ('headline', 'headline'),\n                                          ('positions', 'positions'),\n                                          ('industry', 'industry'),\n                                          ('educations', 'educations')]\n\nAll of the data is captured, I just would have expected the email, first, and last name to be captured in both places (user and user_social_auth).\n\nrs0:PRIMARY> db.user_social_auth.find({user: ObjectId('5222bf9ec64c8c9629cce5cd')}).pretty()\n{\n    \"_id\" : ObjectId(\"5222bf9ec64c8c9629cce5ce\"),\n    \"extra_data\" : {\n        \"email-address\" : null,\n        \"last_name\" : null,\n        \"industry\" : \"Internet\",\n        \"first_name\" : null,\n        \"headline\" : \"PaaS Evangelist\",\n        \"id\" : \"ZURjBbzFZH\"\n    },\n    \"provider\" : \"linkedin-oauth2\",\n    \"uid\" : \"ZURjBbzFZH\",\n    \"user\" : ObjectId(\"5222bf9ec64c8c9629cce5cd\")\n}\n\nThe corresponding User:\n\n{\n    \"_cls\" : \"User\",\n    \"_id\" : ObjectId(\"5222bf9ec64c8c9629cce5cd\"),\n    \"date_joined\" : ISODate(\"2013-09-01T04:16:30.637Z\"),\n    \"email\" : \"dblad_**oo.com\",\n    \"first_name\" : \"D__id\",\n    \"is_active\" : true,\n    \"is_staff\" : false,\n    \"is_superuser\" : false,\n    \"last_login\" : ISODate(\"2013-09-20T16:09:29.834Z\"),\n    \"last_name\" : \"Bl__o\",\n    \"password\" : *__,\n    \"username\" : \"Da_***ado\"\n}\n", "created_at": "2013-09-20T16:19:32Z"}, {"body": "Doesn't work without ACCESS_TOKEN_METHOD = 'POST' in social.backends.odnoklassniki.OdnoklassnikiOAuth2 . This is mentioned in their docs as well (http://apiok.ru/wiki/pages/viewpage.action?pageId=12878032)\n", "created_at": "2013-09-20T11:33:18Z"}, {"body": "Fix spelling\n", "created_at": "2013-09-18T04:16:48Z"}, {"body": "Three new pipeline functions were added into the default pipeline between versions 0.1.11 and 0.1.12. If customizing pipeline, those 3 are needed\n\nhttps://github.com/omab/python-social-auth/commit/ef7b22d066597eb36765c0f7daddfc9d89f74e52#L4R134\n", "created_at": "2013-09-17T18:49:27Z"}, {"body": "improve grammar for clarity\n", "created_at": "2013-09-15T19:09:24Z"}, {"body": "The documented way of setting the permissions scope for facebook is:\n\n```\nSOCIAL_AUTH_FACEBOOK_EXTENDED_PERMISSIONS = ['email']\n```\n\nThis was not working and after looking at the source code I found that it is working with:\n\n```\nSOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\n```\n\nI guess we have a documentation bug here.\n", "created_at": "2013-09-12T17:09:24Z"}, {"body": "The documentation (http://psa.matiasaguirre.net/docs/html/backends/google.html) refers to a parameter, SOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_SCOPE, that can be set (for example to ['https://mail.google.com'] to extend the default authorisation scope.\n\nSOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_SCOPE does not appear to be utilised by backend/google.py at all and setting it has no effect on the scope.\n\nSetting SOCIAL_AUTH_GOOGLE_SCOPE = ['https://mail.google.com'] does extend the scope.\n", "created_at": "2013-09-12T00:56:03Z"}, {"body": "Not an issue, just an enhancement: It would be great if you could add a pyramid example.\n\ncheers\n", "created_at": "2013-09-10T19:45:34Z"}, {"body": "OAuth2 providers expect the url to be an unquoted value.\n", "created_at": "2013-09-10T00:12:00Z"}, {"body": "", "created_at": "2013-09-09T02:03:52Z"}, {"body": "Add box.net backend along with tests.  Also added box.net to the example applications.\n", "created_at": "2013-09-08T21:03:55Z"}, {"body": "It's saved as `<_sre.SRE_Match object at 0x2b189cbe6990>` instead of actual ID.\n\nAs a side note, I just started using this repo after I found out you deleted `requests` branch from `django-social-auth` repo. Is this package going to replace `django-social-auth` in the future?\n", "created_at": "2013-09-01T18:55:32Z"}, {"body": "I believe I have it set up correctly\u2014it redirects me as expected to Github to sign in, and then github forwards my browser back to the app, where I land on a 500. There's no python error or backtrace shown either in the browser or command line\u2014just this sequence:\n\n10.25.0.217 - - [30/Aug/2013 15:48:46] \"GET / HTTP/1.1\" 200 -\n10.25.0.217 - - [30/Aug/2013 15:48:52] \"GET /login/github/ HTTP/1.1\" 302 -\n10.25.0.217 - - [30/Aug/2013 15:48:53] \"GET /complete/github/?code=7900ff5b...ae1c&redirect_state=n6tqyniCa...s9tf8yXE0&state=n6tqyniCaD....tf8yXE0 HTTP/1.1\" 500 -\n\nAs I've already added the app on Github at this point, it's an immediate turnaround, but I see the same error when I have to click through manually. \n\nNote: I'm also seeing a problem where the initial pageload triggers a \"'Session' object has no attribute '_model_changes'\" from what looks to be some SQLAlchemy initialization stuff. Subsequent pageloads appear to work correctly, though, so I'm not certain that's a related issue.\n", "created_at": "2013-08-30T20:25:49Z"}, {"body": "{\"code\": 400, \"error_type\": \"OAuthException\", \"error_message\": \"Redirect URI does not match registered             redirect URI\"}\n\non instargam side everything seems to be correct\n", "created_at": "2013-08-25T15:27:32Z"}, {"body": "After authentication I have in table 'social_auth_usersocialauth' extra_data={\"token_type\": \"Bearer\", \"access_token\": \"ya29.AHES6ZQtbhA1K-CmCn8bvnZy.................AgCfk8\", \"expires\": 3599} without refresh_token. I think refresh_token is a required part of response.\n", "created_at": "2013-08-15T09:34:48Z"}, {"body": "Currently I don't see support for linkedin oauth2. Is it supported?\n", "created_at": "2013-08-09T23:39:40Z"}, {"body": "This pull request fixes two bugs I encountered when using the SQLAlchemy orm.\n1. The disconnect method doesn't commit the session after removing the association, preventing the association from being really deleted.\n2. Calling the **remove** method of a `SQLAlchemyAssociationMixin` raise an `InvalidRequestError: Could not evaluate current criteria in Python. Specify 'fetch' or False for the synchronize_session parameter.`\n", "created_at": "2013-07-15T12:11:29Z"}, {"body": "The Steam backend returns an invalid user id.\nIn [steam.py#37](https://github.com/omab/python-social-auth/blob/3ca4d637ca2eab7710a59b321c1fc786c4906b64/social/backends/steam.py#L37), the whole `MatchObject` is returned instead of the subgroup.\nAdding `.group(1)` fixes the problem.\n", "created_at": "2013-07-15T09:17:00Z"}, {"body": "Flask is [now using](http://flask.pocoo.org/docs/upgrading/#upgrading-to-010) JSON instead of pickle to serialize session cookies.\npython-openid adds two objects (`_yadis_services__openid_consumer_`, `_openid_consumer_last_token`) that can't be serialized with JSON resulting in an error `is not JSON serializable` (a similar issue can be be found [here](https://github.com/openid/python-openid/issues/17)).\n\nThis pull request is mainly copy-pasted from [this commit](https://github.com/mitsuhiko/flask-openid/commit/a7993a1f1f4e76e8df801dd436b5ae869a1a4de1) and adds a session wrapper that will take care of pickle.dumps and pickle.loads the two objects so they can be serialized to JSON.\n", "created_at": "2013-06-30T09:38:55Z"}, {"body": "While using web.py and trying to disassociate accounts, I kept running into an error:\n\n``` python\n File \"../../social/apps/webpy_app/utils.py\", line 37, in wrapper\n    redirect_uri=uri, *args, **kwargs)\n  File \"../../social/apps/webpy_app/utils.py\", line 26, in load_strategy\n    return get_strategy(backends, strategy, storage, *args, **kwargs)\nTypeError: get_strategy() got multiple values for keyword argument 'request'\n```\n\nThis pull request fixed the problem, and passes all nosetests as well.\n", "created_at": "2013-06-24T23:42:00Z"}, {"body": "While trying to associate and disassociate accounts under web.py, I started receiving this TypeError. I went through and removed the occurrences of keyword arguments placed before _args and *_kwargs. I tried to keep the variable **kwargs everywhere I could for flexibilty. It's tested under web.py.\n", "created_at": "2013-06-21T05:09:15Z"}, {"body": "", "created_at": "2013-06-20T14:28:22Z"}, {"body": "The response default can be a dict because, inside the method, you are using this similar as a dict, but in future cases that you need the Response object this will fail.\n", "created_at": "2013-06-13T19:24:17Z"}, {"body": "In FacebookAppOAuth2.auth_complete, you make the call to do_auth with the parameter expires instead the expected parameter response, and it falls.\n", "created_at": "2013-06-13T04:26:27Z"}, {"body": "Hi,\n\nI come accross this issue today while working with a custom user model on django 1.5. Code from psa was failing when there was no field named \"username\". I think this pull request can solve this issue in a backwards compatible way.\n\nMongoEngine: I've never work with it, don't know if the same changes should be included.\nDSA: If you want me to, tomorrow I write the solution also for django-social-auth.\n\nThanks for your work!\n", "created_at": "2013-05-20T19:49:03Z"}, {"body": "Add Trello backend oauth support\n", "created_at": "2013-05-20T07:31:10Z"}, {"body": "", "created_at": "2013-05-17T20:03:11Z"}, {"body": "I'm about to add a new social backend and I'm not sure what's the difference between the `get_user_details()` and `user_data()` methods. In this particular backend, the response from the `ACCESS_TOKEN_URL` has almost no user details other than the token itself; all details are fetched from a separate api call to the service. So I tried returning an empty dict from `get_user_details()` but apparently the username is autogenerated in this case, which is not what I want. I can make the api call to the service to retrieve the user data in `get_user_details()` but then what's the point of having `user_data()`?\n\nThanks,\nGeorge\n", "created_at": "2013-05-17T10:33:54Z"}, {"body": "Two bugs fixed and vkontakte backend renamed to vk.com\n", "created_at": "2013-04-23T10:10:18Z"}, {"body": "I have just override ACCESS_TOKEN_METHOD from default value to POST. Before that it returned 401 Unauthorized error\n", "created_at": "2013-04-20T17:31:35Z"}, {"body": "I've followed both the tutorial and examples/flask_example but I keep getting error about missing social_auth_usersocialauth relation.\n\nOne thing I had to change in the sample was\n`Base.metadata.create_all(bind=Base)`\n(Base was missing Model) to\n`Base.metadata.create_all(bind=db.engine)`\n\nTraceback: https://gist.github.com/skakri/5282381\n\nI haven't tried to set up relation manually (I'm not proficient in postgresql).\n", "created_at": "2013-03-31T23:13:29Z"}, {"body": "Hi,\n\nI received [a comment](http://news.ycombinator.com/item?id=5458949) today expressing python-social-auth's interest in using rauth provided rauth runs on Python 3. Unfortunately, today it is does not. However there have been [efforts](https://github.com/litl/rauth/pull/26) and it's on my radar, e.g. slated for the 0.6.0 release.\n\nIt would be fantastic if the Python community wanted to work on this. Certainly if there's a demand for rauth on Python 3 I want to see that demand met. However given I can't give a definitive timeline for this, it would be great if others wanted to take the lead on this a bit. I could probably contribute alongside these efforts as well, albeit I probably won't be able to devote huge chunks of my time to it.\n\nIt's probably feasible to revive the previous efforts. I'm not sure exactly how much work would be involved in making things work with Python 3. The good news is Requests should be good to go so the hardest part may be organizing it sanely and getting the tests to pass.\n\nAnyway to be clear, this is not a python-social-auth issue, but an issue that lies upstream with rauth. But that said. I wanted to open up a dialogue and confirm interest.\n\nThanks!\n", "created_at": "2013-03-29T02:49:31Z"}, {"body": "", "created_at": "2013-03-03T18:53:14Z"}, {"body": "at first sight it does not seem to serve a purpose\n_edit_\nhttps://github.com/omab/python-social-auth/blob/master/social/apps/flask_app/models.py#L88\n", "created_at": "2013-02-27T10:26:18Z"}]